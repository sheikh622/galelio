{"version":3,"sources":["views/auth/socialLogin/component/SocialLogin.js","views/auth/socialLogin/index.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["SocialLoginForm","loginProp","others","theme","useTheme","dispatch","useDispatch","navigate","useNavigate","useState","checked","setChecked","walletAddress","setWalletAddress","location","useLocation","handleConnect","window","ethereum","request","method","response","address","utils","getAddress","type","SNACKBAR_OPEN","open","message","variant","alertSeverity","console","log","useEffect","setWallet","enableReinitialize","initialValues","firstName","state","socal","user","lastName","email","validationSchema","Yup","shape","required","max","onSubmit","values","setLoader","signupsocial","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","InputLabel","sx","color","palette","mode","className","htmlFor","FormControl","typography","customInput","fullWidth","error","Boolean","TextField","placeholder","margin","value","name","onBlur","onChange","inputProps","FormHelperText","id","Stack","direction","alignItems","justifyContent","spacing","FormControlLabel","control","Checkbox","event","target","label","Button","onClick","slice","submit","Box","mt","AnimateButton","disableElevation","disabled","size","AuthWrapper","Grid","container","minHeight","background","Helmet","charSet","item","md","lg","position","alignSelf","display","xs","BackgroundPattern1","AuthCardWrapper","sm","Typography","noWrap","component","marginTop","src","galileoWhite","alt","width","galileo","mb","SocialLogin","Divider","Link","to","textDecoration","styled","backgroundColor","children","other","borderRadius","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/45.aec97d10.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport \"@fontsource/source-sans-pro\";\r\nimport \"@fontsource/public-sans\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ethers, utils } from 'ethers';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    useMediaQuery,\r\n    Divider\r\n} from '@mui/material';\r\nimport { useLocation } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { signupsocial, setLoader } from '../../../../redux/auth/actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setWallet } from 'redux/auth/actions';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\n\r\nconst SocialLoginForm = ({ loginProp, ...others }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [checked, setChecked] = useState(true);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [walletAddress, setWalletAddress] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const location = useLocation();\r\n\r\n    const handleConnect = async () => {\r\n        const response = await window?.ethereum?.request({ method: 'eth_requestAccounts' });\r\n        if (response) {\r\n            if (!window.ethereum) {\r\n                dispatch({\r\n                    type: SNACKBAR_OPEN,\r\n                    open: true,\r\n                    message: 'No crypto wallet found. Please install it.',\r\n                    variant: 'alert',\r\n                    alertSeverity: 'info'\r\n                });\r\n                console.log('No crypto wallet found. Please install it.');\r\n                // toast.error('No crypto wallet found. Please install it.');\r\n            }\r\n\r\n            // else if (window?.ethereum?.networkVersion !== '5') {\r\n            //     console.log('window?.ethereum?.networkVersion !== 5', window?.ethereum?.networkVersion);\r\n            //     dispatch({\r\n            //         type: SNACKBAR_OPEN,\r\n            //         open: true,\r\n            //         message: 'Please change your Chain ID to Goerli',\r\n            //         variant: 'alert',\r\n            //         alertSeverity: 'info'\r\n            //     });\r\n            //     console.log('Please change your Chain ID to Goerli');\r\n            //     setWalletAddress();\r\n            // }\r\n            else {\r\n                const address = utils?.getAddress(response[0]);\r\n                setWalletAddress(address);\r\n                dispatch({\r\n                    type: SNACKBAR_OPEN,\r\n                    open: true,\r\n                    message: 'Success',\r\n                    variant: 'alert',\r\n                    alertSeverity: 'success'\r\n                });\r\n            }\r\n        } else {\r\n            console.log('No crypto wallet found. Please install it.');\r\n            // toast.error('No crypto wallet found. Please install it.');\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setWallet(walletAddress));\r\n    }, [walletAddress]);\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    firstName: location.state?.socal?.user?.firstName,\r\n                    lastName: location.state?.socal?.user?.lastName ? location.state?.socal?.user?.lastName : ' ',\r\n                    email: location.state?.socal?.user?.email,\r\n                    walletAddress: '',\r\n                    address: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    firstName: Yup.string().required('First Name is required!').max(42, 'First Name can not exceed 42 characters'),\r\n                    // .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Name'),\r\n\r\n                    lastName: Yup.string().required('Last Name is required!').max(42, 'Last Name can not exceed 42 characters'),\r\n                    // .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Name'),\r\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\r\n\r\n                    address: Yup.string().max(255).required('Address is required!')\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    if (walletAddress == '') {\r\n                        dispatch({\r\n                            type: SNACKBAR_OPEN,\r\n                            open: true,\r\n                            message: 'Please connect to your wallet',\r\n                            variant: 'alert',\r\n                            alertSeverity: 'info'\r\n                        });\r\n                    }\r\n                    await dispatch(setLoader(true));\r\n                    dispatch(\r\n                        signupsocial({\r\n                            firstName: values.firstName,\r\n                            lastName: values.lastName,\r\n                            email: values.email,\r\n                            walletAddress: walletAddress,\r\n                            address: values.address,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <InputLabel\r\n                            sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                            className=\"authFont\"\r\n                            htmlFor=\"outlined-adornment-email-login\"\r\n                        >\r\n                            First Name{' '}\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.firstName && errors.firstName)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"First Name\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"name\"\r\n                                value={values.firstName}\r\n                                name=\"firstName\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.firstName && errors.firstName && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                    {errors.firstName}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <InputLabel\r\n                            sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                            className=\"authFont\"\r\n                            htmlFor=\"outlined-adornment-email-login\"\r\n                        >\r\n                            Last Name{' '}\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.lastName && errors.lastName)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"Last Name\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"lastName\"\r\n                                value={values.lastName}\r\n                                name=\"lastName\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.lastName && errors.lastName && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                    {errors.lastName}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <InputLabel\r\n                            sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                            className=\"authFont\"\r\n                            htmlFor=\"outlined-adornment-email-login\"\r\n                        >\r\n                            Email\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.email && errors.email)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"Email\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <InputLabel\r\n                            sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                            className=\"authFont\"\r\n                            htmlFor=\"outlined-adornment-email-login\"\r\n                        >\r\n                            Delivery Address\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.address && errors.address)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"Delivery Address\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"address\"\r\n                                value={values.address}\r\n                                name=\"address\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                // helperText=\"Some important text\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.address && errors.address && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                    {errors.address}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"By checking you agree to our Terms and Conditions\"\r\n                            />\r\n                        </Stack>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                handleConnect();\r\n                            }}\r\n                        >\r\n                            {walletAddress ? walletAddress.slice(0, 5) + '...' + walletAddress.slice(38, 42) : 'Connect with wallet'}\r\n                        </Button>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    className=\"signbuttonMarket\"\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign up\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SocialLoginForm;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Box } from '@mui/material';\r\nimport {Helmet} from \"react-helmet\";\r\nimport galileo from 'assets/images/galileo.png';\r\nimport galileoWhite from 'assets/images/galileo-white.png';\r\n// project imports\r\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\r\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\r\nimport SocialLogin from './component/SocialLogin';\r\n\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\n\r\n// assets\r\n\r\n// styles\r\n\r\n// ================================|| AUTH1 - LOGIN ||================================ //\r\n\r\nconst SocialLoginForm = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ minHeight: '100vh', background: theme.palette.mode === 'dark' ? '#000' : '#fff' }}\r\n            >\r\n            <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>  Social Login</title>\r\n          \r\n        </Helmet>\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ display: { xs: 'block', sm: 'block', md: 'none', lg: 'none' } }}>\r\n                                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{ marginTop: '5px' }}>\r\n                                        {theme.palette.mode === 'dark' ? (\r\n                                            <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\r\n                                        ) : (\r\n                                            <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\r\n                                        )}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\r\n                                        Social Signup\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <SocialLogin />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                    <Typography component={Link} to=\"/login\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                        Already have an account?\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default SocialLoginForm;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            borderRadius:'4px',\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth-pattern.png';\r\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '97%',\r\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n               \r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n               margin:'10px',\r\n              \r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n"],"sourceRoot":""}