{"version":3,"sources":["views/auth/resetPassword/ResetPassword.js","views/auth/resetPassword/index.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["ResetPasswordForm","token","others","theme","useTheme","dispatch","useDispatch","navigate","useNavigate","useState","showPassword","setShowPassword","showconfirmPassword","setShowconfirmPassword","handleClickShowPassword","handleClickShowconfirmPassword","handleMouseDownPassword","event","preventDefault","handleMouseDownconfirmPassword","initialValues","password","confirmPassword","validationSchema","Yup","shape","max","required","matches","when","is","val","length","then","oneOf","onSubmit","values","console","log","resetPassword","newPassword","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","InputLabel","sx","color","palette","mode","className","htmlFor","FormControl","fullWidth","error","Boolean","TextField","placeholder","variant","margin","name","type","id","autoComplete","onBlur","onChange","inputProps","FormHelperText","IconButton","onClick","onMouseDown","edge","size","value","submit","Box","mt","AnimateButton","Button","disableElevation","disabled","ResetPassword","urlSearchParams","useMediaQuery","breakpoints","down","URLSearchParams","window","location","search","params","Object","fromEntries","entries","AuthWrapper","Grid","container","justifyContent","alignItems","minHeight","background","Helmet","charSet","item","md","lg","position","alignSelf","display","xs","BackgroundPattern1","spacing","AuthCardWrapper","direction","sm","Typography","noWrap","component","marginTop","src","galileoWhite","alt","width","galileo","mb","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","styled","backgroundColor","children","other","borderRadius","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/37.82da986d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"@fontsource/source-sans-pro\";\r\nimport \"@fontsource/public-sans\";\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, OutlinedInput } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetPassword } from 'redux/auth/actions';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport React from 'react';\r\n\r\n// ========================|| FIREBASE - RESET PASSWORD ||======================== //\r\n\r\nconst ResetPasswordForm = ({ token, ...others }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showconfirmPassword, setShowconfirmPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleClickShowconfirmPassword = () => {\r\n        setShowconfirmPassword(!showconfirmPassword);\r\n    };\r\n   \r\n  \r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleMouseDownconfirmPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    password: Yup.string()\r\n                        .max(255)\r\n                        .required('Password is required!')\r\n                        .matches(\r\n                            /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                            'Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character'\r\n                        ),\r\n                    confirmPassword: Yup.string().when('password', {\r\n                        is: (val) => !!(val && val.length > 0),\r\n                        then: Yup.string().oneOf([Yup.ref('password')], 'Both Password must be match!')\r\n                    })\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    console.log('reset', values)\r\n                    await dispatch(\r\n                        resetPassword({\r\n                            newPassword: values.password,\r\n                            token: token,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className='authFont' htmlFor=\"outlined-adornment-password-login\"> Password</InputLabel>\r\n                    <FormControl\r\n                  className='auth-formcontrol'\r\n                    fullWidth\r\n                    error={Boolean(touched.password && errors.password)}\r\n                   \r\n                >\r\n                        <TextField\r\n                        placeholder=' Password'\r\n                            className=\"textForm\"\r\n                            // onChange={(event)=>handelAccount(\"password\",event)}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                          \r\n                            type={showPassword ? 'text' : 'password'}\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            \r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.password && errors.password && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                {errors.password}\r\n                            </FormHelperText>\r\n                        )}\r\n                        <IconButton className='iconvisible'\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        aria-label=\"toggle password visibility\" edge=\"end\" size=\"large\">\r\n                           \r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                        </FormControl>\r\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className='authFont' htmlFor=\"outlined-adornment-password-login\">Confirm Password</InputLabel>\r\n                        <FormControl\r\n                        className='auth-formcontrol'\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                          \r\n                        >\r\n                        \r\n                        <TextField\r\n                        placeholder='Confirm Password'\r\n                        className=\"textForm\"\r\n                        // onChange={(event)=>handelAccount(\"password\",event)}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        value={values.confirmPassword}\r\n                                name=\"confirmPassword\"\r\n                      \r\n                        type={showconfirmPassword ? 'text' : 'password'}\r\n                      \r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        \r\n                        inputProps={{}}\r\n                    />\r\n                \r\n                    <IconButton className='iconvisible'\r\n                    onClick={handleClickShowconfirmPassword}\r\n                    onMouseDown={handleMouseDownconfirmPassword}\r\n                    aria-label=\"toggle password visibility\" edge=\"end\" size=\"large\">\r\n                       \r\n                    {showconfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                            {touched.confirmPassword && errors.confirmPassword && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.confirmPassword}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <div>* Password should be 8 characters long containing 1 Uppercase, 1 Numeric and 1 special character</div>\r\n                        <Box sx={{ mt: 5 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    className=\"signbuttonMarket\"\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Reset Password\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","import { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery,Box  } from '@mui/material';\r\nimport '@fontsource/public-sans';\r\n\r\nimport galileo from 'assets/images/galileo.png';\r\nimport galileoWhite from 'assets/images/galileo-white.png';\r\n// project imports\r\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\r\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\r\nimport {Helmet} from \"react-helmet\";\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\nimport AuthSlider from 'ui-component/cards/AuthSlider';\r\nimport ResetForm from './ResetPassword';\r\nimport React from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nconst ResetPassword = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n    const params = Object.fromEntries(urlSearchParams.entries());\r\n   \r\n    return (\r\n        <AuthWrapper1 >\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ minHeight: '100vh', \r\n        background: theme.palette.mode === 'dark' ? '#000' : '#fff' , }}>\r\n        <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>  Reset Password</title>\r\n     \r\n    </Helmet>\r\n            <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', \r\n            display: { xs: 'none', md: 'block' } }}>\r\n                <BackgroundPattern1>\r\n                    <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <span />\r\n                            \r\n                        </Grid>\r\n                    </Grid>\r\n                </BackgroundPattern1>\r\n            </Grid>\r\n            <Grid item container justifyContent=\"center\" md={6} lg={7} >\r\n          \r\n\r\n                <AuthCardWrapper>\r\n                <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                <Box sx={{ display: { xs: 'block',sm:'block', md: 'none', lg:'none' } }}>\r\n                <Typography variant=\"h6\" noWrap component=\"div\"\r\n                 sx={{ marginTop: '5px', }}>\r\n                    {theme.palette.mode === 'dark' ? (\r\n                        <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\r\n                    ) : (\r\n                        <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\r\n                    )}\r\n                </Typography>\r\n            </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 4 }}>\r\n                        <Typography className='signInMarket' variant=\"subtitle1\">\r\n                            \r\n                      Reset Password</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid> \r\n                    <Grid container spacing={2} justifyContent=\"center\" >\r\n                        <Grid item xs={12}>\r\n                            <ResetForm  token={params.token} />\r\n                        </Grid>\r\n                      \r\n                    </Grid>\r\n                </AuthCardWrapper>\r\n            </Grid>\r\n        </Grid>\r\n    </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            borderRadius:'4px',\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth-pattern.png';\r\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '97%',\r\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n               \r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n               margin:'10px',\r\n              \r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n"],"sourceRoot":""}