{"version":3,"sources":["views/auth/login/component/loginForm.js","views/auth/login/index.js","shared/component/AuthWrapper.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","assets/images/icons/social-google.svg","shared/component/LoginCardWrapper.js"],"names":["LoginForm","loginProp","others","dispatch","useDispatch","navigate","useNavigate","theme","useTheme","loader","useMediaQuery","breakpoints","down","useSelector","state","customization","auth","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","useEffect","setLoader","enableReinitialize","initialValues","email","password","validationSchema","Yup","shape","max","required","onSubmit","values","a","login","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","sx","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","id","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Stack","direction","alignItems","justifyContent","spacing","Typography","variant","component","Link","to","textDecoration","color","submit","Box","mt","background","AnimateButton","Button","className","disabled","disableElevation","Login","matchDownSM","AuthWrapper","Grid","container","minHeight","item","xs","m","sm","mb","LoginCardWrapper","textAlign","gutterBottom","fontSize","Divider","styled","backgroundColor","palette","mode","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","children","other","maxWidth","lg","margin","md","flexGrow","flexBasis","content","p","xl"],"mappings":"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","file":"static/js/24.eb2f89ad.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    useMediaQuery,\r\n    Divider\r\n} from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { login } from '../../../../redux/auth/actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setLoader } from '../../../../redux/auth/actions';\r\nimport Google from 'assets/images/icons/social-google.svg';\r\nimport FacebookSharpIcon from '@mui/icons-material/FacebookSharp';\r\nimport axios from 'axios';\r\n// import useAuth from 'hooks/useAuth';\r\n\r\nconst LoginForm = ({ loginProp, ...others }) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    // const { firebaseGoogleSignIn } = useAuth();\r\n    // const googleHandler = async () => {\r\n    //     try {\r\n    //         await firebaseGoogleSignIn();\r\n    //     } catch (err) {\r\n    //         console.error(err);\r\n    //     }\r\n    // };\r\n    const loader = useSelector((state) => state.auth.loader);\r\n    // console.log(\"loader\",loader);\r\n    const [checked, setChecked] = useState(true);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setLoader(false));\r\n    }, []);\r\n\r\n    const handleFBClick = () => {\r\n        window.open('http://localhost:3000/api/v1/auth/facebook', '_self');\r\n    };\r\n\r\n    const handleGoogleClick = () => {\r\n        window.open('http://localhost:3000/api/v1/auth/google', '_self');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">\r\n                            \r\n                    {<FormattedMessage id=\"signIn.Heading\" />}</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid> */}\r\n\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    email: '',\r\n                    password: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\r\n                    password: Yup.string().max(255).required('Password is required!')\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    await dispatch(setLoader(true));\r\n                    dispatch(\r\n                        login({\r\n                            email: values.email,\r\n                            password: values.password,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email </InputLabel>\r\n                            <OutlinedInput\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={'/forgetpassword'}\r\n                                sx={{ textDecoration: 'none', color: '#816a51 ' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2, background: '#604223' }}>\r\n                            <AnimateButton>\r\n                                {loader ? (\r\n                                    <Button\r\n                                        className=\"signbutton\"\r\n                                        sx={{ background: '#604223' }}\r\n                                        disabled\r\n                                        disableElevation\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        Sign in\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Button\r\n                                        className=\"signbutton\"\r\n                                        sx={{ background: '#604223' }}\r\n                                        disableElevation\r\n                                        disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        Sign in\r\n                                    </Button>\r\n                                )}\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n\r\n            {/* <Box sx={{ mt: 2, background: '#604223' }}>\r\n                <AnimateButton>\r\n                    {loader ? (\r\n                        <Button\r\n                            className=\"signbutton\"\r\n                            sx={{ background: '#01579b' }}\r\n                            disabled\r\n                            disableElevation\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            // type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Sign in with Facebook\r\n                        </Button>\r\n                    ) : (\r\n                        <Button\r\n                            className=\"signbutton\"\r\n                            sx={{ background: '#01579b' }}\r\n                            disableElevation\r\n                            // disabled={isSubmitting}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={handleFBClick}\r\n                        >\r\n                            Sign in with Facebook\r\n                        </Button>\r\n                    )}\r\n                </AnimateButton>\r\n            </Box>\r\n            <Box sx={{ mt: 2, background: '#604223' }}>\r\n                <AnimateButton>\r\n                    {loader ? (\r\n                        <Button\r\n                            className=\"signbutton\"\r\n                            sx={{ background: '#ef5350' }}\r\n                            disabled\r\n                            disableElevation\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Sign in with Google\r\n                        </Button>\r\n                    ) : (\r\n                        <Button\r\n                            className=\"signbutton\"\r\n                            sx={{ background: '#ef5350' }}\r\n                            disableElevation\r\n                            // disabled={isSubmitting}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={handleGoogleClick}\r\n                        >\r\n                            Sign in with Google\r\n                        </Button>\r\n                    )}\r\n                </AnimateButton>\r\n            </Box> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Box, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { useNavigate } from 'react-router-dom';\r\n// project imports\r\nimport AuthWrapper from '../../../shared/component/AuthWrapper';\r\nimport LoginCardWrapper from '../../../shared/component/LoginCardWrapper';\r\nimport LoginForm from './component/loginForm';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport React from 'react';\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    // const { isLoggedIn } = useAuth();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <LoginCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        {/* <Link to=\"/\"> */}\r\n                                        {/* <Logo /> */}\r\n                                        {/* </Link> */}\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"center\" textAlign=\"center\" spacing={1}>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    className=\"Signin\"\r\n                                                    sx={{ color: '#816a51' }}\r\n                                                    gutterBottom\r\n                                                    variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                >\r\n                                                    Sign in\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"caption\" fontSize=\"16px\" textAlign=\"center\">\r\n                                                    Enter Your email and password\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <LoginForm />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            variant=\"caption\"\r\n                                            fontSize=\"16px\"\r\n                                            textAlign=\"center\"\r\n                                            onClick={() => {\r\n                                                navigate('/landingPage');\r\n                                            }}\r\n                                        >\r\n                                            Marketplace\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </LoginCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff':'#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst LoginCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 550 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nLoginCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default LoginCardWrapper;\r\n"],"sourceRoot":""}