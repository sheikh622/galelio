{"version":3,"sources":["views/pages/trackingTool/component/activity.js","assets/images/bmw.png","views/pages/trackingTool/component/productView.js","assets/images/map.png","views/pages/trackingTool/component/trackAtribute.js","views/pages/trackingTool/index.js","ui-component/extended/Avatar.js","ui-component/cards/SubCard.js"],"names":["Activity","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","getStyles","name","personName","fontWeight","indexOf","theme","typography","fontWeightRegular","fontWeightMedium","useTheme","React","setPersonName","useState","Grid","spacing","gridSpacing","sx","margin","item","xs","lg","md","container","mb","Typography","color","palette","mode","className","variant","mt","component","textAlign","sm","textTransform","MainCard","background","title","FormControl","padding","border","borderRadius","fullWidth","Select","displayEmpty","value","onChange","event","target","split","renderValue","selected","length","join","inputProps","map","MenuItem","content","Divider","TableContainer","Table","TableHead","TableRow","TableCell","fontSize","align","price","from","to","days","TableBody","Product","nftList","useDispatch","useNavigate","useSelector","state","auth","user","age","setAge","justifyContent","RouterLink","CardMedia","image","bmw","minheight","overflow","cursor","ml","alignItems","Avatar","alt","src","nft","Brand","height","objectFit","zeroMinWidth","textDecoration","Box","labelId","id","rows","trackAtribute","anchorEl","setAnchorEl","selectedRow","setSelectedRow","Paper","row","float","Menu","open","Boolean","onClose","Card","CardHeader","CardContent","TrackingTool","useLocation","display","outline","size","others","colorSX","paper","bgcolor","outlineSX","borderColor","sizeSX","SubCard","forwardRef","ref","children","contentClass","darkTitle","secondary","contentSX","dark","light","primary","boxShadow","p","action","opacity","defaultProps"],"mappings":"wTAmPeA,EAtOE,WACb,IAEMC,EAAY,CACdC,WAAY,CACRC,MAAO,CACHC,UAAWC,IACXC,MAAO,OAkBnB,SAASC,EAAUC,EAAMC,GACrB,MAAO,CACHC,YAA0C,IAA9BD,EAAWE,QAAQH,GAAeI,EAAMC,WAAWC,kBAAoBF,EAAMC,WAAWE,iBAE5G,CACA,IAAMH,EAAQI,cACd,EAAoCC,WAAe,IAAG,mBAA/CR,EAAU,KAAES,EAAa,KAyChC,EAA4BC,mBAAS,IAAG,mBAA3B,KAAW,KAExB,OACI,mCACI,eAACC,EAAA,EAAI,CAAC,qBAAgBC,QAASC,IAAaC,GAAI,CAAEC,OAAQ,QAAS,UAC/D,cAACJ,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,SAC9B,cAACR,EAAA,EAAI,CAACS,WAAS,EAACR,QAAS,EAAGE,GAAI,CAAEO,GAAI,GAAI,SACtC,cAACV,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAG,SACd,cAACK,EAAA,EAAU,CACPC,MAA8B,SAAvBpB,EAAMqB,QAAQC,KAAkB,UAAY,QACnDC,UAAU,mBACVC,QAAQ,KACRC,GAAI,EACJC,UAAU,MACVf,GAAI,CAAEgB,UAAW,CAAEb,GAAI,SAAUE,GAAI,SAAUY,GAAI,UAAYC,cAAe,cAAe,oDAS7G,cAACrB,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAG,SACd,cAACN,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,GAAIY,GAAI,GAAG,SACtB,eAACE,EAAA,EAAQ,CACLP,UAAU,cACVZ,GAAI,CAAEoB,WAAmC,SAAvB/B,EAAMqB,QAAQC,KAAkB,UAAY,QAC9DU,MACI,cAACxB,EAAA,EAAI,CAACS,WAAS,EAACR,QAASC,IAAY,SACjC,cAACF,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAG,SACd,8BACI,cAACmB,EAAA,EAAW,CACRtB,GAAI,CACAoB,WAAmC,SAAvB/B,EAAMqB,QAAQC,KAAkB,UAAY,UACxDF,MAA8B,SAAvBpB,EAAMqB,QAAQC,KAAkB,QAAU,QACjDY,QAAS,sBACTC,OAAQ,oBACRC,aAAa,OAEjBC,WAAS,WAET,cAACC,EAAA,EAAM,CACHd,QAAQ,WACRa,WAAS,EACTE,cAAY,EACZC,MAAO3C,EACP4C,SAtF3B,SAACC,GAClB,IACcF,EACVE,EADAC,OAAUH,MAEdlC,EAEqB,kBAAVkC,EAAqBA,EAAMI,MAAM,KAAOJ,EAEvD,EAgFgDK,YAAa,SAACC,GACV,OAAwB,IAApBA,EAASC,OACF,oBAAIxB,UAAU,aAAY,oBAG9BuB,EAASE,KAAK,KACzB,EACA3D,UAAWA,EACX4D,WAAY,CAAE,aAAc,iBAAkB,SArHhF,CACV,gBACA,YACA,eACA,gBACA,iBACA,gBACA,gBACA,oBACA,mBACA,gBAgHmDC,KAAI,SAACtD,GAAI,OACZ,cAACuD,EAAA,EAAQ,CAAYX,MAAO5C,EAAML,MAAOI,EAAUC,EAAMC,GAAmB,SACvED,GADUA,EAEJ,cA8BvCwD,SAAS,EAAM,UAEf,cAACC,EAAA,EAAO,IACR,cAACC,EAAA,EAAc,UACX,eAACC,EAAA,EAAK,WACF,cAACC,EAAA,EAAS,UACN,eAACC,EAAA,EAAQ,WACL,eAACC,EAAA,EAAS,CAACnC,UAAU,gBAAgBZ,GAAI,CAAEgD,SAAU,mBAAqBC,MAAM,SAAQ,kBAC9E,OAEV,eAACF,EAAA,EAAS,CAACnC,UAAU,gBAAgBZ,GAAI,CAAEgD,SAAU,mBAAqBC,MAAM,SAAQ,kBAC9E,OAEV,cAACF,EAAA,EAAS,CAACnC,UAAU,gBAAgBZ,GAAI,CAAEgD,SAAU,mBAAqBC,MAAM,SAAQ,kBAGxF,eAACF,EAAA,EAAS,CAACnC,UAAU,gBAAgBZ,GAAI,CAAEgD,SAAU,mBAAqBC,MAAM,SAAQ,eACjF,OAEP,cAACF,EAAA,EAAS,CAACnC,UAAU,gBAAgBZ,GAAI,CAAEgD,SAAU,mBAAqBC,MAAM,SAAQ,uBAhJ/G,CACb,CACI5B,MAAO,OACP6B,MAAO,YACPC,KAAM,WACNC,GAAI,WACJC,KAAM,eAEV,CACIhC,MAAO,OACP6B,MAAO,YACPC,KAAM,WACNC,GAAI,WACJC,KAAM,eAEV,CACIhC,MAAO,OACP6B,MAAO,YACPC,KAAM,cACNC,GAAI,cACJC,KAAM,gBAEV,CACIhC,MAAO,OACP6B,MAAO,YACPC,KAAM,WACNC,GAAI,WACJC,KAAM,iBA0H4Bd,KAAI,SAACrC,GAAI,OACf,cAACoD,EAAA,EAAS,UACN,eAACR,EAAA,EAAQ,WACL,cAACC,EAAA,EAAS,CAACnC,UAAU,gBAAgBZ,GAAI,CAAEgD,SAAU,QAAUC,MAAM,SAAQ,SACxE/C,EAAKmB,QAEV,cAAC0B,EAAA,EAAS,CAACnC,UAAU,gBAAgBZ,GAAI,CAAEgD,SAAU,QAAUC,MAAM,SAAQ,SACxE/C,EAAKgD,QAEV,cAACH,EAAA,EAAS,CACNnC,UAAU,gBACVZ,GAAI,CAAEgD,SAAU,OAAQvC,MAAO,WAC/BwC,MAAM,SAAQ,SAEb/C,EAAKiD,OAEV,cAACJ,EAAA,EAAS,CACNnC,UAAU,gBACVZ,GAAI,CAAEgD,SAAU,OAAQvC,MAAO,WAC/BwC,MAAM,SAAQ,SAEb/C,EAAKkD,KAEV,cAACL,EAAA,EAAS,CAACnC,UAAU,gBAAgBZ,GAAI,CAAEgD,SAAU,QAAUC,MAAM,SAAQ,SACxE/C,EAAKmD,WAGN,oBAUpD,E,2BCjPe,MAA0B,gC,wBC8I1BE,EA9HC,SAAH,GAAqB,IAAD,IAAdC,EAAO,EAAPA,QAMf,GALiBC,cAEAC,cACJC,aAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKC,IAAI,IAE7BlE,mBAAS,KAAG,mBAA3BmE,EAAG,KAAEC,EAAM,KAKZ3E,EAAQI,cAEd,OACI,cAACI,EAAA,EAAI,CAAC,qBAAgBC,QAASC,IAAaC,GAAI,CAAEC,OAAQ,QAAS,SAC/D,cAACJ,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAG,SACd,eAACN,EAAA,EAAI,CAACS,WAAS,EAAC2D,eAAe,SAASnE,QAASC,IAAaC,GAAI,CAAEgB,UAAW,UAAW,UACtF,cAACnB,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,EAAGY,GAAI,GAAIF,UAAWmD,IAAYd,GAAG,eAAc,SAC9D,cAACe,EAAA,EAAS,CACNpD,UAAU,MACVqD,MAAOC,EACPrE,GAAI,CAAEsE,UAAW,OAAQzF,UAAW,QAASuC,WAAY,cAAemD,SAAU,SAAUC,OAAQ,eAI5G,cAAC3E,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,EAAGY,GAAI,GAAG,SACrB,cAACpB,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAG,SACd,cAACN,EAAA,EAAI,CAACS,WAAS,WACX,cAACT,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,GAAIY,GAAI,GAAG,SACtB,eAACpB,EAAA,EAAI,CAACS,WAAS,EAACR,QAAS,EAAE,UACvB,cAACD,EAAA,EAAI,CAACiB,GAAI,EAAG2D,GAAI,EAAGvE,MAAI,EAACC,GAAI,GAAG,SAC5B,eAACN,EAAA,EAAI,CAACS,WAAS,EAACR,QAAS,EAAG4E,WAAW,SAAQ,UAC3C,cAAC7E,EAAA,EAAI,CAACK,MAAI,WACN,cAACyE,EAAA,EAAM,CACHC,IAAI,SACJC,IAAY,OAAPrB,QAAO,IAAPA,GAAY,QAAL,EAAPA,EAASsB,WAAG,OAAO,QAAP,EAAZ,EAAcC,aAAK,WAAZ,EAAP,EAAqBX,MAC1BpE,GAAI,CAAEjB,MAAO,GAAIiG,OAAQ,GAAIC,UAAW,YAGhD,eAACpF,EAAA,EAAI,CAACK,MAAI,EAACC,IAAE,EAAC+E,cAAY,EAACnE,UAAWmD,IAAYlE,GAAI,CAAEmF,eAAgB,QAAU/B,GAAG,OAAM,UACvF,cAAC5C,EAAA,EAAU,CAACyC,MAAM,OAAO9D,WAAY,IAAK0B,QAAQ,KAAKD,UAAU,QAAO,iBAGxE,cAACJ,EAAA,EAAU,CAACyC,MAAM,OAAOpC,QAAQ,KAAKD,UAAU,UAAS,2BAOrE,cAACf,EAAA,EAAI,CAACK,MAAI,EAACY,GAAI,EAAGX,GAAI,GAAG,SACrB,cAACK,EAAA,EAAU,CACPI,UAAU,MACVH,MAA8B,SAAvBpB,EAAMqB,QAAQC,KAAkB,QAAU,QACjDE,QAAQ,KAAI,sBAKpB,cAAChB,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAG,SACd,cAACK,EAAA,EAAU,CAACI,UAAU,qBAAqBC,QAAQ,QAAO,+hBAU9D,cAAChB,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAG,SACd,cAACiF,EAAA,EAAG,CAACpF,GAAI,CAAEyB,aAAc,MAAO1C,MAAO,MAAOkB,OAAQ,SAAUe,UAAW,QAAS,SAChF,cAACM,EAAA,EAAW,CACRtB,GAAI,CACAoB,WAAmC,SAAvB/B,EAAMqB,QAAQC,KAAkB,UAAY,UACxDF,MAA8B,SAAvBpB,EAAMqB,QAAQC,KAAkB,QAAU,QACjDY,QAAS,sBACTE,aAAc,OAElBC,WAAS,WAET,cAACC,EAAA,EAAM,CACHd,QAAQ,WACRwE,QAAQ,2BACRC,GAAG,qBACHzD,MAAOkC,EACPjC,SA9E/B,SAACC,GAClBiC,EAAOjC,EAAMC,OAAOH,MACxB,EA6EoDH,WAAS,EACTE,cAAY,EACZM,YAAa,SAACC,GACV,OAAwB,IAApBA,EAASC,OACF,oBAAIxB,UAAU,aAAY,mCAG9BuB,EAASE,KAAK,KACzB,EAAE,SAMF,cAACG,EAAA,EAKD,uDAapC,cAAC3C,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,EAAGY,GAAI,WAK1C,E,6CC5Ie,MAA0B,gC,kBCsBnCsE,EAAO,CACT,CACID,GAAI,EACJjE,MAAO,SACPoB,QAAS,oBAgKF+C,EA5JO,WAClB,MAAgC5F,mBAAS,MAAK,mBAAvC6F,EAAQ,KAAEC,EAAW,KAC5B,EAAsC9F,mBAAS,MAAK,mBAA7C+F,EAAW,KAAEC,EAAc,KAUlC,OACI,cAAC/F,EAAA,EAAI,CAAC,qBAAgBC,QAASC,IAAaC,GAAI,CAAEC,OAAQ,UAAW,SACjE,eAACJ,EAAA,EAAI,CAACS,WAAS,YACX,eAACT,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAIc,GAAI,EAAGZ,GAAI,EAAGL,GAAI,CAAEuB,QAAS,iBAAkB,UAC9D,eAAC1B,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAIE,GAAI,GAAG,UACtB,cAACsC,EAAA,EAAc,CAAC5B,UAAW8E,IAAO7F,GAAI,CAAEyB,aAAc,kBAAmB,SACrE,eAACmB,EAAA,EAAK,WACF,cAACC,EAAA,EAAS,UACN,cAACC,EAAA,EAAQ,MAEb,cAACQ,EAAA,EAAS,UACLiC,EAAKhD,KAAI,SAACuD,GAAG,OACV,eAAChD,EAAA,EAAQ,WACL,cAACC,EAAA,EAAS,CAACnC,UAAU,YAAYZ,GAAI,CAAEwB,OAAQ,QAAS,uBACxD,cAACuB,EAAA,EAAS,CAAC/C,GAAI,CAAEwB,OAAQ,UAEzB,cAACuB,EAAA,EAAS,CAAC/C,GAAI,CAAE+F,MAAO,QAASvE,OAAQ,QAAS,SAC9C,cAAC,IAAqB,CAClBxB,GAAI,CAAES,MAAO,iBANVqF,EAAIR,GAUR,WAK3B,cAACU,EAAA,EAAI,CAACP,SAAUA,EAAUQ,KAAMC,QAAQT,GAAWU,QAhC/C,WACpBT,EAAY,MACZE,EAAe,KACnB,IA8BqBD,GACG,eAACS,EAAA,EAAI,WACD,cAACC,EAAA,EAAU,CAAChF,MAAOsE,EAAYtE,QAC/B,cAACiF,EAAA,EAAW,UACR,mEAKhB,cAACzG,EAAA,EAAI,CAACiB,GAAI,EAAGZ,MAAI,EAACC,GAAI,GAAIE,GAAI,GAAG,SAC7B,cAACsC,EAAA,EAAc,CAAC5B,UAAW8E,IAAO7F,GAAI,CAAEyB,aAAc,kBAAmB,SACrE,eAACmB,EAAA,EAAK,WACF,cAACC,EAAA,EAAS,UACN,cAACC,EAAA,EAAQ,MAEb,cAACQ,EAAA,EAAS,UACLiC,EAAKhD,KAAI,SAACuD,GAAG,OACV,eAAChD,EAAA,EAAQ,WACL,cAACC,EAAA,EAAS,CAACnC,UAAU,YAAYZ,GAAI,CAAEwB,OAAQ,QAAS,uBACxD,cAACuB,EAAA,EAAS,CAAC/C,GAAI,CAAEwB,OAAQ,UAEzB,cAACuB,EAAA,EAAS,CAAC/C,GAAI,CAAE+F,MAAO,QAASvE,OAAQ,QAAS,SAC9C,cAAC,IAAqB,CAClBxB,GAAI,CAAES,MAAO,iBANVqF,EAAIR,GAUR,aAe/B,cAACzF,EAAA,EAAI,CAACiB,GAAI,EAAGZ,MAAI,EAACC,GAAI,GAAIE,GAAI,GAAG,SAC7B,cAACsC,EAAA,EAAc,CAAC5B,UAAW8E,IAAO7F,GAAI,CAAEyB,aAAc,kBAAmB,SACrE,eAACmB,EAAA,EAAK,WACF,cAACC,EAAA,EAAS,UACN,cAACC,EAAA,EAAQ,MAEb,cAACQ,EAAA,EAAS,UACLiC,EAAKhD,KAAI,SAACuD,GAAG,OACV,eAAChD,EAAA,EAAQ,WACL,cAACC,EAAA,EAAS,CAACnC,UAAU,YAAYZ,GAAI,CAAEwB,OAAQ,QAAS,uBACxD,cAACuB,EAAA,EAAS,CAAC/C,GAAI,CAAEwB,OAAQ,UAEzB,cAACuB,EAAA,EAAS,CAAC/C,GAAI,CAAE+F,MAAO,QAASvE,OAAQ,QAAS,SAC9C,cAAC,IAAqB,CAClBxB,GAAI,CAAES,MAAO,iBANVqF,EAAIR,GAUR,aAe/B,cAACzF,EAAA,EAAI,CAACiB,GAAI,EAAGZ,MAAI,EAACC,GAAI,GAAIE,GAAI,GAAG,SAC7B,cAACsC,EAAA,EAAc,CAAC5B,UAAW8E,IAAO7F,GAAI,CAAEyB,aAAc,kBAAmB,SACrE,eAACmB,EAAA,EAAK,WACF,cAACC,EAAA,EAAS,UACN,cAACC,EAAA,EAAQ,MAEb,cAACQ,EAAA,EAAS,UACLiC,EAAKhD,KAAI,SAACuD,GAAG,OACV,eAAChD,EAAA,EAAQ,WACL,cAACC,EAAA,EAAS,CAACnC,UAAU,YAAYZ,GAAI,CAAEwB,OAAQ,QAAS,uBACxD,cAACuB,EAAA,EAAS,CAAC/C,GAAI,CAAEwB,OAAQ,UAEzB,cAACuB,EAAA,EAAS,CAAC/C,GAAI,CAAE+F,MAAO,QAASvE,OAAQ,QAAS,SAC9C,cAAC,IAAqB,CAClBxB,GAAI,CAAES,MAAO,iBANVqF,EAAIR,GAUR,gBAgBnC,cAACzF,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAIc,GAAI,EAAGZ,GAAI,EAAE,SAC7B,qBAAKO,UAAU,MAAQiE,IAAKtC,UAK/C,E,OCrHegE,UA1DM,WACjB,IAAMlH,EAAQI,cACG+G,cACA/C,cAGjB,OACI,mCACI,cAAC5D,EAAA,EAAI,CACD,qBACAQ,GAAI,GACJD,GAAI,GACJJ,GAAI,CACAyE,GAAI,CAAErE,IAAK,GACXqG,QAAS,CAAEtG,GAAI,QAASc,GAAI,QAASZ,GAAI,OAAQD,GAAI,QACrDgB,WAAY,aACZX,MAA8B,SAAvBpB,EAAMqB,QAAQC,KAAkB,QAAU,WACnD,SAEF,eAACd,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,GAAIF,GAAI,GAAIC,GAAI,GAAG,UAClC,cAACP,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,SAClC,cAACR,EAAA,EAAI,CAACS,WAAS,EAACR,QAAS,EAAGE,GAAI,CAAEO,GAAI,GAAI,SACtC,cAACV,EAAA,EAAI,CAACK,MAAI,EAACC,GAAI,GAAG,SACd,cAACK,EAAA,EAAU,CACPC,MAA8B,SAAvBpB,EAAMqB,QAAQC,KAAkB,UAAY,QACnDC,UAAU,mBACVC,QAAQ,KACRC,GAAI,EACJC,UAAU,MACVf,GAAI,CAAEgB,UAAW,CAAEb,GAAI,SAAUE,GAAI,SAAUY,GAAI,UAAYC,cAAe,cAAe,4CAQrG,cAACrB,EAAA,EAAI,CAAC,qBAAe,SACjB,cAACA,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,GAAIF,GAAI,GAAG,SACtB,eAACN,EAAA,EAAI,CAACS,WAAS,YACX,cAACT,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,GAAIF,GAAI,GAAG,SACtB,cAAC,EAAO,MAEZ,cAACN,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,GAAIF,GAAI,GAAG,SACtB,cAAC,EAAa,MAElB,cAACN,EAAA,EAAI,CAACK,MAAI,EAACG,GAAI,GAAIF,GAAI,GAAG,SACtB,cAAC,EAAQ,mBAS7C,C,kHCKewE,IA/DA,SAAH,GAAiD,IAA3ClE,EAAK,EAALA,MAAOiG,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAM3G,EAAE,EAAFA,GAAO4G,EAAM,iBAC3CvH,EAAQI,cAERoH,EAAUpG,IAAUiG,GAAW,CAAEjG,MAAOpB,EAAMqB,QAAQU,WAAW0F,MAAOC,QAAQ,GAAD,OAAKtG,EAAK,UACzFuG,EAAYN,GAAW,CACzBjG,MAAOA,EAAK,UAAMA,EAAK,wBACvBsG,QAAS1H,EAAMqB,QAAQU,WAAW0F,MAClCtF,OAAQ,YACRyF,YAAaxG,EAAK,UAAMA,EAAK,yBAE7ByG,EAAS,CAAC,EACd,OAAQP,GACJ,IAAK,QACDO,EAAS,CACLnI,MAAOM,EAAMS,QAAQ,KACrBkF,OAAQ3F,EAAMS,QAAQ,MAE1B,MACJ,IAAK,KACDoH,EAAS,CACLnI,MAAOM,EAAMS,QAAQ,MACrBkF,OAAQ3F,EAAMS,QAAQ,OAE1B,MACJ,IAAK,KACDoH,EAAS,CACLnI,MAAOM,EAAMS,QAAQ,GACrBkF,OAAQ3F,EAAMS,QAAQ,IAE1B,MACJ,IAAK,KACDoH,EAAS,CACLnI,MAAOM,EAAMS,QAAQ,GACrBkF,OAAQ3F,EAAMS,QAAQ,IAE1B,MACJ,IAAK,KACDoH,EAAS,CACLnI,MAAOM,EAAMS,QAAQ,OACrBkF,OAAQ3F,EAAMS,QAAQ,QAE1B,MACJ,IAAK,KACDoH,EAAS,CACLnI,MAAOM,EAAMS,QAAQ,KACrBkF,OAAQ3F,EAAMS,QAAQ,MAE1B,MACJ,QACIoH,EAAS,CAAC,EAGlB,OAAO,cAAC,IAAS,aAAClH,GAAE,mDAAO6G,GAAYG,GAAcE,GAAWlH,IAAU4G,GAC9E,C,oNCpDMO,EAAUC,sBAAW,WAAuGC,GAAS,IAA7GC,EAAQ,EAARA,SAAU7E,EAAO,EAAPA,QAAS8E,EAAY,EAAZA,aAAcC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAU,EAAD,EAAEzH,UAAE,MAAG,CAAC,EAAC,MAAE0H,iBAAS,MAAG,CAAC,EAAC,EAAErG,EAAK,EAALA,MAAUuF,EAAM,iBACpHvH,EAAQI,cAEd,OACI,eAAC,IAAI,yBACD4H,IAAKA,EACLrH,GAAE,aACEwB,OAAQ,YACRyF,YAAoC,SAAvB5H,EAAMqB,QAAQC,KAAkBtB,EAAMqB,QAAQiH,KAAKC,MAAQ,GAAKvI,EAAMqB,QAAQmH,QAAQD,MACnG,SAAU,CACNE,UAAkC,SAAvBzI,EAAMqB,QAAQC,KAAkB,qCAAuC,oCAEnFX,IAEH4G,GAAM,eAGRY,GAAanG,GAAS,cAAC,IAAU,CAACrB,GAAI,CAAE+H,EAAG,KAAO1G,MAAO,cAAC,IAAU,CAACR,QAAQ,KAAI,SAAEQ,IAAqB2G,OAAQP,IACjHD,GAAanG,GAAS,cAAC,IAAU,CAACrB,GAAI,CAAE+H,EAAG,KAAO1G,MAAO,cAAC,IAAU,CAACR,QAAQ,KAAI,SAAEQ,IAAqB2G,OAAQP,IAGhHpG,GACG,cAAC,IAAO,CACJrB,GAAI,CACAiI,QAAS,EACThB,YAAoC,SAAvB5H,EAAMqB,QAAQC,KAAkBtB,EAAMqB,QAAQiH,KAAKC,MAAQ,GAAKvI,EAAMqB,QAAQmH,QAAQD,SAM9GnF,GACG,cAAC,IAAW,CAACzC,GAAE,aAAI+H,EAAG,KAAQL,GAAa9G,UAAW2G,GAAgB,GAAG,SACpED,KAGP7E,GAAW6E,KAGzB,IAaAH,EAAQe,aAAe,CACnBzF,SAAS,GAGE0E,K","file":"static/js/48.92f7298e.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport * as React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport '@fontsource/public-sans';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\r\nimport { Typography, Grid, Select, InputLabel, FormControl, MenuItem, Divider } from '@mui/material';\r\nimport { IconSearch } from '@tabler/icons';\r\nimport { IconButton, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip } from '@mui/material';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nconst Activity = () => {\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250\r\n            }\r\n        }\r\n    };\r\n\r\n    const names = [\r\n        'Oliver Hansen',\r\n        'Van Henry',\r\n        'April Tucker',\r\n        'Ralph Hubbard',\r\n        'Omar Alexander',\r\n        'Carlos Abbott',\r\n        'Miriam Wagner',\r\n        'Bradley Wilkerson',\r\n        'Virginia Andrews',\r\n        'Kelly Snyder'\r\n    ];\r\n\r\n    function getStyles(name, personName) {\r\n        return {\r\n            fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\r\n        };\r\n    }\r\n    const theme = useTheme();\r\n    const [personName, setPersonName] = React.useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setPersonName(\r\n            // On autofill we get a stringified value.\r\n            typeof value === 'string' ? value.split(',') : value\r\n        );\r\n    };\r\n    const itemData = [\r\n        {\r\n            title: 'List',\r\n            price: '0.006 ETH',\r\n            from: 'Vlad556 ',\r\n            to: 'Vlad556 ',\r\n            days: '9 Days ago '\r\n        },\r\n        {\r\n            title: 'List',\r\n            price: '0.006 ETH',\r\n            from: 'Alex 67 ',\r\n            to: 'Alex 67 ',\r\n            days: '6 Days ago '\r\n        },\r\n        {\r\n            title: 'List',\r\n            price: '0.006 ETH',\r\n            from: 'cynthia321 ',\r\n            to: 'cynthia321 ',\r\n            days: '60 Days ago '\r\n        },\r\n        {\r\n            title: 'List',\r\n            price: '0.006 ETH',\r\n            from: 'Vlad556 ',\r\n            to: 'Vlad556 ',\r\n            days: '79 Days ago '\r\n        }\r\n    ];\r\n    const [search, setSearch] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <Grid container-fluid spacing={gridSpacing} sx={{ margin: '15px' }}>\r\n                <Grid item xs={12} lg={12} md={12}>\r\n                    <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                color={theme.palette.mode === 'dark' ? '#FFFFFF' : 'black'}\r\n                                className=\"productfigmastyl\"\r\n                                variant=\"h2\"\r\n                                mt={4}\r\n                                component=\"div\"\r\n                                sx={{ textAlign: { xs: 'center', md: 'center', sm: 'center' }, textTransform: 'capitalize' }}\r\n                            >\r\n                            Metadatas and ownership Activity\r\n                               \r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid item md={12} sm={12}>\r\n                        <MainCard\r\n                            className=\"tableShadow\"\r\n                            sx={{ background: theme.palette.mode === 'dark' ? '#181C1F' : '#fff' }}\r\n                            title={\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12}>\r\n                                        <div>\r\n                                            <FormControl\r\n                                                sx={{\r\n                                                    background: theme.palette.mode === 'dark' ? '#181C1F' : '#d9d9d9',\r\n                                                    color: theme.palette.mode === 'dark' ? '#ffff' : 'black',\r\n                                                    padding: '10px 10px 10px 10px',\r\n                                                    border: '2px solid #CDCDCD',\r\n                                                    borderRadius:'4px'\r\n                                                }}\r\n                                                fullWidth\r\n                                            >\r\n                                                <Select\r\n                                                    variant=\"standard\"\r\n                                                    fullWidth\r\n                                                    displayEmpty\r\n                                                    value={personName}\r\n                                                    onChange={handleChange}\r\n                                                    // input={<OutlinedInput />}\r\n                                                    renderValue={(selected) => {\r\n                                                        if (selected.length === 0) {\r\n                                                            return <em className=\"fontfamily\">filter</em>;\r\n                                                        }\r\n\r\n                                                        return selected.join(', ');\r\n                                                    }}\r\n                                                    MenuProps={MenuProps}\r\n                                                    inputProps={{ 'aria-label': 'Without label' }}\r\n                                                >\r\n                                                    {/* <MenuItem disabled value=\"\">\r\n                                          <em>aiman</em>\r\n                                        </MenuItem> */}\r\n                                                    {names.map((name) => (\r\n                                                        <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n                                                            {name}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        {/*    <FormControl  sx={{ background:theme.palette.mode === 'dark' ? '#181C1F'\r\n                                        : '#d9d9d9',color:theme.palette.mode === 'dark' ? '#ffff'\r\n                                        : 'black', border: '2px solid #CDCDCD' , borderRadius:'4px'}} fullWidth>\r\n                                            <InputLabel className='activityTable'  sx={{color:'#CDCDCD'}} id=\"age-select\">Filter</InputLabel>\r\n                                            <Select\r\n                                            variant='standard'\r\n                                                fullWidth\r\n                                                labelId=\"age-select\"\r\n                                                id=\"age\"\r\n                                                name=\"age\"\r\n                                                // defaultValue={formik.values.age}\r\n                                                // onChange={formik.handleChange}\r\n                                                label=\"Age\"\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em className='activityTable' >Filter</em>\r\n                                                </MenuItem>\r\n                                                <MenuItem value={10}>Ten</MenuItem>\r\n                                                <MenuItem value={20}>Twenty</MenuItem>\r\n                                                <MenuItem value={30}>Thirty</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl> */}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                            content={false}\r\n                        >\r\n                            <Divider />\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell className=\"activityTable\" sx={{ fontSize: '18px !important' }} align=\"center\">\r\n                                                Event{' '}\r\n                                            </TableCell>\r\n                                            <TableCell className=\"activityTable\" sx={{ fontSize: '18px !important' }} align=\"center\">\r\n                                                Price{' '}\r\n                                            </TableCell>\r\n                                            <TableCell className=\"activityTable\" sx={{ fontSize: '18px !important' }} align=\"center\">\r\n                                                From\r\n                                            </TableCell>\r\n                                            <TableCell className=\"activityTable\" sx={{ fontSize: '18px !important' }} align=\"center\">\r\n                                                To{' '}\r\n                                            </TableCell>\r\n                                            <TableCell className=\"activityTable\" sx={{ fontSize: '18px !important' }} align=\"center\">\r\n                                                Date\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    {itemData.map((item) => (\r\n                                        <TableBody>\r\n                                            <TableRow>\r\n                                                <TableCell className=\"activityTable\" sx={{ fontSize: '15px' }} align=\"center\">\r\n                                                    {item.title}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"activityTable\" sx={{ fontSize: '15px' }} align=\"center\">\r\n                                                    {item.price}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className=\"activityTable\"\r\n                                                    sx={{ fontSize: '15px', color: '#2194FF' }}\r\n                                                    align=\"center\"\r\n                                                >\r\n                                                    {item.from}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className=\"activityTable\"\r\n                                                    sx={{ fontSize: '15px', color: '#2194FF' }}\r\n                                                    align=\"center\"\r\n                                                >\r\n                                                    {item.to}\r\n                                                </TableCell>\r\n                                                <TableCell className=\"activityTable\" sx={{ fontSize: '15px' }} align=\"center\">\r\n                                                    {item.days}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    ))}\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </MainCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Activity;\r\n","export default __webpack_public_path__ + \"static/media/bmw.fee8e688.png\";","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport { CardMedia, Grid, Typography, Button, Alert, InputLabel, Select, FormControl, Box, MenuItem } from '@mui/material';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport bmw from 'assets/images/bmw.png';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n// =============================|| LANDING - FEATURE PAGE ||============================= //\r\n\r\nconst Product = ({ nftList }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const navigate = useNavigate();\r\n    const user = useSelector((state) => state.auth.user);\r\n\r\n    const [age, setAge] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Grid container-fluid spacing={gridSpacing} sx={{ margin: '15px' }}>\r\n            <Grid item xs={12}>\r\n                <Grid container justifyContent=\"center\" spacing={gridSpacing} sx={{ textAlign: 'center' }}>\r\n                    <Grid item md={6} sm={12} component={RouterLink} to=\"/companyPage\">\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            image={bmw}\r\n                            sx={{ minheight: 'auto', maxHeight: '570px', background: 'transparent', overflow: 'hidden', cursor: 'Pointer' }}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={6} sm={12}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Grid item md={12} sm={12}>\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid mt={4} ml={2} item xs={12}>\r\n                                            <Grid container spacing={2} alignItems=\"center\">\r\n                                                <Grid item>\r\n                                                    <Avatar\r\n                                                        alt=\"User 1\"\r\n                                                        src={nftList?.nft?.Brand?.image}\r\n                                                        sx={{ width: 56, height: 56, objectFit: 'fill' }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs zeroMinWidth component={RouterLink} sx={{ textDecoration: 'none' }} to=\"/BMW\">\r\n                                                    <Typography align=\"left\" fontWeight={600} variant=\"h2\" className=\"brand\">\r\n                                                        BMW\r\n                                                    </Typography>\r\n                                                    <Typography align=\"left\" variant=\"h3\" className=\"creator\">\r\n                                                        Maker\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                        <Grid item mt={2} xs={12}>\r\n                                            <Typography\r\n                                                className=\"Lux\"\r\n                                                color={theme.palette.mode === 'dark' ? 'white' : 'black'}\r\n                                                variant=\"h3\"\r\n                                            >\r\n                                                BMW XM\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography className=\"productdescription\" variant=\"body2\">\r\n                                                Newly developed M HYBRID drive, an extravagant design and the progressive luxury ambience in\r\n                                                the interior of the BMW XM combine to form a reinterpretation of the Sports Activity Vehicle\r\n                                                (SAV) vehicle concept in the high-performance segment. The BMW XM is the highlight of the\r\n                                                model offensive in the brand's anniversary year and at the same time the first original BMW\r\n                                                M automobile since the BMW M1. Precisely set accents in the exterior design of the\r\n                                                high-performance SAV are reminiscent of the legendary mid-engine sports car.\r\n                                            </Typography>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12}>\r\n                                            <Box sx={{ borderRadius: '4px', width: '95%', margin: '0 auto', textAlign: 'left' }}>\r\n                                                <FormControl\r\n                                                    sx={{\r\n                                                        background: theme.palette.mode === 'dark' ? '#181C1F' : '#d9d9d9',\r\n                                                        color: theme.palette.mode === 'dark' ? '#ffff' : 'black',\r\n                                                        padding: '10px 10px 10px 10px',\r\n                                                        borderRadius: '4px'\r\n                                                    }}\r\n                                                    fullWidth\r\n                                                >\r\n                                                    <Select\r\n                                                        variant=\"standard\"\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={age}\r\n                                                        onChange={handleChange}\r\n                                                        fullWidth\r\n                                                        displayEmpty\r\n                                                        renderValue={(selected) => {\r\n                                                            if (selected.length === 0) {\r\n                                                                return <em className=\"fontfamily\">PROOF OF AUTHENTICITY</em>;\r\n                                                            }\r\n\r\n                                                            return selected.join(', ');\r\n                                                        }}\r\n                                                    >\r\n                                                        {/* <MenuItem disabled value=\"\">\r\n                                      <em>aiman</em>\r\n                                    </MenuItem> */}\r\n\r\n                                                        <MenuItem\r\n                                                        // component={redirect}\r\n                                                        // to={option.fieldValue}\r\n                                                        // key={option.fieldValue}\r\n                                                        // value={option.fieldValue}\r\n                                                        // onClick={useNavigate(option.fieldValue)}\r\n                                                        >\r\n                                                            PROOF OF AUTHENTICITY\r\n                                                        </MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item md={1} sm={12}></Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","export default __webpack_public_path__ + \"static/media/map.671dd61b.png\";","import React, { useState } from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    Grid,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    MenuItem,\r\n    Menu,\r\n    Card,\r\n    CardHeader,\r\n    CardContent\r\n} from '@mui/material';\r\n\r\nimport { gridSpacing } from 'store/constant';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport map from 'assets/images/map.png';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\nconst rows = [\r\n    {\r\n        id: 1,\r\n        title: 'Card 1',\r\n        content: 'This is  card 1'\r\n    }\r\n];\r\n\r\nconst trackAtribute = () => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [selectedRow, setSelectedRow] = useState(null);\r\n    const handleMenuOpen = (event, row) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setSelectedRow(row);\r\n    };\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        setSelectedRow(null);\r\n    };\r\n\r\n    return (\r\n        <Grid container-fluid spacing={gridSpacing} sx={{ margin: '0 15px' }}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6} md={6} sx={{ padding: '0 15px 0 02px' }}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <TableContainer component={Paper} sx={{ borderRadius: '3px !important' }}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow></TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.map((row) => (\r\n                                        <TableRow key={row.id}>\r\n                                            <TableCell className='atributes' sx={{ border: 'none' }}>Attribute</TableCell>\r\n                                            <TableCell sx={{ border: 'none' }}></TableCell>\r\n\r\n                                            <TableCell sx={{ float: 'right', border: 'none' }}>\r\n                                                <KeyboardArrowDownIcon\r\n                                                    sx={{ color: '#2F53FF' }}\r\n                                                    // onClick={(event) => handleMenuOpen(event, row)}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}></Menu>\r\n                        {selectedRow && (\r\n                            <Card>\r\n                                <CardHeader title={selectedRow.title} />\r\n                                <CardContent>\r\n                                    <p>Some content for the card.</p>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid mt={2} item xs={12} md={12}>\r\n                        <TableContainer component={Paper} sx={{ borderRadius: '3px !important' }}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow></TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.map((row) => (\r\n                                        <TableRow key={row.id}>\r\n                                            <TableCell className='atributes' sx={{ border: 'none' }}>History 1</TableCell>\r\n                                            <TableCell sx={{ border: 'none' }}></TableCell>\r\n\r\n                                            <TableCell sx={{ float: 'right', border: 'none' }}>\r\n                                                <KeyboardArrowDownIcon\r\n                                                    sx={{ color: '#2F53FF' }}\r\n                                                    // onClick={(event) => handleMenuOpen(event, row)}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        {/*  <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}></Menu>\r\n                    {selectedRow && (\r\n                        <Card>\r\n                            <CardHeader title={selectedRow.title} />\r\n                            <CardContent>\r\n                                <p>Some content for the card.</p>\r\n                            </CardContent>\r\n                        </Card>\r\n                    )} */}\r\n                    </Grid>\r\n                    <Grid mt={2} item xs={12} md={12}>\r\n                        <TableContainer component={Paper} sx={{ borderRadius: '3px !important' }}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow></TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.map((row) => (\r\n                                        <TableRow key={row.id}>\r\n                                            <TableCell className='atributes' sx={{ border: 'none' }}>History 2</TableCell>\r\n                                            <TableCell sx={{ border: 'none' }}></TableCell>\r\n\r\n                                            <TableCell sx={{ float: 'right', border: 'none' }}>\r\n                                                <KeyboardArrowDownIcon\r\n                                                    sx={{ color: '#2F53FF' }}\r\n                                                    // onClick={(event) => handleMenuOpen(event, row)}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        {/*  <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}></Menu>\r\n                    {selectedRow && (\r\n                        <Card>\r\n                            <CardHeader title={selectedRow.title} />\r\n                            <CardContent>\r\n                                <p>Some content for the card.</p>\r\n                            </CardContent>\r\n                        </Card>\r\n                    )} */}\r\n                    </Grid>\r\n                    <Grid mt={2} item xs={12} md={12}>\r\n                        <TableContainer component={Paper} sx={{ borderRadius: '3px !important' }}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow></TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.map((row) => (\r\n                                        <TableRow key={row.id}>\r\n                                            <TableCell className='atributes' sx={{ border: 'none' }}>History 3</TableCell>\r\n                                            <TableCell sx={{ border: 'none' }}></TableCell>\r\n\r\n                                            <TableCell sx={{ float: 'right', border: 'none' }}>\r\n                                                <KeyboardArrowDownIcon\r\n                                                    sx={{ color: '#2F53FF' }}\r\n                                                    // onClick={(event) => handleMenuOpen(event, row)}\r\n                                                />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        {/*  <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}></Menu>\r\n                    {selectedRow && (\r\n                        <Card>\r\n                            <CardHeader title={selectedRow.title} />\r\n                            <CardContent>\r\n                                <p>Some content for the card.</p>\r\n                            </CardContent>\r\n                        </Card>\r\n                    )} */}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                   <img className='map'   src={map}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\nexport default trackAtribute;\r\n","import { useLocation } from 'react-router-dom';\r\nimport { useTheme } from '@emotion/react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid , Typography  } from '@mui/material';\r\nimport Activity from './component/activity';\r\nimport Product from './component/productView';\r\nimport TrackAtribute from './component/trackAtribute';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getnftData } from 'redux/landingPage/actions';\r\nconst TrackingTool = () => {\r\n    const theme = useTheme();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    // console.log(nftList, 'nftList=>');\r\n    return (\r\n        <>\r\n            <Grid\r\n                container-fluid\r\n                md={12}\r\n                lg={12}\r\n                sx={{\r\n                    ml: { lg: -1 },\r\n                    display: { xs: 'block', sm: 'block', md: 'flex', lg: 'flex' },\r\n                    background: 'tranparent',\r\n                    color: theme.palette.mode === 'dark' ? 'white' : '#404040'\r\n                }}\r\n            >\r\n                <Grid item md={12} xs={12} lg={12}>\r\n                <Grid item xs={12} lg={12} md={12}>\r\n                <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color={theme.palette.mode === 'dark' ? '#FFFFFF' : 'black'}\r\n                            className=\"productfigmastyl\"\r\n                            variant=\"h2\"\r\n                            mt={4}\r\n                            component=\"div\"\r\n                            sx={{ textAlign: { xs: 'center', md: 'center', sm: 'center' }, textTransform: 'capitalize' }}\r\n                        >\r\n                        The product is authentic\r\n                           \r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n                    <Grid container-fluid>\r\n                        <Grid item md={12} xs={12}>\r\n                            <Grid container>\r\n                                <Grid item md={12} xs={12}>\r\n                                    <Product />\r\n                                </Grid>\r\n                                <Grid item md={12} xs={12}>\r\n                                    <TrackAtribute />\r\n                                </Grid>\r\n                                <Grid item md={12} xs={12}>\r\n                                    <Activity />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TrackingTool;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// ==============================|| CUSTOM SUB CARD ||============================== //\r\n\r\nconst SubCard = forwardRef(({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, ...others }, ref) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            ref={ref}\r\n            sx={{\r\n                border: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.primary.light,\r\n                ':hover': {\r\n                    boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                },\r\n                ...sx\r\n            }}\r\n            {...others}\r\n        >\r\n            {/* card header and action */}\r\n            {!darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />}\r\n            {darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />}\r\n\r\n            {/* content & header divider */}\r\n            {title && (\r\n                <Divider\r\n                    sx={{\r\n                        opacity: 1,\r\n                        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.primary.light\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* card content */}\r\n            {content && (\r\n                <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\r\n                    {children}\r\n                </CardContent>\r\n            )}\r\n            {!content && children}\r\n        </Card>\r\n    );\r\n});\r\n\r\nSubCard.propTypes = {\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    sx: PropTypes.object,\r\n    contentSX: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n    content: true\r\n};\r\n\r\nexport default SubCard;\r\n"],"sourceRoot":""}