{"version":3,"sources":["views/auth/login/component/loginForm.js","views/auth/login/index.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["jwt","require","LoginForm","loginProp","others","dispatch","useDispatch","navigate","useNavigate","theme","useTheme","useSelector","state","auth","loader","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","useEffect","setLoader","enableReinitialize","initialValues","email","password","validationSchema","Yup","shape","max","required","onSubmit","values","login","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","sx","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","name","onBlur","onChange","label","inputProps","FormHelperText","id","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Stack","direction","alignItems","justifyContent","spacing","Typography","variant","component","Link","to","textDecoration","color","submit","Box","mt","AnimateButton","Button","className","disableElevation","disabled","Grid","item","xs","container","background","display","marginTop","select_account","auto_select","onSuccess","data","decoded_data","decode","credential","axios","post","API_URL","then","response","loginSuccess","catch","toast","message","googleAuthHandle","onError","startIcon","Login","AuthWrapper","minHeight","palette","mode","md","lg","alignSelf","BackgroundPattern1","AuthCardWrapper","mb","Divider","styled","backgroundColor","children","other","borderRadius","maxWidth","margin","flexGrow","flexBasis","content","p","sm","xl","bgcolor","dark","backgroundImage","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/20.9f5f992b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { login, loginSuccess } from '../../../../redux/auth/actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setLoader } from '../../../../redux/auth/actions';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nlet jwt = require('jsonwebtoken');\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ReactFacebookLogin from 'react-facebook-login';\r\nimport './loginForm.css';\r\nimport { API_URL } from 'utils/axios';\r\nimport FacebookOutlinedIcon from '@mui/icons-material/FacebookOutlined';\r\n\r\nconst LoginForm = ({ loginProp, ...others }) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n\r\n    const loader = useSelector((state) => state.auth.loader);\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setLoader(false));\r\n    }, []);\r\n\r\n    const googleAuthHandle = (data) => {\r\n        const decoded_data = jwt.decode(data.credential);\r\n        axios\r\n            .post(API_URL + 'auth/google/callback/success', {\r\n                data: decoded_data\r\n            })\r\n            .then(function (response) {\r\n                dispatch(loginSuccess(response.data.data));\r\n                navigate('/');\r\n            })\r\n            .catch(function (error) {\r\n                toast.error(error.message);\r\n            });\r\n    };\r\n\r\n    const responseFacebook = (data) => {\r\n        let { email, first_name, last_name } = data;\r\n        axios\r\n            .post(API_URL + 'auth/facebook/callback/success', {\r\n                data: { email, first_name, last_name }\r\n            })\r\n            .then(function (response) {\r\n                dispatch(loginSuccess(response.data.data));\r\n                navigate('/');\r\n            })\r\n            .catch(function (error) {\r\n                toast.error(error.message);\r\n            });\r\n    };\r\n    const responseFacebookFailure = () => {\r\n        toast.error('Facebook login failed');\r\n    };\r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    email: '',\r\n                    password: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\r\n                    password: Yup.string().max(255).required('Password is required!')\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    await dispatch(setLoader(true));\r\n                    dispatch(\r\n                        login({\r\n                            email: values.email,\r\n                            password: values.password,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email </InputLabel>\r\n                            <OutlinedInput\r\n                                type=\"email\"\r\n                                // value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                // value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={'/forgetPassword'}\r\n                                sx={{ textDecoration: 'none', color: '#000 ' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                {loader ? (\r\n                                    <Button\r\n                                        className=\"signbuttonMarket\"\r\n                                        disableElevation\r\n                                        disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        Sign in\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Button\r\n                                        className=\"signbuttonMarket\"\r\n                                        disableElevation\r\n                                        disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        Sign in\r\n                                    </Button>\r\n                                )}\r\n                            </AnimateButton>\r\n                        </Box>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid mt={2} item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                <Typography variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                    or continue with\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item sx={{ background: '', display: 'flex', justifyContent: 'center', marginTop: '15px' }}>\r\n                            <GoogleLogin\r\n                                select_account={false}\r\n                                auto_select={false}\r\n                                onSuccess={(data) => {\r\n                                    googleAuthHandle(data);\r\n                                }}\r\n                                onError={() => {\r\n                                    toast.error('Google Auth Failed');\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item sx={{ background: '', display: 'flex', justifyContent: 'center', marginTop: '15px' }}>\r\n                            <Button variant=\"contained\" startIcon={<FacebookOutlinedIcon />}>\r\n                                Login with Facebook\r\n                            </Button>\r\n                        </Grid>\r\n                        {/*   <Grid\r\n                            item\r\n                            sx={{ background: '', display: 'flex', justifyContent: 'center', marginTop: '15px', paddingRight: '21%' }}\r\n                        >\r\n                            <ReactFacebookLogin\r\n                                appId=\"851727442768362\"\r\n                                // autoLoad={true}\r\n                                fields=\"first_name, last_name,email\"\r\n                                callback={responseFacebook}\r\n                                onFailure={responseFacebookFailure}\r\n                                icon=\"fa-facebook\"\r\n                                cssClass=\"my-facebook-button-class\"\r\n                                textButton=\" Login with Facebook\"\r\n                            />\r\n                        </Grid> */}\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Box, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\r\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\r\nimport LoginForm from './component/loginForm';\r\n\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ minHeight: '100vh', background: theme.palette.mode === 'dark' ? '#fff' : '#fff' }}\r\n            >\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\r\n                                        Sign In\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <LoginForm />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                    <Typography component={Link} to=\"/signUp\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                        Don&apos;t have an account?\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff':'#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            borderRadius:'4px',\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth-pattern.png';\r\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '97%',\r\n                bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n               \r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n               margin:'10px',\r\n              \r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n"],"sourceRoot":""}