{"version":3,"sources":["views/auth/login/component/loginForm.js","views/auth/login/index.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["jwt","require","LoginForm","loginProp","others","dispatch","useDispatch","navigate","useNavigate","theme","useTheme","useSelector","state","auth","loader","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","useEffect","setLoader","responseFacebook","data","email","first_name","last_name","axios","post","API_URL","then","response","loginSuccess","profileCompleted","socal","catch","error","toast","message","responseFacebookFailure","enableReinitialize","initialValues","password","validationSchema","Yup","shape","max","required","matches","onSubmit","values","login","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","sx","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","name","onBlur","onChange","label","inputProps","FormHelperText","id","color","value","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Stack","direction","alignItems","justifyContent","spacing","Typography","className","variant","component","Link","to","textDecoration","palette","mode","submit","Box","mt","AnimateButton","Button","disableElevation","disabled","Grid","item","xs","mb","container","fontSize","gridSpacing","lg","md","sm","float","appId","fields","callback","onFailure","cssClass","icon","textButton","onSuccess","console","log","decoded_data","decode","credential","googleAuthHandle","onError","Login","AuthWrapper","minHeight","background","Helmet","charSet","alignSelf","display","BackgroundPattern1","AuthCardWrapper","noWrap","marginTop","src","galileoWhite","alt","width","galileo","Divider","styled","backgroundColor","children","other","borderRadius","maxWidth","margin","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/24.1df57b89.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport \"@fontsource/public-sans\";\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { login, loginSuccess } from '../../../../redux/auth/actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setLoader } from '../../../../redux/auth/actions';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nlet jwt = require('jsonwebtoken');\r\nimport axios from 'axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ReactFacebookLogin from 'react-facebook-login';\r\nimport './loginForm.css';\r\nimport { API_URL } from 'utils/axios';\r\nimport FacebookOutlinedIcon from '@mui/icons-material/FacebookOutlined';\r\n\r\nconst LoginForm = ({ loginProp, ...others }) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n\r\n    const loader = useSelector((state) => state.auth.loader);\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setLoader(false));\r\n    }, []);\r\n\r\n    const googleAuthHandle = (data) => {\r\n        const decoded_data = jwt.decode(data.credential);\r\n        axios\r\n            .post(API_URL + 'auth/google/callback/success', {\r\n                data: decoded_data\r\n            })\r\n            .then(function (response) {\r\n                dispatch(loginSuccess(response.data.data));\r\n\r\n                if (!response.data.data.profileCompleted) {\r\n                    navigate('/socialLogin', {\r\n                        state: { socal: response.data.data }\r\n                    });\r\n                } else {\r\n                    navigate('/home', {\r\n                        state: { socal: response.data.data }\r\n                    });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                toast.error(error.message);\r\n            });\r\n    };\r\n\r\n    const responseFacebook = (data) => {\r\n        let { email, first_name, last_name } = data;\r\n        axios\r\n            .post(API_URL + 'auth/facebook/callback/success', {\r\n                data: { email, first_name, last_name }\r\n            })\r\n            .then(function (response) {\r\n                dispatch(loginSuccess(response.data.data));\r\n\r\n                if (!response.data.data.profileCompleted) {\r\n                    navigate('/socialLogin', {\r\n                        state: { socal: response.data.data }\r\n                    });\r\n                } else {\r\n                    navigate('/home', {\r\n                        state: { socal: response.data.data }\r\n                    });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                toast.error(error.message);\r\n            });\r\n    };\r\n    const responseFacebookFailure = (error) => {\r\n      \r\n        // toast.error(error);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    email: '',\r\n                    password: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\r\n                    // .matches(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/, 'Invalid Email'),\r\n                    // .matches(/^[a-zA-Z0-9]/, '* This email cannot contain white space and special character'),\r\n\r\n                    password: Yup.string().max(255).required('Password is required!')\r\n                    .matches(\r\n                        /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                        'Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character'\r\n                    ),\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    await dispatch(setLoader(true));\r\n                    dispatch(\r\n                        login({\r\n                            email: values.email,\r\n                            password: values.password,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl  \r\n                         fullWidth\r\n                         error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email </InputLabel>\r\n                            <OutlinedInput\r\n                            \r\n                                type=\"email\"\r\n                                // value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email\"\r\n\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl  \r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel   \r\n                            htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                            sx={{color:'#fff'}}\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" \r\n                        justifyContent=\"space-between\" spacing={1}>\r\n                            <Typography\r\n                            className='Forgot'\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={'/forgetPassword'}\r\n                                sx={{ textDecoration: 'none',\r\n                               \r\n                                 color: theme.palette.mode === 'dark' ? '#fff' : '#000' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                 {loader ? (\r\n                                    <Button\r\n                                        className=\"signbuttonMarket\"\r\n                                        disableElevation\r\n                                        disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        Sign in\r\n                                    </Button>\r\n                                ) : ( \r\n                                <Button\r\n                                    className=\"signbuttonMarket\"\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                             )} \r\n                            </AnimateButton>\r\n                        </Box>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid mt={2} mb={-2} item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                <Typography className='fontfamily' variant=\"subtitle1\" sx={{ textDecoration: 'none',\r\n                                fontSize: '16px' }}>\r\n                                    or continue with\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid mt={1} container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} >\r\n                                        <Box sx={{ float:{ md:'right', xs:'right'} }}>\r\n                                            <ReactFacebookLogin\r\n                                                appId=\"851727442768362\"\r\n                                                // autoLoad={true}\r\n                                                fields=\"first_name, last_name,email\"\r\n                                                callback={responseFacebook}\r\n                                                onFailure={responseFacebookFailure}\r\n                                                cssClass=\"my-facebook-button-class\"\r\n                                                icon=\"fa-facebook\"\r\n                                                textButton=\"\"\r\n                                            />\r\n                                        </Box>\r\n                                    </Grid>\r\n\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} >\r\n                                        <Box sx={{ float: {md:'left'} }}>\r\n                                            {' '}\r\n                                            <GoogleLogin\r\n                                                type=\"icon\"\r\n                                                onSuccess={(data) => {\r\n                                                    console.log('datafrom google login', data);\r\n                                                    googleAuthHandle(data);\r\n                                                }}\r\n                                                onError={() => {\r\n                                                    toast.error('Google Auth Failed');\r\n                                                }}\r\n                                            />\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                     \r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Link } from 'react-router-dom';\r\nimport '@fontsource/public-sans';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Box, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\r\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\r\nimport LoginForm from './component/loginForm';\r\n\r\nimport galileo from 'assets/images/galileo.png';\r\nimport galileoWhite from 'assets/images/galileo-white.png';\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\nimport { Helmet } from 'react-helmet';\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ minHeight: '100vh', background: theme.palette.mode === 'dark' ? '#000' : '#fff' }}\r\n            >\r\n                <Helmet>\r\n                    <meta charSet=\"utf-8\" />\r\n                    <title> Sign In </title>\r\n                </Helmet>\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ display: { xs: 'block', sm: 'block', md: 'none', lg: 'none' } }}>\r\n                                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{ marginTop: '5px' }}>\r\n                                        {theme.palette.mode === 'dark' ? (\r\n                                            <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\r\n                                        ) : (\r\n                                            <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\r\n                                        )}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\r\n                                        Sign In\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <LoginForm />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                    <Typography\r\n                                        className=\"fontfamily\"\r\n                                        component={Link}\r\n                                        to=\"/signUp\"\r\n                                        variant=\"subtitle1\"\r\n                                        sx={{ textDecoration: 'none' }}\r\n                                    >\r\n                                        Don&apos;t have an account?\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            borderRadius:'4px',\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth-pattern.png';\r\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '97%',\r\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n               \r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n               margin:'10px',\r\n              \r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n"],"sourceRoot":""}