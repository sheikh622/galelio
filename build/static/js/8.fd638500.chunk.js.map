{"version":3,"sources":["ui-component/extended/Chip.js","views/pages/superAdmin/brand/index.js"],"names":["Chip","chipcolor","disabled","variant","sx","others","theme","useTheme","defaultSX","color","palette","mode","primary","light","main","bgcolor","dark","outlineSX","border","borderColor","secondary","success","error","orange","warning","grey","SX","createData","id","name","company","type","qty","date","status","rowsInitial","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","label","align","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","selected","TableHead","TableRow","TableCell","padding","pl","Checkbox","indeterminate","checked","onChange","inputProps","colSpan","length","headCell","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","Box","component","visuallyHidden","pr","Typography","EnhancedTableToolbar","Toolbar","p","flexGrow","Tooltip","title","IconButton","size","fontSize","OrderList","useState","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","search","setSearch","rows","setRows","handleClick","selectedIndex","indexOf","newSelected","concat","slice","emptyRows","Math","max","MainCard","content","CardContent","Grid","container","justifyContent","alignItems","spacing","item","xs","sm","TextField","InputProps","startAdornment","InputAdornment","position","newString","target","value","newRows","filter","row","matches","containsQuery","forEach","toString","toLowerCase","includes","placeholder","textAlign","AnimateButton","Button","TableContainer","Table","minWidth","newSelectedId","n","TableBody","isItemSelected","labelId","hover","role","tabIndex","scope","cursor","style","height","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/8.fd638500.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiChip from '@mui/material/Chip';\r\n\r\n// ==============================|| CHIP ||============================== //\r\n\r\nconst Chip = ({ chipcolor, disabled, variant, sx = {}, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    let defaultSX = {\r\n        color: theme.palette.mode === 'dark' ? theme.palette.primary.light : theme.palette.primary.main,\r\n        bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.main : theme.palette.primary.light,\r\n        ':hover': {\r\n            color: theme.palette.primary.light,\r\n            bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.dark + 90 : theme.palette.primary.dark\r\n        }\r\n    };\r\n\r\n    let outlineSX = {\r\n        color: theme.palette.primary.main,\r\n        bgcolor: 'transparent',\r\n        border: '1px solid',\r\n        borderColor: theme.palette.primary.main,\r\n        ':hover': {\r\n            color: theme.palette.mode === 'dark' ? theme.palette.primary.light : theme.palette.primary.light,\r\n            bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark\r\n        }\r\n    };\r\n\r\n    switch (chipcolor) {\r\n        case 'secondary':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.secondary.main,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.secondary.main,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.secondary.light : theme.palette.secondary.main,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.secondary.light : theme.palette.secondary.main,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light,\r\n                    ':hover': {\r\n                        color: theme.palette.secondary.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark + 90 : theme.palette.secondary.main\r\n                    }\r\n                };\r\n            break;\r\n        case 'success':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.success.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.success.dark,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.success.light : theme.palette.success.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark : theme.palette.success.light + 60\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.success.light : theme.palette.success.dark,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark : theme.palette.success.light + 60,\r\n                    ':hover': {\r\n                        color: theme.palette.success.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark + 90 : theme.palette.success.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'error':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.error.main,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.error.main,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.error.light : theme.palette.error.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark : theme.palette.error.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.error.light : theme.palette.error.dark,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark : theme.palette.error.light + 60,\r\n                    ':hover': {\r\n                        color: theme.palette.error.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark + 90 : theme.palette.error.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'orange':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.orange?.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.orange?.main,\r\n                    ':hover': {\r\n                        color: theme.palette.orange?.dark,\r\n                        bgcolor: theme.palette.orange?.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.orange?.dark,\r\n                    bgcolor: theme.palette.orange?.light,\r\n                    ':hover': {\r\n                        color: theme.palette.orange?.light,\r\n                        bgcolor: theme.palette.orange?.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'warning':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.warning.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.warning.dark,\r\n                    ':hover': {\r\n                        color: theme.palette.warning.dark,\r\n                        bgcolor: theme.palette.warning.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.warning.dark,\r\n                    bgcolor: theme.palette.warning.light,\r\n                    ':hover': {\r\n                        color: theme.palette.warning.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.warning.dark + 90 : theme.palette.warning.dark\r\n                    }\r\n                };\r\n            break;\r\n        default:\r\n    }\r\n\r\n    if (disabled) {\r\n        if (variant === 'outlined')\r\n            outlineSX = {\r\n                color: theme.palette.grey[500],\r\n                bgcolor: 'transparent',\r\n                border: '1px solid',\r\n                borderColor: theme.palette.grey[500],\r\n                ':hover': {\r\n                    color: theme.palette.grey[500],\r\n                    bgcolor: 'transparent'\r\n                }\r\n            };\r\n        else\r\n            defaultSX = {\r\n                color: theme.palette.grey[500],\r\n                bgcolor: theme.palette.grey[50],\r\n                ':hover': {\r\n                    color: theme.palette.grey[500],\r\n                    bgcolor: theme.palette.grey[50]\r\n                }\r\n            };\r\n    }\r\n\r\n    let SX = defaultSX;\r\n    if (variant === 'outlined') {\r\n        SX = outlineSX;\r\n    }\r\n\r\n    SX = { ...SX, ...sx };\r\n    return <MuiChip {...others} sx={SX} />;\r\n};\r\n\r\nChip.propTypes = {\r\n    sx: PropTypes.object,\r\n    chipcolor: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default Chip;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CardContent,\r\n    Checkbox,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel,\r\n    TextField,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\n// project imports\r\nimport Chip from 'ui-component/extended/Chip';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterListTwoTone';\r\nimport PrintIcon from '@mui/icons-material/PrintTwoTone';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopyTwoTone';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\n\r\n// table data\r\nfunction createData(id, name, company, type, qty, date, status) {\r\n    return { id, name, company, type, qty, date, status };\r\n}\r\n\r\nconst rowsInitial = [\r\n    createData('790841', 'Joseph William 1', 'Toronto', 'Credit Card', 2500, '12.07.2018', 3),\r\n    createData('790842', 'Anshan Handgun 2', 'Toronto', 'Paytm', 5000, '12.07.2018', 2),\r\n    createData('798699', 'Larry Doe 3', 'Toronto', 'Net Banking', 2500, '12.07.2018', 1),\r\n    createData('790752', 'Sara Soudan 4', 'Toronto', 'Upi', 5000, '12.07.2018', 1),\r\n    createData('790955', 'Joseph William 5', 'Toronto', 'Credit Card', 2500, '12.07.2018', 2),\r\n    createData('790785', 'Anshan Handgun 6', 'Toronto', 'Upi', 5000, '12.07.2018', 3),\r\n    createData('800837', 'Larry Doe 7', 'Toronto', 'Paytm', 2500, '12.07.2018', 3),\r\n    createData('810365', 'Sara Soudan 8', 'Toronto', 'Net Banking', 5000, '12.07.2018', 2),\r\n    createData('810814', 'Sara Soudan 20', 'Toronto', 'Upi', 2500, '12.07.2018', 1),\r\n    createData('820385', 'Joseph William 9', 'Toronto', 'Net Banking', 5000, '12.07.2018', 1),\r\n    createData('820885', 'Anshan Handgun 10', 'Toronto', 'Credit Card', 2500, '12.07.2018', 1),\r\n    createData('830390', 'Larry Doe 11', 'Toronto', 'Paytm', 5000, '12.07.2018', 2),\r\n    createData('830879', 'Sara Soudan 12', 'Toronto', 'Upi', 2500, '12.07.2018', 3),\r\n    createData('900111', 'Joseph William 13', 'Toronto', 'Upi', 5000, '12.07.2018', 3),\r\n    createData('900836', 'Anshan Handgun 14', 'Toronto', 'Credit Card', 2500, '12.07.2018', 2),\r\n    createData('900112', 'Larry Doe 15', 'Toronto', 'Paytm', 5000, '12.07.2018', 2),\r\n    createData('900871', 'Sara Soudan 16', 'Toronto', 'Upi', 2500, '12.07.2018', 1),\r\n    createData('910232', 'Joseph William 17', 'Toronto', 'Upi', 5000, '12.07.2018', 2),\r\n    createData('910886', 'Anshan Handgun 18', 'Toronto', 'Credit Card', 2500, '12.07.2018', 3),\r\n    createData('910232', 'Larry Doe 19', 'Toronto', 'Net Banking', 5000, '12.07.2018', 2)\r\n];\r\n\r\n// table sort\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst getComparator = (order, orderBy) =>\r\n    order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header options\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'id',\r\n        numeric: true,\r\n        label: 'ID',\r\n        align: 'center'\r\n    },\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        label: 'Product Name',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'company',\r\n        numeric: true,\r\n        label: 'Branch',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'type',\r\n        numeric: true,\r\n        label: 'Payment Type',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'qty',\r\n        numeric: true,\r\n        label: 'Quantity',\r\n        align: 'right'\r\n    },\r\n    {\r\n        id: 'date',\r\n        numeric: true,\r\n        label: 'Registered',\r\n        align: 'center'\r\n    },\r\n    {\r\n        id: 'status',\r\n        numeric: false,\r\n        label: 'Status',\r\n        align: 'center'\r\n    }\r\n];\r\n\r\n// ==============================|| TABLE HEADER ||============================== //\r\n\r\nfunction EnhancedTableHead({ onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, theme, selected }) {\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts'\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {numSelected > 0 && (\r\n                    <TableCell padding=\"none\" colSpan={8}>\r\n                        <EnhancedTableToolbar numSelected={selected.length} />\r\n                    </TableCell>\r\n                )}\r\n                {numSelected <= 0 &&\r\n                    headCells.map((headCell) => (\r\n                        <TableCell\r\n                            key={headCell.id}\r\n                            align={headCell.align}\r\n                            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                            sortDirection={orderBy === headCell.id ? order : false}\r\n                        >\r\n                            <TableSortLabel\r\n                                active={orderBy === headCell.id}\r\n                                direction={orderBy === headCell.id ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell.id)}\r\n                            >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <Box component=\"span\" sx={visuallyHidden}>\r\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                    </Box>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    ))}\r\n                {numSelected <= 0 && (\r\n                    <TableCell sortDirection={false} align=\"center\" sx={{ pr: 3 }}>\r\n                        <Typography variant=\"subtitle1\" sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}>\r\n                            Action\r\n                        </Typography>\r\n                    </TableCell>\r\n                )}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    theme: PropTypes.object,\r\n    selected: PropTypes.array,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired\r\n};\r\n\r\n// ==============================|| TABLE HEADER TOOLBAR ||============================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }) => (\r\n    <Toolbar\r\n        sx={{\r\n            p: 0,\r\n            pl: 1,\r\n            pr: 1,\r\n            ...(numSelected > 0 && {\r\n                color: (theme) => theme.palette.secondary.main\r\n            })\r\n        }}\r\n    >\r\n        {numSelected > 0 ? (\r\n            <Typography color=\"inherit\" variant=\"h4\">\r\n                {numSelected} Selected\r\n            </Typography>\r\n        ) : (\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n                Nutrition\r\n            </Typography>\r\n        )}\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        {numSelected > 0 && (\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton size=\"large\">\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n);\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired\r\n};\r\n\r\n// ==============================|| ORDER LIST ||============================== //\r\n\r\nconst OrderList = () => {\r\n    const theme = useTheme();\r\n\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('calories');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [search, setSearch] = useState('');\r\n    const [rows, setRows] = useState(rowsInitial);\r\n\r\n    const handleSearch = (event) => {\r\n        const newString = event?.target.value;\r\n        setSearch(newString || '');\r\n\r\n        if (newString) {\r\n            const newRows = rows.filter((row) => {\r\n                let matches = true;\r\n\r\n                const properties = ['name', 'company', 'type', 'qty', 'id'];\r\n                let containsQuery = false;\r\n\r\n                properties.forEach((property) => {\r\n                    if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\r\n                        containsQuery = true;\r\n                    }\r\n                });\r\n\r\n                if (!containsQuery) {\r\n                    matches = false;\r\n                }\r\n                return matches;\r\n            });\r\n            setRows(newRows);\r\n        } else {\r\n            setRows(rowsInitial);\r\n        }\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId = rows.map((n) => n.name);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        if (event?.target.value) setRowsPerPage(parseInt(event?.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <MainCard title=\"Product List\" content={false}>\r\n            <CardContent>\r\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon fontSize=\"small\" />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                            onChange={handleSearch}\r\n                            placeholder=\"Search Order\"\r\n                            value={search}\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n                    <Box >\r\n                    <AnimateButton>\r\n                        \r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                              Add Product\r\n                            </Button>\r\n                        \r\n                    </AnimateButton>\r\n                </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\">\r\n                    <EnhancedTableHead\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                        theme={theme}\r\n                        selected={selected}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row, index) => {\r\n                                /** Make sure no display bugs if row isn't an OrderData object */\r\n                                if (typeof row === 'number') return null;\r\n\r\n                                const isItemSelected = isSelected(row.name);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={index}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell padding=\"checkbox\" sx={{ pl: 3 }} onClick={(event) => handleClick(event, row.name)}>\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{\r\n                                                    'aria-labelledby': labelId\r\n                                                }}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {' '}\r\n                                                #{row.id}{' '}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.900' }}\r\n                                            >\r\n                                                {' '}\r\n                                                {row.name}{' '}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>{row.company}</TableCell>\r\n                                        <TableCell>{row.type}</TableCell>\r\n                                        <TableCell align=\"right\">{row.qty}</TableCell>\r\n                                        <TableCell align=\"center\">{row.date}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.status === 1 && <Chip label=\"Complete\" size=\"small\" chipcolor=\"success\" />}\r\n                                            {row.status === 2 && <Chip label=\"Pending\" size=\"small\" chipcolor=\"orange\" />}\r\n                                            {row.status === 3 && <Chip label=\"Processing\" size=\"small\" chipcolor=\"primary\" />}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                            <IconButton color=\"primary\" size=\"large\">\r\n                                            <DeleteOutlineOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                            </IconButton>\r\n                                            <IconButton color=\"secondary\" size=\"large\">\r\n                                                <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: 53 * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* table pagination */}\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default OrderList;\r\n"],"sourceRoot":""}