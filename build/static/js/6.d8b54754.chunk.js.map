{"version":3,"sources":["shared/component/AuthWrapper.js","shared/component/LoginCardWrapper.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","views/auth/resetPassword/ResetPassword.js","views/auth/resetPassword/index.js"],"names":["AuthWrapper","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","LoginCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","_interopRequireDefault","require","Object","defineProperty","exports","value","_createSvgIcon","_jsxRuntime","_default","jsx","d","ResetPasswordForm","userId","token","others","useTheme","dispatch","useDispatch","navigate","useNavigate","useState","showPassword","setShowPassword","handleClickShowPassword","showConfirmPassword","setShowConfirmPassword","handleClickShowConfirmPassword","handleMouseDownPassword","event","preventDefault","initialValues","newPassword","confirmPassword","validationSchema","Yup","shape","max","required","matches","when","is","val","length","then","oneOf","onSubmit","values","a","console","log","resetPassword","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","password","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","name","onBlur","onChange","e","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","inputProps","FormHelperText","submit","Box","mt","AnimateButton","Button","className","disableElevation","disabled","variant","color","ResetPassword","matchDownSM","useMediaQuery","breakpoints","down","urlSearchParams","URLSearchParams","window","location","search","params","fromEntries","entries","Grid","container","direction","justifyContent","item","alignItems","m","mb","spacing","Stack","Typography","gutterBottom","fontSize","textAlign","Divider","component","Link","to","textDecoration"],"mappings":"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","file":"static/js/6.d8b54754.chunk.js","sourcesContent":["// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst LoginCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 550 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nLoginCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default LoginCardWrapper;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, OutlinedInput } from '@mui/material';\r\nimport {  useSelector } from 'react-redux';\r\n\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetPassword } from 'redux/auth/actions';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n// ========================|| FIREBASE - RESET PASSWORD ||======================== //\r\n\r\nconst ResetPasswordForm = ({ userId, token, ...others }) => {\r\n   \r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n  \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const handleClickShowConfirmPassword = () => {\r\n        setShowConfirmPassword(!showConfirmPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        < ><Formik\r\n            initialValues={{\r\n                newPassword: '',\r\n                confirmPassword: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                newPassword: Yup.string().max(255)\r\n                .required(\"Password is required!\")\r\n                .matches(\r\n                    /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                    \"Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character\"\r\n                ),\r\n                confirmPassword: Yup.string().when('password', {\r\n                    is: (val) => !!(val && val.length > 0),\r\n                    then: Yup.string().oneOf([Yup.ref('password')], 'Both Password must be match!')\r\n                })\r\n            })}\r\n            onSubmit={async (values) => {\r\n                console.log(values.newPassword);\r\n\r\n                await dispatch(\r\n                    resetPassword({\r\n                        newPassword: values.newPassword,\r\n                        token: token,\r\n                        // userId: userId,\r\n                        navigate: navigate\r\n                    })\r\n                );\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl fullWidth error={Boolean(touched.password && errors.password)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-reset\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password-reset\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.newPassword}\r\n                            name=\"newPassword\"\r\n                            onBlur={handleBlur}\r\n                            onChange={(e) => {\r\n                                handleChange(e);\r\n                            }}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{}}\r\n                        />\r\n                    </FormControl>\r\n                    {touched.password && errors.password && (\r\n                        <FormControl fullWidth>\r\n                            <FormHelperText error id=\"standard-weight-helper-text-reset\">\r\n                                {errors.password}\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                    )}\r\n\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                        sx={{ ...theme.typography.customInput }}\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-reset\">Confirm Password </InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-confirmpassword-reset\"\r\n                            type={showConfirmPassword ? 'text' : 'password'}\r\n                            value={values.confirmPassword}\r\n                            name=\"confirmPassword\"\r\n                            onBlur={handleBlur}\r\n                            onChange={(e) => {\r\n                                handleChange(e);\r\n                            }}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowConfirmPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            inputProps={{}}\r\n                        />\r\n                    </FormControl>\r\n\r\n                    {touched.confirmPassword && errors.confirmPassword && (\r\n                        <FormControl fullWidth>\r\n                            <FormHelperText error id=\"standard-weight-helper-text-confirm-password\">\r\n                                {' '}\r\n                                {errors.confirmPassword}{' '}\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                    )}\r\n\r\n                    {errors.submit && (\r\n                        <Box\r\n                            sx={{\r\n                                mt: 3\r\n                            }}\r\n                        >\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                    <Box\r\n                        sx={{\r\n                            mt: 1\r\n                        }}\r\n                    >\r\n                        <AnimateButton>\r\n                            <Button\r\n                             className='signbutton'\r\n                            sx={{background:\"#816a51\"}}\r\n                                disableElevation\r\n                                disabled={isSubmitting}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                              Reset Password\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik></>\r\n      \r\n       \r\n    );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","import { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport AuthWrapper from '../../../shared/component/AuthWrapper';\r\nimport LoginCardWrapper from '../../../shared/component/LoginCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport ResetPasswordForm from './ResetPassword';\r\nimport React from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nconst ResetPassword = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n    const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n    return (\r\n        <AuthWrapper>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <LoginCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                       \r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                         className='Signin'\r\n                                                         sx={{color:\"#816a51\"}}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                       Reset Password \r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                       Please choose your new password\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <ResetPasswordForm \r\n                                        token={params.token} userId={params.id} \r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography component={Link} to={'/'} variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                           Already have an account? \r\n                                              \r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </LoginCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"sourceRoot":""}