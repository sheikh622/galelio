{"version":3,"sources":["views/pages/user/marketplace/component/tabs.js","views/pages/user/marketplace/component/nfts.js","views/pages/user/marketplace/index.js","views/pages/user/commonComponent/nftCard.js"],"names":["a11yProps","index","id","HorizontalTabs","marketplaceCategories","categoryId","setCategoryId","theme","useTheme","Tabs","value","variant","onChange","event","newValue","sx","mb","ml","minHeight","minWidth","py","px","mr","color","palette","grey","display","flexDirection","alignItems","justifyContent","primary","main","Tab","to","label","categories","length","map","item","name","NFTS","marketplaceNfts","Grid","spacing","gridSpacing","paddingRight","xs","nfts","rows","container","mt","textAlign","data","style","Marketplace","dispatch","useDispatch","location","useLocation","useSelector","state","marketplaceReducer","useState","search","page","limit","useEffect","getAllMarketplaceCategories","category","getAllMarketplaceNftsByCategory","md","lg","background","mode","sm","marginBottom","paddingLeft","NftCard","navigate","useNavigate","onClick","nft","textDecoration","maxWidth","width","boxShadow","borderRadius","component","height","image","asset","padding","fontWeight","fontSize","className","marginTop","Brand","float","marginLeft","currencyType","price"],"mappings":"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","file":"static/js/38.45bfca4c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Grid, Tab, Tabs, Typography } from '@mui/material';\r\nimport binance from 'assets/images/coins/binance.png';\r\nimport eth from 'assets/images/coins/eth.png';\r\nimport polygon from 'assets/images/coins/polygon.png';\r\nimport xdc from 'assets/images/coins/xdc.png';\r\nimport solana from 'assets/images/coins/solana.png';\r\n\r\n// tab content\r\nfunction TabPanel({ children, value, index, ...other }) {\r\n    return (\r\n        <div role=\"tabpanel\" hidden={value !== index} \r\n        id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\r\n            {value === index && (\r\n                <Box\r\n                    sx={{\r\n                        p: 1,\r\n                        pr: 2\r\n                    }}\r\n                >\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`\r\n    };\r\n}\r\n\r\nexport default function HorizontalTabs({ marketplaceCategories,categoryId,setCategoryId }) {\r\n    const theme = useTheme();\r\n    const handleChange = (event, newValue) => {\r\n        setCategoryId(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                value={categoryId}\r\n                variant=\"scrollable\"\r\n                onChange={handleChange}\r\n                sx={{\r\n                    mb: 1,\r\n                    ml: 1,\r\n                    '& a': {\r\n                        minHeight: '1rem',\r\n                        minWidth: 10,\r\n                        py: 1.5,\r\n                        px: 0,\r\n                        mr: 4.7,\r\n                        color: theme.palette.grey[600],\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        // marginBottom: '0.3%'\r\n                    },\r\n                    '& a.Mui-selected': {\r\n                        color: theme.palette.primary.main\r\n                    }\r\n                }}\r\n            >\r\n                   <Tab sx={{}} to=\"#\" label={'All'} value={0} {...a11yProps(0)} />\r\n                {marketplaceCategories?.categories?.length > 0 &&\r\n                    marketplaceCategories?.categories.map((item) => {\r\n                        return <Tab label={item.name} value={item.id} {...a11yProps(item.id)} />;\r\n                    })}\r\n\r\n                \r\n            </Tabs>\r\n\r\n            \r\n        </>\r\n    );\r\n}","import { Grid } from '@mui/material';\r\nimport { gridSpacing } from 'store/constant';\r\nimport NftCard from '../../commonComponent/nftCard';\r\nconst NFTS = ({ marketplaceNfts }) => {\r\n\r\n    return (\r\n        <Grid container-fluid spacing={gridSpacing} sx={{ paddingRight: '0%' }}>\r\n            <Grid item xs={12}>\r\n            {marketplaceNfts?.nfts?.rows.length > 0?(\r\n                <Grid container justifyContent=\"left\" spacing={gridSpacing} sx={{ mt: 2, textAlign: 'center', paddingRight: '1%' }}>\r\n                {marketplaceNfts?.nfts?.rows.map((item) => (\r\n                    <NftCard data={item} />\r\n                ))}\r\n            </Grid>\r\n            \r\n                ) : (\r\n                    <>\r\n                    <Grid container justifyContent=\"center\" spacing={gridSpacing} sx={{ mt: 2, textAlign: 'center', paddingRight: '1%' }}>\r\n             \r\n                            <h3 style={{ textAlign: 'center' }}>No Data found.</h3>\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n           \r\n             \r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default NFTS;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Grid } from '@mui/material';\r\nimport { useTheme } from '@mui/styles';\r\nimport Tabs from './component/tabs';\r\nimport NFTS from './component/nfts';\r\nimport { getAllMarketplaceCategories, getAllMarketplaceNftsByCategory } from 'redux/marketplace/actions';\r\nconst Marketplace = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const marketplaceCategories = useSelector((state) => state.marketplaceReducer.marketplaceCategories);\r\n    const marketplaceNfts = useSelector((state) => state.marketplaceReducer.marketplaceNfts);\r\n    const [search, setSearch] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [limit, setLimit] = useState(10);\r\n    const [categoryId, setCategoryId] = useState(0);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllMarketplaceCategories());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (location.state) {\r\n            setCategoryId(location.state.category.id);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        dispatch(\r\n            getAllMarketplaceNftsByCategory({\r\n                search: search,\r\n                page: page,\r\n                limit: limit,\r\n                categoryId: categoryId\r\n            })\r\n        );\r\n    }, [search, page, limit, categoryId]);\r\n    return (\r\n        <Grid\r\n            item\r\n            md={12}\r\n            lg={11}\r\n            xs={12}\r\n            style={{\r\n                background: 'tranparent',\r\n                color: theme.palette.mode === 'dark' ? 'white' : '#404040'\r\n            }}\r\n        >\r\n            <Grid container sx={{ display: { xs: 'block', sm: 'block', md: 'flex' }, marginBottom: '40px' }}>\r\n                <Grid item md={12} xs={12} sx={{ mt: 2, paddingLeft: 1, paddingRight: 2 }}>\r\n                    <Grid container>\r\n                        <h1 style={{ paddingLeft: '0.5%' }}>Marketplace</h1>\r\n\r\n                        <Grid item md={12} xs={12}>\r\n                            <Tabs marketplaceCategories={marketplaceCategories} categoryId={categoryId} setCategoryId={setCategoryId} />\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12}>\r\n                            <NFTS marketplaceNfts={marketplaceNfts} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Marketplace;\r\n","import { useTheme } from '@mui/material/styles';\r\nimport { Card, Grid, CardActionArea, CardContent, Divider } from '@mui/material';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NftCard = ({ data }) => {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Grid\r\n            item\r\n            md={2}\r\n            sm={6}\r\n            onClick={() => {\r\n                navigate('/productDetails', {\r\n                    state: {\r\n                        nft: data\r\n                    }\r\n                });\r\n            }}\r\n            sx={{ color: theme.palette.mode === 'dark' ? 'white' : 'black', textDecoration: 'none' }}\r\n        >\r\n            <Card\r\n                sx={{\r\n                    color: theme.palette.mode === 'dark' ? 'white' : '#404040',\r\n                    background: theme.palette.mode === 'dark' ? '#181C1F' : 'white',\r\n                    maxWidth: 365,\r\n                    width: '105%',\r\n                    boxShadow: '1px 2px 6px #d3d3d3',\r\n                    borderRadius: '7px'\r\n                }}\r\n            >\r\n                <CardActionArea>\r\n                    <CardMedia component=\"img\" height=\"200\" image={data.asset} />\r\n                    <CardContent sx={{ padding: '6%' }}>\r\n                        <Grid container>\r\n                            <Grid item xs={8} sx={{ textAlign: 'left' }}>\r\n                                <span style={{ fontWeight: '550', fontSize: '100%' }}>  {data.name} </span>\r\n                                <div className=\"overflow\" style={{ marginTop: '5%', color: '#656565' }}>\r\n                                {data.Brand.name}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={4} sx={{ background: '' }}>\r\n                                <span sx={{ fontWeight: '40 !important ', fontSize: '110%', float: 'right', color: '#878787' }}>\r\n                                    Creator\r\n                                </span>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Divider sx={{ mt: 2, mb: 2 }} />\r\n                        <Grid>\r\n                            <Grid item md={12} xs={12} className=\"overflow\" sx={{ marginTop: { xs: '10px', md: '0' } }}>\r\n                                <span sx={{ float: 'left' }}>Current Price :</span>\r\n                                <span sx={{ marginLeft: '2%' }}>\r\n                                    <b>{data.currencyType + ' ' + data.price}</b>\r\n                                </span>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default NftCard;\r\n"],"sourceRoot":""}