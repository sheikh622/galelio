{"version":3,"sources":["views/pages/superAdmin/brands/component/deleteBrandDialog.js","views/pages/superAdmin/brands/component/brandTable.js","views/pages/superAdmin/brands/component/addUpdateBrand.js","views/pages/superAdmin/brands/index.js","ui-component/extended/Avatar.js","shared/Card/HeadingCard.js","shared/component/FileInput.js","../node_modules/@mui/icons-material/AddCircleOutlined.js","../node_modules/@mui/icons-material/CloseOutlined.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/icons-material/AccountCircle.js"],"names":["Transition","forwardRef","props","ref","Slide","direction","DeleteBrandDialog","open","setOpen","brandId","page","limit","search","theme","useTheme","dispatch","useDispatch","handleClose","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","id","DialogContent","DialogContentText","Typography","variant","component","DialogActions","sx","pr","Button","color","palette","error","dark","borderColor","onClick","size","deleteBrand","BrandTable","brandsList","setAddUpdateOpen","setBrandData","navigate","useNavigate","useState","deleteOpen","setDeleteOpen","setBrandId","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","undefined","brands","count","map","row","index","Avatar","alt","src","image","float","padding","textTransform","name","location","description","moment","createdAt","format","updatedAt","Stack","justifyContent","alignItems","Tooltip","placement","title","IconButton","state","brandData","fontSize","orange","main","background","light","Grid","container","width","m","item","CircularProgress","AddUpdateBrandDialog","isUpdate","setIsUpdate","useEffect","validationSchema","Yup","default","required","max","matches","when","is","then","otherwise","formik","useFormik","enableReinitialize","initialValues","onSubmit","values","isValid","split","pop","toast","errorHandler","addBrand","updateBrand","resetForm","className","maxWidth","Divider","autoComplete","handleSubmit","xs","pt","InputLabel","htmlFor","TextField","value","onChange","handleChange","touched","Boolean","errors","helperText","fullWidth","FileInput","accept","fieldName","placeHolder","AnimateButton","type","my","ml","disableElevation","Brands","useSelector","brand","setSearch","setPage","setLimit","addUpdateOpen","anchorEl","setAnchorEl","handleCloseMenu","getAllBrands","HeadingCard","MainCard","spacing","gridSpacing","OutlinedInput","placeholder","startAdornment","InputAdornment","position","stroke","e","target","textAlign","content","p","Pagination","showFirstButton","showLastButton","pages","event","newPage","grey","endIcon","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","outline","others","colorSX","paper","bgcolor","outlineSX","border","sizeSX","height","role","setValue","options","marginBottom","primary","marginTop","fontWeight","select","option","label","fileRef1","useRef","current","click","hidden","setFieldValue","files","length","mt","substring","toFixed","style","_interopRequireDefault","require","Object","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","styles","ownerState","root","capitalize","_extends","display","transition","transitions","create","vars","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","strokeDasharray","strokeDashoffset","React","inProps","useThemeProps","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","round","transform","_jsx","clsx","children","viewBox","cx","cy","r","fill","strokeWidth"],"mappings":"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","file":"static/js/10.3015ada0.chunk.js","sourcesContent":["import { forwardRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Slide, DialogContentText, Typography } from '@mui/material';\r\nimport { deleteBrand } from '../../../../../redux/brand/actions';\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\nexport default function DeleteBrandDialog({ open, setOpen, brandId, page, limit, search }) {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title1\"\r\n                aria-describedby=\"alert-dialog-slide-description1\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title1\">Delete Brand</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description1\">\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Are you sure you want to delete this Brand?\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button\r\n                        sx={{ color: theme.palette.error.dark, borderColor: theme.palette.error.dark }}\r\n                        onClick={handleClose}\r\n                        color=\"secondary\"\r\n                    >\r\n                        No\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        onClick={() => {\r\n                            dispatch(\r\n                                deleteBrand({\r\n                                    id: brandId,\r\n                                    handleClose: handleClose,\r\n                                    page: page,\r\n                                    limit: limit,\r\n                                    search: search\r\n                                })\r\n                            );\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    IconButton,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Tooltip,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\r\nimport DeleteBrandDialog from './deleteBrandDialog';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport moment from 'moment';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nconst BrandTable = ({ brandsList, page, limit, search, setAddUpdateOpen, setBrandData }) => {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [deleteOpen, setDeleteOpen] = useState(false);\r\n    const [brandId, setBrandId] = useState();\r\n    return (\r\n        <TableContainer>\r\n            <DeleteBrandDialog open={deleteOpen} setOpen={setDeleteOpen} brandId={brandId} page={page} limit={limit} search={search} />\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\"></TableCell>\r\n                        <TableCell align=\"center\">Name</TableCell>\r\n                        <TableCell align=\"center\">Location</TableCell>\r\n                        <TableCell align=\"center\">Description</TableCell>\r\n                        <TableCell align=\"center\">Created At</TableCell>\r\n                        <TableCell align=\"center\">Updated At</TableCell>\r\n                        <TableCell align=\"center\">Actions</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(brandsList.brands != undefined && brandsList.count != 0) || undefined ? (\r\n                        <>\r\n                            {brandsList.brands != undefined &&\r\n                                brandsList.brands.map((row, index) => (\r\n                                    <TableRow>\r\n                                        <TableCell align=\"right\">\r\n                                            <Avatar alt=\"Brand Image\" src={row.image} sx={{ float: 'right' }} />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" sx={{ padding: '0px', textTransform: 'capitalize' }}>\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" sx={{ padding: '0px', textTransform: 'capitalize'  }}>\r\n                                            {row.location}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" sx={{ padding: '0px',  textTransform: 'capitalize'  }}>\r\n                                            {row.description}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{moment(row.createdAt).format('DD-MMM-YYYY')}</TableCell>\r\n                                        <TableCell align=\"center\">{moment(row.updatedAt).format('DD-MMM-YYYY')}</TableCell>\r\n                                        <TableCell align=\"center\" sx={{ padding: '0px' , textTransform: 'capitalize'  }}>\r\n                                            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                                                <Tooltip placement=\"top\" title=\"Add Brand Admin\">\r\n                                                    <IconButton\r\n                                                        color=\"primary\"\r\n                                                        aria-label=\"detail\"\r\n                                                        size=\"medium\"\r\n                                                        onClick={() => {\r\n                                                            navigate('/brands/admin', {\r\n                                                                state: {\r\n                                                                    brandData: row\r\n                                                                }\r\n                                                            });\r\n                                                        }}\r\n                                                    >\r\n                                                        <AccountCircleIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                                <Tooltip placement=\"top\" title=\"Add Brand Categories\">\r\n                                                    <IconButton\r\n                                                        sx={{ color: '#c71585' }}\r\n                                                        aria-label=\"detail\"\r\n                                                        size=\"medium\"\r\n                                                        onClick={() => {\r\n                                                            navigate('/brands/category', {\r\n                                                                state: {\r\n                                                                    brandData: row\r\n                                                                }\r\n                                                            });\r\n                                                        }}\r\n                                                    >\r\n                                                        <DashboardIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                                <Tooltip placement=\"top\" title=\"Edit\">\r\n                                                    <IconButton\r\n                                                        sx={{ color: '#008b04' }}\r\n                                                        aria-label=\"Edit\"\r\n                                                        size=\"large\"\r\n                                                        onClick={() => {\r\n                                                            setAddUpdateOpen(true);\r\n                                                            setBrandData({\r\n                                                                id: row.id,\r\n                                                                name: row.name,\r\n                                                                description: row.description,\r\n                                                                location: row.location,\r\n                                                                image: null\r\n                                                            });\r\n                                                        }}\r\n                                                    >\r\n                                                        <EditOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                                <Tooltip placement=\"top\" title=\"Delete\">\r\n                                                    <IconButton\r\n                                                        color=\"primary\"\r\n                                                        sx={{\r\n                                                            color: theme.palette.orange.dark,\r\n                                                            borderColor: theme.palette.orange.main,\r\n                                                            '&:hover ': { background: theme.palette.orange.light }\r\n                                                        }}\r\n                                                        size=\"large\"\r\n                                                        onClick={() => {\r\n                                                            setDeleteOpen(true);\r\n                                                            setBrandId(row.id);\r\n                                                        }}\r\n                                                    >\r\n                                                        <DeleteOutlineOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Stack>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Grid container justifyContent=\"center\" sx={{ width: '400%', m: 5 }}>\r\n                                <Grid item>\r\n                                    <CircularProgress size={'4rem'} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default BrandTable;\r\n","import { forwardRef, useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle, Slide, TextField, Divider, InputLabel } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { addBrand, updateBrand } from '../../../../../redux/brand/actions';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport FileInput from '../../../../../shared/component/FileInput';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function AddUpdateBrandDialog({ brandData, page, limit, search, open, setOpen }) {\r\n    const dispatch = useDispatch();\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (brandData.id == null) {\r\n            setIsUpdate(false);\r\n        } else {\r\n            setIsUpdate(true);\r\n        }\r\n    }, [brandData]);\r\n\r\n    const validationSchema = Yup.object({\r\n        isUpdate: Yup.boolean().default(isUpdate),\r\n        name: Yup.string()\r\n            .required('Brand Name is required!')\r\n            .max(42, 'Brand Name can not exceed 42 characters')\r\n            .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Brand name'),\r\n        location: Yup.string()\r\n            .required('Location is required!')\r\n            .max(42, 'Location can not exceed 42 characters')\r\n            .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Location'),\r\n        description: Yup.string()\r\n            .required('Brand is required!')\r\n            .max(42, 'Brand can not exceed 200 characters')\r\n            .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Description'),\r\n        image: Yup.mixed().when(['isUpdate'], {\r\n            is: true,\r\n            then: Yup.mixed(),\r\n            otherwise: Yup.mixed().required('Image is required')\r\n        })\r\n    });\r\n    const errorHandler = (values) => {\r\n        if (values.image) {\r\n            if (\r\n                values.image.name.split('.').pop() == 'jpg' ||\r\n                values.image.name.split('.').pop() == 'png' ||\r\n                values.image.name.split('.').pop() == 'jpeg '\r\n            ) {\r\n                return true;\r\n            } else {\r\n                toast.error('Upload the files with these extensions: jpg, png, jpeg');\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: brandData,\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            const isValid = errorHandler(values);\r\n            if (isValid) {\r\n                if (brandData.id == null) {\r\n                    dispatch(\r\n                        addBrand({\r\n                            name: values.name,\r\n                            description: values.description,\r\n                            location: values.location,\r\n                            image: values.image,\r\n                            page: page,\r\n                            limit: limit,\r\n                            search: search,\r\n                            handleClose: handleClose\r\n                        })\r\n                    );\r\n                } else {\r\n                    dispatch(\r\n                        updateBrand({\r\n                            brandId: brandData.id,\r\n                            name: values.name,\r\n                            description: values.description,\r\n                            location: values.location,\r\n                            image: values.image,\r\n                            page: page,\r\n                            limit: limit,\r\n                            search: search,\r\n                            handleClose: handleClose\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    });\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        formik.resetForm();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                className=\"brandDialog\"\r\n                maxWidth=\"md\"\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-describedby=\"alert-dialog-slide-description1\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title1\">{brandData.id == null ? 'Add Brand' : 'Update Brand'}</DialogTitle>\r\n                <Divider />\r\n                <DialogContent>\r\n                    <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n                        <Grid container>\r\n                            <Grid item xs={6} pt={4} pr={4}>\r\n                                <InputLabel htmlFor=\"outlined-adornment-password-login\">Name</InputLabel>\r\n                                <TextField\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    value={formik.values.name}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                    helperText={formik.touched.name && formik.errors.name}\r\n                                    fullWidth\r\n                                    autoComplete=\"given-name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6} pt={4}>\r\n                                <InputLabel htmlFor=\"outlined-adornment-password-login\">Location</InputLabel>\r\n                                <TextField\r\n                                    id=\"location\"\r\n                                    name=\"location\"\r\n                                    value={formik.values.location}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.location && Boolean(formik.errors.location)}\r\n                                    helperText={formik.touched.location && formik.errors.location}\r\n                                    fullWidth\r\n                                    autoComplete=\"given-name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} pt={2}>\r\n                                <InputLabel htmlFor=\"outlined-adornment-password-login\">Description</InputLabel>\r\n                                <TextField\r\n                                    id=\"description\"\r\n                                    name=\"description\"\r\n                                    value={formik.values.description}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                    helperText={formik.touched.description && formik.errors.description}\r\n                                    fullWidth\r\n                                    autoComplete=\"given-name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} pt={2}>\r\n                                <FileInput formik={formik} accept=\"image/*\" fieldName=\"image\" placeHolder=\"Add Brand Image\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </DialogContent>\r\n                <Divider />\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            sx={{ my: 3, ml: 1 }}\r\n                            onClick={() => {\r\n                                formik.handleSubmit();\r\n                            }}\r\n                            size=\"large\"\r\n                            disableElevation\r\n                        >\r\n                            {brandData.id == null ? 'Add' : 'Update'}\r\n                        </Button>\r\n                    </AnimateButton>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            sx={{ my: 3, ml: 1, color: '#fff' }}\r\n                            onClick={handleClose}\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport BrandTable from './component/brandTable';\r\nimport {\r\n    CircularProgress,\r\n    Button,\r\n    Typography,\r\n    Grid,\r\n    MenuItem,\r\n    Menu,\r\n    Pagination,\r\n    OutlinedInput,\r\n    InputAdornment,\r\n    Divider\r\n} from '@mui/material';\r\nimport { IconSearch } from '@tabler/icons';\r\nimport { getAllBrands } from '../../../../redux/brand/actions';\r\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\r\nimport AddUpdateBrandDialog from './component/addUpdateBrand';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport HeadingCard from 'shared/Card/HeadingCard';\r\n\r\nconst Brands = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const brandsList = useSelector((state) => state.brand.brandsList);\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [limit, setLimit] = useState(10);\r\n    const [brandData, setBrandData] = useState({\r\n        id: null,\r\n        name: '',\r\n        description: '',\r\n        image: null,\r\n        location: ''\r\n    });\r\n    const [addUpdateOpen, setAddUpdateOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getAllBrands({\r\n                search: search,\r\n                page: page,\r\n                limit: limit\r\n            })\r\n        );\r\n    }, [search, page, limit]);\r\n\r\n    return (\r\n        <>\r\n            <AddUpdateBrandDialog\r\n                brandData={brandData}\r\n                page={page}\r\n                limit={limit}\r\n                search={search}\r\n                open={addUpdateOpen}\r\n                setOpen={setAddUpdateOpen}\r\n            />\r\n            <HeadingCard title=\"Brand Management\" />\r\n\r\n\r\n            <MainCard\r\n                title={\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={6}>\r\n                            <OutlinedInput\r\n                                id=\"input-search-list-style1\"\r\n                                placeholder=\"Search\"\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                    </InputAdornment>\r\n                                }\r\n                                size=\"small\"\r\n                                onChange={(e) => {\r\n                                    setSearch(e.target.value);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6} textAlign=\"end\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                onClick={() => {\r\n                                    setAddUpdateOpen(true);\r\n                                    setBrandData({ id: null, name: '', description: '', location: '', image: null });\r\n                                }}\r\n                            >\r\n                                Add Brand\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                content={false}\r\n            >\r\n                <BrandTable\r\n                    brandsList={brandsList && brandsList}\r\n                    page={page}\r\n                    limit={limit}\r\n                    search={search}\r\n                    setAddUpdateOpen={setAddUpdateOpen}\r\n                    setBrandData={setBrandData}\r\n                />\r\n\r\n                <Grid item xs={12} sx={{ p: 3 }}>\r\n                    <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item>\r\n                            <Pagination\r\n                                color=\"primary\"\r\n                                showFirstButton\r\n                                showLastButton\r\n                                page={page}\r\n                                count={brandsList && brandsList.pages}\r\n                                onChange={(event, newPage) => {\r\n                                    setPage(newPage);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                size=\"large\"\r\n                                sx={{ color: theme.palette.grey[900] }}\r\n                                color=\"secondary\"\r\n                                endIcon={<ExpandMoreRoundedIcon />}\r\n                                onClick={handleClick}\r\n                            >\r\n                                {limit} Rows\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"menu-user-list-style1\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleCloseMenu}\r\n                                variant=\"selectedMenu\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                            >\r\n                                <MenuItem\r\n                                    value={10}\r\n                                    onClick={(e) => {\r\n                                        setLimit(e.target.value);\r\n                                        setPage(1);\r\n                                        handleCloseMenu();\r\n                                    }}\r\n                                >\r\n                                    {' '}\r\n                                    10 Rows\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    value={25}\r\n                                    onClick={(e) => {\r\n                                        setLimit(e.target.value);\r\n                                        setPage(1);\r\n                                        handleCloseMenu();\r\n                                    }}\r\n                                >\r\n                                    {' '}\r\n                                    25 Rows\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    value={50}\r\n                                    onClick={(e) => {\r\n                                        setLimit(e.target.value);\r\n                                        setPage(1);\r\n                                        handleCloseMenu();\r\n                                    }}\r\n                                >\r\n                                    {' '}\r\n                                    50 Rows{' '}\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </MainCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import { Box, Card, Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport { forwardRef } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// constant\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst HeadingCard = forwardRef(({ title, role, value, setValue, options }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                marginBottom: theme.spacing(gridSpacing),\r\n\r\n                borderColor: theme.palette.primary[200] + 75,\r\n                background: theme.palette.background.default\r\n            }}\r\n        >\r\n            <Box sx={{ padding: '13px 20px 22px 20px' }}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\" sx={{ marginTop:'10px' , fontWeight: 500, color: '#000' }}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {value !== undefined && (\r\n                        <Grid item>\r\n                            {/* {options && (role == 'teacher' || role == 'super_admin') && ( */}\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                value={value}\r\n                                onChange={(e) => setValue(e.target.value)}\r\n                                sx={{ width: '110px', height: '40px' }}\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            {/* )} */}\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default HeadingCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Fragment } from 'react';\r\nimport { Grid, Typography, IconButton, Tooltip, RadioGroup, FormControlLabel, Radio } from '@mui/material';\r\n\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\nimport AddCircleOutlinedIcon from '@mui/icons-material/AddCircleOutlined';\r\n\r\n// Props needed for component formik ,correctOption, setCorrectOption , optionValue , formikFieldName , PlaceHOLDER\r\nconst FileInput = ({ formik, fieldName, placeHolder, accept }) => {\r\n    const dispatch = useDispatch();\r\n    const fileRef1 = useRef();\r\n\r\n    return (\r\n        <>\r\n            <Grid item className=\"displayFlex\">\r\n                <Fragment>\r\n                    <Tooltip placement=\"top\" title={accept == 'image/*' ? 'Add Image' : 'Add Audio'}>\r\n                        <IconButton color=\"primary\" aria-label=\"delete\" size=\"large\" onClick={() => fileRef1.current.click()}>\r\n                            <AddCircleOutlinedIcon sx={{ fontSize: '3.0rem' }} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <input\r\n                        hidden\r\n                        ref={fileRef1}\r\n                        fullWidth\r\n                        type=\"file\"\r\n                        className=\"chooseFileInput\"\r\n                        accept={accept}\r\n                        onChange={(event) => {\r\n                            formik.setFieldValue(fieldName, event.currentTarget.files[0]);\r\n                        }}\r\n                        error={formik.touched[`${fieldName}`] && Boolean(formik.errors[`${fieldName}`])}\r\n                        helperText={formik.touched[`${fieldName}`] && formik.errors[`${fieldName}`]}\r\n                    />\r\n\r\n                    <Grid className=\"displayFlex\">\r\n                        {formik?.values[`${fieldName}`]?.name?.length < 40 ? (\r\n                            <Typography mt={3.5} variant=\"h5\">\r\n                                {formik.values[`${fieldName}`]?.name}\r\n                            </Typography>\r\n                        ) : (\r\n                            <Typography mt={3.5} variant=\"h5\">\r\n                                {formik.values[`${fieldName}`]?.name?.substring(0, 40)}\r\n                            </Typography>\r\n                        )}\r\n                        {formik?.values[`${fieldName}`] && (\r\n                            <Typography mt={3.5} variant=\"h5\" ml={2}>\r\n                                {'(' + (formik.values[`${fieldName}`]?.size / 1000000).toFixed(2) + '  mb)'}\r\n                            </Typography>\r\n                        )}\r\n\r\n                        {formik.values[`${fieldName}`] ? (\r\n                            <Tooltip placement=\"top\" title={accept == 'image/*' ? 'Clear Image' : 'Clear Audio'}>\r\n                                <IconButton\r\n                                    style={{ marginTop: '2px' }}\r\n                                    color=\"primary\"\r\n                                    aria-label=\"delete\"\r\n                                    size=\"large\"\r\n                                    onClick={() => {\r\n                                        formik.setFieldValue(fieldName, null);\r\n                                        fileRef1.current.value = null;\r\n                                    }}\r\n                                >\r\n                                    <CloseOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        ) : (\r\n                            <Typography mt={3.5} variant=\"h5\">\r\n                                {placeHolder}\r\n                            </Typography>\r\n                        )}\r\n                    </Grid>\r\n                </Fragment>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <p className={'fileError'}>\r\n                    {formik.touched[`${fieldName}`] && Boolean(formik.errors[`${fieldName}`]) ? formik.errors[`${fieldName}`] : ''}\r\n                </p>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FileInput;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircleOutlined');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20z\"\n}), 'AccountCircle');\nexports.default = _default;"],"sourceRoot":""}