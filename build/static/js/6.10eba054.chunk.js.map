{"version":3,"sources":["shared/component/AuthWrapper.js","shared/component/LoginCardWrapper.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","views/auth/resetPassword/ResetPassword.js","views/auth/resetPassword/index.js"],"names":["AuthWrapper","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","LoginCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","_interopRequireDefault","require","Object","defineProperty","exports","value","_createSvgIcon","_jsxRuntime","_default","jsx","d","ResetPasswordForm","token","others","useTheme","dispatch","useDispatch","navigate","useNavigate","customization","useSelector","state","useState","locale","setLanguage","useEffect","showPassword","setShowPassword","handleClickShowPassword","showConfirmPassword","setShowConfirmPassword","handleClickShowConfirmPassword","handleMouseDownPassword","event","preventDefault","initialValues","password","confirmPassword","validationSchema","Yup","shape","max","required","when","is","val","length","then","oneOf","onSubmit","values","console","log","resetPassword","newPassword","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","name","onBlur","onChange","e","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","inputProps","FormHelperText","submit","Box","mt","AnimateButton","Button","className","disableElevation","disabled","variant","color","ResetPassword","matchDownSM","useMediaQuery","breakpoints","down","urlSearchParams","URLSearchParams","window","location","search","params","fromEntries","entries","Grid","container","direction","justifyContent","item","alignItems","m","mb","spacing","Stack","Typography","gutterBottom","fontSize","textAlign","userId","Divider","component","Link","to","textDecoration"],"mappings":"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","file":"static/js/6.10eba054.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst LoginCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 550 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nLoginCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default LoginCardWrapper;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, OutlinedInput } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { useDispatch } from 'react-redux';\nimport { resetPassword } from 'redux/auth/actions';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\n// ========================|| FIREBASE - RESET PASSWORD ||======================== //\n\nconst ResetPasswordForm = ({ token, ...others }) => {\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    // language customization\n\n    const customization = useSelector((state) => state.customization);\n    const [language, setLanguage] = useState(customization.locale);\n    useEffect(() => {\n        setLanguage(customization.locale);\n    }, [customization]);\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n    const handleClickShowConfirmPassword = () => {\n        setShowConfirmPassword(!showConfirmPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    password: '',\n                    confirmPassword: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    password: Yup.string()\n                        .max(255)\n                        .required(\"Password is required!\"),\n                    confirmPassword: Yup.string().when('password', {\n                        is: (val) => !!(val && val.length > 0),\n                        then: Yup.string().oneOf([Yup.ref('password')], 'Both Password must be match!')\n                    })\n                })}\n                onSubmit={async (values) => {\n                    console.log(values,\"values\")\n                    await dispatch(\n                        resetPassword({\n                            \n                            newPassword: values.password,\n                            token: token,\n                            navigate: navigate\n                        })\n                    );\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-reset\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-reset\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                        </FormControl>\n                        {touched.password && errors.password && (\n                            <FormControl fullWidth>\n                                <FormHelperText error id=\"standard-weight-helper-text-reset\">\n                                    {errors.password}\n                                </FormHelperText>\n                            </FormControl>\n                        )}\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-reset\">\n                            Confirm Password\n                            </InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-confirmpassword-reset\"\n                                type={showConfirmPassword ? 'text' : 'password'}\n                                value={values.confirmPassword}\n                                name=\"confirmPassword\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowConfirmPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                        </FormControl>\n\n                        {touched.confirmPassword && errors.confirmPassword && (\n                            <FormControl fullWidth>\n                                <FormHelperText error id=\"standard-weight-helper-text-confirm-password\">\n                                    {' '}\n                                    {errors.confirmPassword}{' '}\n                                </FormHelperText>\n                            </FormControl>\n                        )}\n\n                        {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n                        <Box\n                            sx={{\n                                mt: 1\n                            }}\n                        >\n                            <AnimateButton>\n                                <Button\n                                className='signbutton'\n                                sx={{ background:\"#604223\"}}\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                   Reset Password\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default ResetPasswordForm;\n","import { Link } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\nimport AuthWrapper from '../../../shared/component/AuthWrapper';\nimport LoginCardWrapper from '../../../shared/component/LoginCardWrapper';\nimport Logo from 'ui-component/Logo';\nimport ResetPasswordForm from './ResetPassword';\nimport React from 'react';\n// import { FormattedMessage } from 'react-intl';\nconst ResetPassword = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n\n    return (\n        <AuthWrapper>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <LoginCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                       \n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                         className='Signin'\n                                                         sx={{color:\"#816a51\"}}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                       Reset Password \n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                       Please choose your new password\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <ResetPasswordForm \n                                        token={params.token} userId={params.id} \n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography component={Link} to={'/'} variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\n                                           Already have an account? \n                                              \n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </LoginCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </AuthWrapper>\n    );\n};\n\nexport default ResetPassword;\n"],"sourceRoot":""}