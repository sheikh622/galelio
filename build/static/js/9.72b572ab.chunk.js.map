{"version":3,"sources":["shared/Card/HeadingCard.js","views/pages/superAdmin/categories/component/deleteCategoryDialog.js","views/pages/superAdmin/categories/component/AddUpdateCategory.js","views/pages/superAdmin/categories/component/categoryTable.js","views/pages/superAdmin/categories/index.js"],"names":["HeadingCard","forwardRef","title","value","role","setValue","options","theme","useTheme","sx","marginBottom","spacing","gridSpacing","borderColor","palette","primary","background","default","padding","container","alignItems","justifyContent","item","variant","fontWeight","color","undefined","id","select","onChange","e","target","width","height","map","option","label","Transition","props","ref","Slide","direction","DeleteCategoryDialog","deleteId","mainBrandId","deleteOpen","setDeleteOpen","page","limit","search","dispatch","useDispatch","handleClose","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","Typography","component","DialogActions","pr","Button","error","dark","onClick","size","deleteCategory","categoryId","brandId","AddEditFormDialog","setOpen","name","update","profitPercentage","setUpdate","categoryList","useState","brand","setBrand","console","log","brandsList","useNavigate","useSelector","state","handleBrandChange","event","validationSchema","Yup","required","max","matches","formik","useFormik","enableReinitialize","initialValues","onSubmit","values","a","addCategory","updateCategory","resetForm","noValidate","handleSubmit","CardContent","Grid","xs","TextField","handleChange","touched","Boolean","errors","helperText","fullWidth","autoComplete","FormControl","InputLabelProps","shrink","defaultValue","MenuItem","brands","index","Stack","AnimateButton","my","ml","type","disableElevation","CategoryTable","setDeleteId","setName","setProfitPercentage","TableContainer","Table","TableHead","TableRow","TableCell","align","categories","length","TableBody","row","Tooltip","placement","IconButton","fontSize","orange","main","light","md","Divider","style","Categories","category","searchCategories","setSearchCategories","pageCategories","setPageCategories","limitCategories","setLimitCategories","addEditModal","setAddEditModal","anchorEl","setAnchorEl","handleCloseMenu","useEffect","getAllBrands","getAllCategories","MainCard","OutlinedInput","placeholder","startAdornment","InputAdornment","position","stroke","className","textAlign","content","p","Pagination","showFirstButton","showLastButton","count","totalPages","newPage","grey","endIcon","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin"],"mappings":"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","file":"static/js/9.72b572ab.chunk.js","sourcesContent":["import { Box, Card, Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport { forwardRef } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// constant\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst HeadingCard = forwardRef(({ title, role, value, setValue, options }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                marginBottom: theme.spacing(gridSpacing),\r\n\r\n                borderColor: theme.palette.primary[200] + 75,\r\n                background: theme.palette.background.default\r\n            }}\r\n        >\r\n            <Box sx={{ padding: '13px 20px 22px 20px' }}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\" sx={{ fontWeight: 500, color: '#000' }}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {value !== undefined && (\r\n                        <Grid item>\r\n                            {/* {options && (role == 'teacher' || role == 'super_admin') && ( */}\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                value={value}\r\n                                onChange={(e) => setValue(e.target.value)}\r\n                                sx={{ width: '110px', height: '40px' }}\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            {/* )} */}\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default HeadingCard;\r\n","import { forwardRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Slide, DialogContentText, Typography } from '@mui/material';\r\nimport { deleteCategory } from 'redux/categories/actions';\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\nexport default function DeleteCategoryDialog({deleteId,mainBrandId, deleteOpen, setDeleteOpen,page, limit, search }) {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const handleClose = () => {\r\n        setDeleteOpen(false);\r\n    };\r\n    // console.log(mainBrandId,\"mainBrandId======delete\")\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={deleteOpen}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title1\"\r\n                aria-describedby=\"alert-dialog-slide-description1\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title1\">Delete Category</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description1\">\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Are you sure you want to delete this Category?\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button\r\n                        sx={{ color: theme.palette.error.dark, borderColor: theme.palette.error.dark }}\r\n                        onClick={handleClose}\r\n                        color=\"secondary\"\r\n                    >\r\n                        No\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            dispatch(\r\n                                deleteCategory({\r\n                                    categoryId: deleteId,\r\n                                    brandId:mainBrandId,\r\n                                    handleClose: handleClose,\r\n                                    page: page,\r\n                                    limit: limit,\r\n                                    search: search\r\n                                })\r\n                            );\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Stack, Dialog, CardContent, DialogContent, FormControl, MenuItem, TextField, Grid, DialogTitle } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { addCategory ,updateCategory } from 'redux/categories/actions';\r\n\r\n\r\nexport default function AddEditFormDialog({ limit, page, search, open, setOpen, name ,update,deleteId, profitPercentage, setUpdate,mainBrandId, categoryList }) {\r\n    const theme = useTheme();\r\n    // console.log(profitPercentage,\"profitPercentage===========================>\");\r\n     const [brand, setBrand] = useState(0);\r\n     console.log(mainBrandId, \"mainBrandId===========\");\r\n     \r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n   \r\n    const brandsList = useSelector((state) => state.brand.brandsList);\r\n    const handleBrandChange = (event) => {\r\n        setBrand(event.target.value);\r\n        // console.log(event.target.value, \"setBrand===========\");\r\n    };\r\n    \r\n\r\n   \r\n\r\n  \r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string()\r\n            .required('Category Name is required!')\r\n            .max(42, 'Category Name can not exceed 42 characters')\r\n            .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Category name'),\r\n            profitPercentage: Yup.string()\r\n            .required('profit Percentage required!')\r\n            .max(42, 'profit Percentage can not exceed 42 characters')\r\n            .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid profit Percentage'),\r\n            \r\n          \r\n    });\r\n   \r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        \r\n        initialValues: {\r\n            name:update == false? '': name,\r\n            profitPercentage: update == false ? '' : profitPercentage,\r\n            \r\n        },\r\n        validationSchema,\r\n        onSubmit: async (values) => {\r\n            // console.log(values.name,\"name===table\")\r\n            if (update == false) {\r\n                await dispatch(\r\n                    addCategory({\r\n                        name: values.name,\r\n                        profitPercentage:values.profitPercentage,\r\n                        brandId:brand,\r\n                        page: page,\r\n                        limit: limit,\r\n                        search: search,\r\n                       \r\n                        handleClose: handleClose,\r\n                     \r\n                       \r\n                    })\r\n                );\r\n            } else {\r\n                dispatch(\r\n                    updateCategory({\r\n                        name: values.name,\r\n                        profitPercentage:5,\r\n                        brandId:brand!= 0? brand :  mainBrandId,\r\n                        categoryId:deleteId,                      \r\n                        limit: limit,\r\n                        page: page,\r\n                        search: search,\r\n                        handleClose: handleClose,\r\n                        update:update\r\n                        \r\n                   \r\n                       \r\n                    })\r\n                );\r\n                \r\n            }\r\n           \r\n        },\r\n        \r\n    });\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setUpdate(false);\r\n        formik.resetForm();\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n           \r\n                <>\r\n                <Dialog open={open} onClose={handleClose} handleBrandChange={handleBrandChange} aria-labelledby=\"form-dialog-title\">\r\n\r\n            <DialogTitle id=\"form-dialog-title\">{update== true ? 'Update Brand' : 'Add Brand'}</DialogTitle>\r\n\r\n      \r\n\r\n                <DialogContent>\r\n                    <form noValidate onSubmit={formik.handleSubmit} id=\"validation-forms\">\r\n                        <CardContent>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"name\"\r\n                                        name=\"name\"\r\n                                        label='Name'\r\n                                        value={formik.values.name}\r\n                                        onChange={formik.handleChange}\r\n                                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                        helperText={formik.touched.name && formik.errors.name}\r\n                                        fullWidth\r\n                                        autoComplete=\"given-name\" />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"profitPercentage\"\r\n                                        name=\"profitPercentage\"\r\n                                        label='Profit Percentage'\r\n                                        value={formik.values.profitPercentage}\r\n                                        onChange={formik.handleChange}\r\n                                        error={formik.touched.profitPercentage && Boolean(formik.errors.profitPercentage)}\r\n                                        helperText={formik.touched.profitPercentage && formik.errors.profitPercentage}\r\n                                        fullWidth\r\n                                        autoComplete=\"given-name\" />\r\n                                </Grid>\r\n                               { update== false  && (\r\n                                <Grid item xs={12}>\r\n                                    <FormControl fullWidth>\r\n                                        <TextField\r\n                                            id=\"outlined-select-currency\"\r\n                                            select\r\n                                            fullWidth\r\n                                            InputLabelProps={{ shrink: true }}\r\n                                            label='Select Brand'\r\n                                            // value={mainBrandId}\r\n                                            defaultValue={formik.values.brand}\r\n                                            onChange={handleBrandChange}\r\n                                            error={formik.touched.brand && Boolean(formik.errors.brand)}\r\n                                            helperText={formik.touched.brand && formik.errors.brand}\r\n                                            autoComplete=\"given-name\" \r\n                                        >\r\n                                            <MenuItem value={0}>Choose Brand</MenuItem>\r\n                                            {brandsList != undefined &&\r\n            \r\n                                                brandsList?.brands?.map((option, index) => (\r\n                                                    <MenuItem key={index} value={option.id}>\r\n                                                        {option.name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                        </TextField>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                               )}\r\n                                <Grid item xs={12}>\r\n                                    <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                                        <AnimateButton>\r\n                                            <Button variant=\"contained\" sx={{ my: 3, ml: 1 }} type=\"submit\" size=\"large\" disableElevation>\r\n                                            {update== true ? 'Update Brand' : 'Add Brand'}\r\n                                            </Button>\r\n                                        </AnimateButton>\r\n                                        <AnimateButton>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                sx={{ my: 3, ml: 1, color: '#fff' }}\r\n                                                onClick={handleClose}\r\n                                                color=\"secondary\"\r\n                                                size=\"large\"\r\n                                            >\r\n                                               Cancel\r\n                                            </Button>\r\n                                        </AnimateButton>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </form>\r\n                </DialogContent>\r\n\r\n            </Dialog></>\r\n            \r\n           \r\n       \r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { IconButton, Stack, Table, TableBody, TableCell, TableContainer, Grid, Divider, Typography, TableHead, TableRow, Tooltip } from '@mui/material';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport DeleteCategoryDialog from './deleteCategoryDialog';\r\nimport AddUpdateCategory from '../../categories/component/AddUpdateCategory';\r\nimport moment from 'moment';\r\nconst CategoryTable = ({\r\n    categoryList,\r\n    mainBrandId,\r\n    page,\r\n    limit,\r\n    search,\r\n    open, setOpen,\r\n\r\n\r\n\r\n}) => {\r\n    const theme = useTheme();\r\n    const [update, setUpdate] = useState(false);\r\n    const [deleteOpen, setDeleteOpen] = useState(false);\r\n    const [deleteId, setDeleteId] = useState(0);\r\n    const [name, setName] = useState();\r\n    const [profitPercentage, setProfitPercentage] = useState();\r\n    // console.log(mainBrandId, \"brand id================>\")\r\n\r\n    return (\r\n        <><AddUpdateCategory\r\n            profitPercentage={profitPercentage}\r\n            mainBrandId={mainBrandId}\r\n            open={open}\r\n            deleteId={deleteId}\r\n            name={name}\r\n            setOpen={setOpen}\r\n            update={update}\r\n            setUpdate={setUpdate}\r\n            categoryList={categoryList}\r\n            page={page}\r\n            limit={limit}\r\n            search={search}\r\n        /><TableContainer>\r\n                {/* delete */}\r\n                <DeleteCategoryDialog\r\n                    mainBrandId={mainBrandId}\r\n                    deleteId={deleteId}\r\n\r\n                    deleteOpen={deleteOpen}\r\n                    setDeleteOpen={setDeleteOpen}\r\n\r\n                    page={page}\r\n                    limit={limit}\r\n                    search={search} />\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n\r\n                            <TableCell align=\"center\">Name</TableCell>\r\n                            <TableCell align=\"center\">Profit</TableCell>\r\n\r\n                            <TableCell align=\"center\">Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    {categoryList.categories?.length > 0 ? (\r\n                        <TableBody>\r\n                            {categoryList.categories != undefined &&\r\n\r\n\r\n                                categoryList.categories.map((row, index) => (\r\n                                    <>\r\n                                        <TableRow onClick={() => {\r\n\r\n                                        }}>\r\n\r\n                                            <TableCell align=\"center\" sx={{ padding: '0px' }}>\r\n                                                {row.name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" sx={{ padding: '0px' }}>\r\n                                                {row.profitPercentage}%\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"center\" sx={{ padding: '0px' }}>\r\n                                                <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                                                    <Tooltip placement=\"top\" title=\"Edit\">\r\n                                                        <IconButton\r\n                                                            color=\"primary\"\r\n                                                            aria-label=\"Edit\"\r\n                                                            size=\"large\"\r\n                                                            onClick={() => {\r\n                                                                setName(row.name);\r\n                                                                setProfitPercentage(row.profitPercentage);\r\n                                                                setOpen(true);\r\n                                                                setUpdate(true);\r\n                                                                setDeleteId(row.id);\r\n                                                            }}\r\n                                                        >\r\n                                                            <EditOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                    <Tooltip placement=\"top\" title=\"Delete\">\r\n                                                        <IconButton\r\n                                                            color=\"primary\"\r\n                                                            sx={{\r\n                                                                color: theme.palette.orange.dark,\r\n                                                                borderColor: theme.palette.orange.main,\r\n                                                                '&:hover ': { background: theme.palette.orange.light }\r\n                                                            }}\r\n                                                            size=\"large\"\r\n                                                            onClick={() => {\r\n                                                                setDeleteId(row.id); //categoryid\r\n                                                                setDeleteOpen(true); //open delete dialoge\r\n\r\n\r\n                                                            }}\r\n                                                        >\r\n                                                            <DeleteOutlineOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Stack>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </>\r\n                                ))}\r\n                        </TableBody>\r\n                    ) : (\r\n                        <>\r\n                            <Grid item md={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography style={{ padding: '20px', fontWeight: '800' }}> No Data Available</Typography>\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </>\r\n                    )}\r\n                </Table>\r\n                <Divider />\r\n            </TableContainer></>\r\n    );\r\n};\r\n\r\nexport default CategoryTable;\r\n","import { forwardRef, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport CategoryTable from './component/categoryTable';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    Divider,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Slide,\r\n    Typography,\r\n    Grid,\r\n    MenuItem,\r\n    Menu,\r\n    Pagination,\r\n    OutlinedInput,\r\n    TextField,\r\n    InputAdornment\r\n} from '@mui/material';\r\nimport { IconSearch } from '@tabler/icons';\r\n\r\nimport { getAllBrands } from '../../../../redux/brand/actions';\r\nimport { getAllCategories } from '../../../../redux/categories/actions';\r\n\r\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport HeadingCard from 'shared/Card/HeadingCard';\r\n\r\nconst Categories = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const categoryList = useSelector((state) => state.category.categoryList);\r\n    console.log(categoryList.categories?.length, \"categoryList======>\")\r\n    const [open, setOpen] = useState(false);\r\n    const [brand, setBrand] = useState(-1);\r\n    const [search, setSearch] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [limit, setLimit] = useState(10);\r\n    const [searchCategories, setSearchCategories] = useState('');\r\n    const [pageCategories, setPageCategories] = useState(1);\r\n    const [limitCategories, setLimitCategories] = useState(10);\r\n    const [addEditModal, setAddEditModal] = useState(false);\r\n\r\n\r\n\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleBrandChange = (event) => {\r\n        setBrand(event.target.value);\r\n        // console.log(event.target.value, \"setBrand===========\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"cate brand\");\r\n        dispatch(\r\n            getAllBrands({\r\n                search: search,\r\n                page: page,\r\n                limit: limit\r\n            })\r\n        );\r\n    }, [search, page, limit]);\r\n\r\n    const brandsList = useSelector((state) => state.brand.brandsList);\r\n    // console.log(brandsList, \"========================table==================>\");\r\n    useEffect(() => {\r\n        dispatch(\r\n            getAllCategories({\r\n                brandId: brand == 0 ? 0 : brand,\r\n                // brandId: 2,\r\n                search: searchCategories,\r\n                page: pageCategories,\r\n                limit: limitCategories\r\n            })\r\n        );\r\n    }, [searchCategories, pageCategories, limitCategories, brand]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <HeadingCard title=\"Category Management\" />\r\n            <MainCard\r\n                title={\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={3}>\r\n                            <OutlinedInput\r\n                                id=\"input-search-list-style1\"\r\n                                placeholder=\"Search\"\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                    </InputAdornment>\r\n                                }\r\n                                size=\"small\"\r\n                                onChange={(e) => {\r\n                                    setSearchCategories(e.target.value);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <TextField\r\n                                className=\"selectField\"\r\n                                id=\"outlined-select-budget\"\r\n                                select\r\n                                fullWidth\r\n                                label=\"Select Brand\"\r\n                                value={brand}\r\n                                onChange={handleBrandChange}\r\n                            >\r\n                                <MenuItem value='-1'>Select</MenuItem>\r\n                                {brandsList != undefined &&\r\n\r\n                                    brandsList?.brands?.map((option, index) => (\r\n                                        <MenuItem key={index} value={option.id}>\r\n                                            {option.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={6} textAlign=\"end\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                onClick={() => {\r\n                                    setAddEditModal(true);\r\n\r\n\r\n\r\n\r\n                                }}\r\n                            >\r\n                                Add Category\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                content={false}\r\n            >\r\n\r\n                <CategoryTable\r\n                    setOpen={setAddEditModal} open={addEditModal}\r\n\r\n                    mainBrandId={brand}\r\n                    categoryList={categoryList}\r\n                    page={pageCategories}\r\n                    limit={limitCategories}\r\n                    search={searchCategories}\r\n\r\n\r\n                />\r\n              {/*   {brand != -1  && categoryList.categories?.length > 0 ? ( */}\r\n                    <>\r\n                        <Grid item xs={12} sx={{ p: 3 }}>\r\n                            <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                                <Grid item>\r\n                                    <Pagination\r\n                                        color=\"primary\"\r\n                                        showFirstButton\r\n                                        showLastButton\r\n                                        page={pageCategories}\r\n                                        count={categoryList.totalPages}\r\n                                        onChange={(event, newPage) => {\r\n                                            setPageCategories(newPage);\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        size=\"large\"\r\n                                        sx={{ color: theme.palette.grey[900] }}\r\n                                        color=\"secondary\"\r\n                                        endIcon={<ExpandMoreRoundedIcon />}\r\n                                        onClick={handleClick}\r\n                                    >\r\n                                        {limitCategories} Rows\r\n                                    </Button>\r\n                                    <Menu\r\n                                        id=\"menu-user-list-style1\"\r\n                                        anchorEl={anchorEl}\r\n                                        keepMounted\r\n                                        open={Boolean(anchorEl)}\r\n                                        onClose={handleCloseMenu}\r\n                                        variant=\"selectedMenu\"\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right'\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'right'\r\n                                        }}\r\n                                    >\r\n                                        <MenuItem\r\n                                            value={10}\r\n                                            onClick={(e) => {\r\n                                                setLimitCategories(e.target.value);\r\n                                                setPageCategories(1);\r\n                                                handleCloseMenu();\r\n                                            }}\r\n                                        >\r\n                                            {' '}\r\n                                            10 Rows\r\n                                        </MenuItem>\r\n                                        <MenuItem\r\n                                            value={25}\r\n                                            onClick={(e) => {\r\n                                                setLimitCategories(e.target.value);\r\n                                                setPageCategories(1);\r\n                                                handleCloseMenu();\r\n                                            }}\r\n                                        >\r\n                                            {' '}\r\n                                            25 Rows\r\n                                        </MenuItem>\r\n                                        <MenuItem\r\n                                            value={50}\r\n                                            onClick={(e) => {\r\n                                                setLimitCategories(e.target.value);\r\n                                                setPageCategories(1);\r\n                                                handleCloseMenu();\r\n                                            }}\r\n                                        >\r\n                                            {' '}\r\n                                            50 Rows{' '}\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </>\r\n           \r\n            </MainCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n"],"sourceRoot":""}