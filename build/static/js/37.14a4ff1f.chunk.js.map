{"version":3,"sources":["views/pages/superAdmin/dashboard/index.js","shared/Card/UserCountCard.js"],"names":["Dashboard","theme","useTheme","useState","useDispatch","container","spacing","gridSpacing","sx","background","item","xs","lg","md","sm","primary","secondary","color","palette","main","IconWrapper","styled","position","left","bottom","transform","width","height","opacity","UserCountCard","iconPrimary","IconPrimary","primaryIcon","fontSize","direction","justifyContent","alignItems","variant","align"],"mappings":"6LAkEeA,UAlDG,WACd,IAAMC,EAAQC,cACd,EAAgCC,oBAAS,GAAK,mBAA9B,KAAY,KACXC,cAGjB,OACI,cAAC,IAAI,CAACC,WAAS,EAACC,QAASC,IAAaC,GAAI,CAACC,WAAW,IAAI,SACtD,cAAC,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG,SACd,eAAC,IAAI,CAACN,WAAS,EAACC,QAASC,IAAY,UACrC,cAAC,IAAI,CAACG,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGH,GAAI,GAAG,SACvC,cAAC,IAAa,CACVI,QAAQ,eACRC,UAAU,MAGVC,MAAOhB,EAAMiB,QAAQH,QAAQI,SAO7B,cAAC,IAAI,CAACT,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGH,GAAI,GAAG,SACvC,cAAC,IAAa,CACdI,QAAQ,SACRC,UAAU,MAEVC,MAAOhB,EAAMiB,QAAQF,UAAUG,eAoBnD,C,mCC9DA,uDAKMC,EAAcC,YAAO,MAAPA,CAAc,CAC9BC,SAAU,WACVC,KAAM,QACNC,OAAQ,QACRP,MAAO,OACPQ,UAAW,gBACX,SAAU,CACNC,MAAO,QACPC,OAAQ,QACRC,QAAS,UAsCFC,IAhCO,SAAH,GAAoD,IAA9Cd,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAWc,EAAW,EAAXA,YAAab,EAAK,EAALA,MAChDc,EAAcD,EACdE,EAAcF,EAAc,cAACC,EAAW,CAACE,SAAS,UAAa,KAErE,OACI,cAAC,IAAI,CAACzB,GAAI,CAAEC,WAAYQ,EAAOK,SAAU,WAAYL,MAAO,QAAS,SACjE,eAAC,IAAW,WACR,cAACG,EAAW,UAAEY,IACd,eAAC,IAAI,CAAC3B,WAAS,EAAC6B,UAAU,SAASC,eAAe,SAASC,WAAW,SAAS9B,QAAS,EAAE,UACtF,cAAC,IAAI,CAACI,MAAI,EAACI,GAAI,GAAG,SACd,cAAC,IAAU,CAACuB,QAAQ,KAAKC,MAAM,SAASrB,MAAM,UAAS,SAClDD,MAGT,cAAC,IAAI,CAACN,MAAI,EAACI,GAAI,GAAG,SACd,cAAC,IAAU,CAACuB,QAAQ,QAAQC,MAAM,SAASrB,MAAM,UAAS,SACrDF,aAO7B,C","file":"static/js/37.14a4ff1f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport UserCountCard from 'shared/Card/UserCountCard';\r\n// material-ui\r\nimport { Grid } from '@mui/material';\r\nimport {dash, setLoader } from 'redux/auth/actions';\r\n\r\n// project imports\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nimport { gridSpacing } from 'store/constant';\r\nimport AccountCircleTwoTone from '@mui/icons-material/AccountCircleTwoTone';\r\n\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\n\r\nconst Dashboard = () => {\r\n    const theme = useTheme();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing} sx={{background:\"\"}}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                <UserCountCard\r\n                    primary=\"Total Brands\"\r\n                    secondary=\"120\"\r\n                   \r\n                    // iconPrimary={AccountCircleTwoTone}\r\n                    color={theme.palette.primary.main}\r\n                />\r\n                       \r\n                    </Grid>\r\n                    {/* <Grid item lg={4} md={4} sm={6} xs={12}>\r\n                        <NumberLightCards primary=\"Number of Homes\" secondary=\"1,002\" isLoading={isLoading} />\r\n                    </Grid> */}\r\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                    <UserCountCard\r\n                    primary=\"Profit\"\r\n                    secondary=\"40%\"\r\n                    // iconPrimary={AccountCircleTwoTone}\r\n                    color={theme.palette.secondary.main}\r\n                />\r\n                    \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} md={6}>\r\n                        <SchoolsTeachersStudentsChart isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <HomeLearnerChart isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> */}\r\n           \r\n           \r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\r\n\r\n// styles\r\nconst IconWrapper = styled('div')({\r\n    position: 'absolute',\r\n    left: '-17px',\r\n    bottom: '-27px',\r\n    color: '#fff',\r\n    transform: 'rotate(25deg)',\r\n    '&> svg': {\r\n        width: '100px',\r\n        height: '100px',\r\n        opacity: '0.35'\r\n    }\r\n});\r\n\r\n// =============================|| USER NUM CARD ||============================= //\r\n\r\nconst UserCountCard = ({ primary, secondary, iconPrimary, color }) => {\r\n    const IconPrimary = iconPrimary;\r\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\r\n\r\n    return (\r\n        <Card sx={{ background: color, position: 'relative', color: '#fff' }}>\r\n            <CardContent>\r\n                <IconWrapper>{primaryIcon}</IconWrapper>\r\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"h3\" align=\"center\" color=\"inherit\">\r\n                            {secondary}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <Typography variant=\"body1\" align=\"center\" color=\"inherit\">\r\n                            {primary}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nUserCountCard.propTypes = {\r\n    primary: PropTypes.string,\r\n    secondary: PropTypes.string,\r\n    iconPrimary: PropTypes.object,\r\n    color: PropTypes.string\r\n};\r\n\r\nexport default UserCountCard;\r\n"],"sourceRoot":""}