{"version":3,"sources":["shared/Card/UserCountCard.js","views/pages/superAdmin/dashboard/index.js"],"names":["IconWrapper","styled","position","left","bottom","color","transform","width","height","opacity","UserCountCard","primary","secondary","iconPrimary","IconPrimary","primaryIcon","fontSize","Card","sx","background","CardContent","Grid","container","direction","justifyContent","alignItems","spacing","item","sm","Typography","variant","align","Dashboard","theme","useTheme","useState","useDispatch","gridSpacing","xs","lg","md","palette","main"],"mappings":"4LAOMA,EAAcC,YAAO,MAAPA,CAAc,CAC9BC,SAAU,WACVC,KAAM,QACNC,OAAQ,QACRC,MAAO,OACPC,UAAW,gBACX,SAAU,CACNC,MAAO,QACPC,OAAQ,QACRC,QAAS,UAsCFC,EAhCO,SAAH,GAAoD,IAA9CC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAWC,EAAW,EAAXA,YAAaR,EAAK,EAALA,MAChDS,EAAcD,EACdE,EAAcF,EAAc,cAACC,EAAW,CAACE,SAAS,UAAa,KAErE,OACI,cAACC,EAAA,EAAI,CAACC,GAAI,CAAEC,WAAYd,EAAOH,SAAU,WAAYG,MAAO,QAAS,SACjE,eAACe,EAAA,EAAW,WACR,cAACpB,EAAW,UAAEe,IACd,eAACM,EAAA,EAAI,CAACC,WAAS,EAACC,UAAU,SAASC,eAAe,SAASC,WAAW,SAASC,QAAS,EAAE,UACtF,cAACL,EAAA,EAAI,CAACM,MAAI,EAACC,GAAI,GAAG,SACd,cAACC,EAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,SAAS1B,MAAM,UAAS,SAClDO,MAGT,cAACS,EAAA,EAAI,CAACM,MAAI,EAACC,GAAI,GAAG,SACd,cAACC,EAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,SAAS1B,MAAM,UAAS,SACrDM,aAO7B,E,wBCsBeqB,UAnDG,WACd,IAAMC,EAAQC,cACd,EAAgCC,oBAAS,GAAK,mBAA9B,KAAY,KACXC,cAIjB,OACI,cAACf,EAAA,EAAI,CAACC,WAAS,EAACI,QAASW,IAAY,SACjC,cAAChB,EAAA,EAAI,CAACM,MAAI,EAACW,GAAI,GAAG,SACd,eAACjB,EAAA,EAAI,CAACC,WAAS,EAACI,QAASW,IAAY,UACrC,cAAChB,EAAA,EAAI,CAACM,MAAI,EAACY,GAAI,EAAGC,GAAI,EAAGZ,GAAI,EAAGU,GAAI,GAAG,SACvC,cAAC,EAAa,CACV3B,QAAQ,eACRC,UAAU,MAGVP,MAAO4B,EAAMQ,QAAQ9B,QAAQ+B,SAO7B,cAACrB,EAAA,EAAI,CAACM,MAAI,EAACY,GAAI,EAAGC,GAAI,EAAGZ,GAAI,EAAGU,GAAI,GAAG,SACvC,cAAC,EAAa,CACd3B,QAAQ,SACRC,UAAU,MAEVP,MAAO4B,EAAMQ,QAAQ7B,UAAU8B,eAoBnD,C","file":"static/js/9.f1d9e24a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { styled } from '@mui/material/styles';\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\n\n// styles\nconst IconWrapper = styled('div')({\n    position: 'absolute',\n    left: '-17px',\n    bottom: '-27px',\n    color: '#fff',\n    transform: 'rotate(25deg)',\n    '&> svg': {\n        width: '100px',\n        height: '100px',\n        opacity: '0.35'\n    }\n});\n\n// =============================|| USER NUM CARD ||============================= //\n\nconst UserCountCard = ({ primary, secondary, iconPrimary, color }) => {\n    const IconPrimary = iconPrimary;\n    const primaryIcon = iconPrimary ? <IconPrimary fontSize=\"large\" /> : null;\n\n    return (\n        <Card sx={{ background: color, position: 'relative', color: '#fff' }}>\n            <CardContent>\n                <IconWrapper>{primaryIcon}</IconWrapper>\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\n                    <Grid item sm={12}>\n                        <Typography variant=\"h3\" align=\"center\" color=\"inherit\">\n                            {secondary}\n                        </Typography>\n                    </Grid>\n                    <Grid item sm={12}>\n                        <Typography variant=\"body1\" align=\"center\" color=\"inherit\">\n                            {primary}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nUserCountCard.propTypes = {\n    primary: PropTypes.string,\n    secondary: PropTypes.string,\n    iconPrimary: PropTypes.object,\n    color: PropTypes.string\n};\n\nexport default UserCountCard;\n","import { useEffect, useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport UserCountCard from 'shared/Card/UserCountCard';\n// material-ui\nimport { Grid } from '@mui/material';\nimport {dash, setLoader } from 'redux/auth/actions';\n\n// project imports\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { gridSpacing } from 'store/constant';\nimport AccountCircleTwoTone from '@mui/icons-material/AccountCircleTwoTone';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\n\nconst Dashboard = () => {\n    const theme = useTheme();\n    const [isLoading, setLoading] = useState(true);\n    const dispatch = useDispatch();\n\n    // console.log(Dashboard.total_users,\"Dashboard\")\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                <Grid item lg={6} md={6} sm={6} xs={12}>\n                <UserCountCard\n                    primary=\"Total Brands\"\n                    secondary=\"120\"\n                   \n                    // iconPrimary={AccountCircleTwoTone}\n                    color={theme.palette.primary.main}\n                />\n                       \n                    </Grid>\n                    {/* <Grid item lg={4} md={4} sm={6} xs={12}>\n                        <NumberLightCards primary=\"Number of Homes\" secondary=\"1,002\" isLoading={isLoading} />\n                    </Grid> */}\n                    <Grid item lg={6} md={6} sm={6} xs={12}>\n                    <UserCountCard\n                    primary=\"Profit\"\n                    secondary=\"40%\"\n                    // iconPrimary={AccountCircleTwoTone}\n                    color={theme.palette.secondary.main}\n                />\n                    \n                    </Grid>\n                </Grid>\n            </Grid>\n            {/* <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                <Grid item xs={12} md={6}>\n                        <SchoolsTeachersStudentsChart isLoading={isLoading} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <HomeLearnerChart isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid> */}\n           \n           \n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}