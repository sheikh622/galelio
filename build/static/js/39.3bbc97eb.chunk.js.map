{"version":3,"sources":["views/auth/forgetPassword/component/ForgetForm.js","views/auth/forgetPassword/index.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["ForgetForm","others","theme","useTheme","navigate","useSelector","state","auth","loader","useNavigate","dispatch","useDispatch","initialValues","email","validationSchema","Yup","shape","max","required","onSubmit","values","setLoader","forgotPassword","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","InputLabel","sx","color","palette","mode","className","htmlFor","FormControl","typography","customInput","fullWidth","error","Boolean","TextField","background","placeholder","variant","margin","type","value","name","autoComplete","onBlur","onChange","inputProps","FormHelperText","id","submit","Box","mt","AnimateButton","Button","disableElevation","disabled","size","ForgotPassword","AuthWrapper","Grid","container","justifyContent","alignItems","minHeight","Helmet","charSet","item","md","lg","position","alignSelf","display","xs","BackgroundPattern1","spacing","AuthCardWrapper","direction","sm","Typography","noWrap","component","marginTop","src","galileoWhite","alt","width","galileo","mb","Divider","textDecoration","styled","backgroundColor","children","other","borderRadius","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/39.3bbc97eb.chunk.js","sourcesContent":["// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { forgotPassword } from '../../../../redux/auth/actions';\r\nimport { setLoader } from '../../../../redux/auth/actions';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// ========================|| FIREBASE - FORGOT PASSWORD ||======================== //\r\n\r\nconst ForgetForm = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const loader = useSelector((state) => state.auth.loader);\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{\r\n                    email: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Invalid email').max(255).required('Email is required!')\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    await dispatch(setLoader(true));\r\n                    dispatch(\r\n                        forgotPassword({\r\n                            email: values.email,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\r\n                            Email{' '}\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.email && errors.email)}\r\n                        >\r\n                            <TextField\r\n                                sx={{ background: 'pink !important' }}\r\n                                placeholder=\"email\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                autoComplete=\"current-email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                {loader ? (\r\n                                    <Button\r\n                                        className=\"signbuttonMarket\"\r\n                                        disableElevation\r\n                                        disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        Send Email\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Button\r\n                                        className=\"signbuttonMarket\"\r\n                                        disableElevation\r\n                                        disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        Send Email\r\n                                    </Button>\r\n                                )}\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgetForm;\r\n","import { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Typography, useMediaQuery, Box } from '@mui/material';\r\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\r\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\r\n\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\n\r\nimport galileo from 'assets/images/galileo.png';\r\nimport galileoWhite from 'assets/images/galileo-white.png';\r\nimport ForgotForm from './component/ForgetForm';\r\nimport React from 'react';\r\nimport {Helmet} from \"react-helmet\"; \r\nconst ForgotPassword = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ minHeight: '100vh',background: theme.palette.mode === 'dark' ? '#000' : '#fff' }}\r\n            >\r\n            <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>\r\n            Forgot Password\r\n            </title>\r\n           \r\n        </Helmet>\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', \r\n                display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                        <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                        <Box sx={{ display: { xs: 'block',sm:'block', md: 'none', lg:'none' } }}>\r\n                        <Typography variant=\"h6\" noWrap component=\"div\"\r\n                         sx={{ marginTop: '5px', }}>\r\n                            {theme.palette.mode === 'dark' ? (\r\n                                <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\r\n                            ) : (\r\n                                <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\r\n                            )}\r\n                        </Typography>\r\n                    </Box>\r\n                        </Grid>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\r\n                                        Forgot Password\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                    <Typography className=\"emailfont\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                        Please enter registered email ID.\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <ForgotForm />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            borderRadius:'4px',\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth-pattern.png';\r\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '97%',\r\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n               \r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n               margin:'10px',\r\n              \r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n"],"sourceRoot":""}