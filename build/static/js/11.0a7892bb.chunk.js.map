{"version":3,"sources":["views/pages/superAdmin/categories/component/deleteCategoryDialog.js","views/pages/superAdmin/categories/component/categoryTable.js","views/pages/superAdmin/categories/component/addUpdateCategory.js","views/pages/superAdmin/categories/index.js","ui-component/extended/Avatar.js","shared/Card/HeadingCard.js","shared/component/FileInput.js","../node_modules/@mui/icons-material/AddCircleOutlined.js","../node_modules/@mui/icons-material/CloseOutlined.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"names":["Transition","forwardRef","props","ref","Slide","direction","DeleteCategoryDialog","open","setOpen","page","limit","search","categoryId","theme","useTheme","dispatch","useDispatch","handleClose","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","id","DialogContent","DialogContentText","Typography","variant","component","DialogActions","sx","pr","Button","color","palette","error","dark","borderColor","onClick","size","deleteCategory","CategoryTable","categoryList","setAddUpdateOpen","setCategoryData","useState","deleteOpen","setDeleteOpen","setCategoryId","TableContainer","Table","TableHead","TableRow","TableCell","align","undefined","categories","length","Grid","item","style","padding","fontWeight","justifyContent","TableBody","map","row","index","float","Avatar","alt","src","image","textTransform","name","description","moment","createdAt","format","updatedAt","Stack","alignItems","Tooltip","placement","title","IconButton","fontSize","orange","main","background","light","container","width","m","CircularProgress","Divider","AddUpdateCategory","categoryData","isUpdate","setIsUpdate","useEffect","validationSchema","Yup","default","required","max","matches","when","is","then","otherwise","errorHandler","values","split","pop","toast","formik","useFormik","enableReinitialize","initialValues","onSubmit","addCategory","updateCategory","resetForm","className","maxWidth","noValidate","handleSubmit","InputLabel","htmlFor","TextField","value","onChange","handleChange","touched","Boolean","errors","helperText","fullWidth","autoComplete","marginTop","xs","pt","FileInput","accept","fieldName","placeHolder","AnimateButton","my","ml","type","disableElevation","Categories","useSelector","state","category","setSearch","setPage","setLimit","addUpdateOpen","anchorEl","setAnchorEl","handleCloseMenu","getAllCategories","HeadingCard","MainCard","spacing","gridSpacing","OutlinedInput","placeholder","startAdornment","InputAdornment","position","stroke","e","target","textAlign","content","p","Pagination","showFirstButton","showLastButton","count","pages","event","newPage","grey","endIcon","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","outline","others","colorSX","paper","bgcolor","outlineSX","border","sizeSX","height","role","setValue","options","marginBottom","primary","select","option","label","fileRef1","useRef","current","click","hidden","setFieldValue","files","mt","substring","toFixed","_interopRequireDefault","require","Object","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","styles","ownerState","root","capitalize","_extends","display","transition","transitions","create","vars","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","strokeDasharray","strokeDashoffset","React","inProps","useThemeProps","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","round","transform","_jsx","clsx","children","viewBox","cx","cy","r","fill","strokeWidth"],"mappings":"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","file":"static/js/11.0a7892bb.chunk.js","sourcesContent":["import { forwardRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Slide, DialogContentText, Typography } from '@mui/material';\r\nimport { deleteCategory } from 'redux/categories/actions';\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\nexport default function DeleteCategoryDialog({ open, setOpen, page, limit, search, categoryId }) {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title1\"\r\n                aria-describedby=\"alert-dialog-slide-description1\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title1\">Delete Category</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description1\">\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Are you sure you want to delete this Category?\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button\r\n                        sx={{ color: theme.palette.error.dark, borderColor: theme.palette.error.dark }}\r\n                        onClick={handleClose}\r\n                        color=\"secondary\"\r\n                    >\r\n                        No\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            dispatch(\r\n                                deleteCategory({\r\n                                    categoryId: categoryId,\r\n                                    page: page,\r\n                                    limit: limit,\r\n                                    search: search,\r\n                                    handleClose: handleClose\r\n                                })\r\n                            );\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    IconButton,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    Grid,\r\n    Divider,\r\n    Typography,\r\n    TableHead,\r\n    TableRow,\r\n    Tooltip,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport DeleteCategoryDialog from './deleteCategoryDialog';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport moment from 'moment';\r\n\r\nconst CategoryTable = ({ categoryList, page, limit, search, setAddUpdateOpen, setCategoryData }) => {\r\n    const theme = useTheme();\r\n    const [deleteOpen, setDeleteOpen] = useState(false);\r\n    const [categoryId, setCategoryId] = useState();\r\n    return (\r\n        <>\r\n            <DeleteCategoryDialog\r\n                open={deleteOpen}\r\n                setOpen={setDeleteOpen}\r\n                categoryId={categoryId}\r\n                page={page}\r\n                limit={limit}\r\n                search={search}\r\n            />\r\n            <DeleteCategoryDialog />\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\"></TableCell>\r\n                            <TableCell align=\"center\">Name</TableCell>\r\n                            <TableCell align=\"center\">Description</TableCell>\r\n                            <TableCell align=\"center\">Created At</TableCell>\r\n                            <TableCell align=\"center\">Updated At</TableCell>\r\n                            <TableCell align=\"center\">Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    {(categoryList.categories == undefined && categoryList.categories?.length == 0) || undefined ? (\r\n                        <>\r\n                            <Grid item>\r\n                                <Typography style={{ padding: '20px', fontWeight: '800', justifyContent: 'center' }}>\r\n                                    {' '}\r\n                                    No Data Available\r\n                                </Typography>\r\n                            </Grid>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {categoryList.categories?.length > 0 ? (\r\n                                <>\r\n                                    <TableBody>\r\n                                        {categoryList.categories != undefined &&\r\n                                            categoryList.categories.map((row, index) => (\r\n                                                <>\r\n                                                    <TableRow>\r\n                                                        <TableCell sx={{ float: 'right' }}>\r\n                                                            <Avatar alt=\"Category Image\" src={row.image} sx={{ float: 'right' }} />\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\" sx={{ padding: '0px', textTransform: 'capitalize' }}>\r\n                                                            {row.name}\r\n                                                        </TableCell>\r\n\r\n                                                        <TableCell align=\"center\" sx={{ padding: '0px', textTransform: 'capitalize' }}>\r\n                                                            {row.description}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\">{moment(row.createdAt).format('DD-MMM-YYYY')}</TableCell>\r\n                                                        <TableCell align=\"center\">{moment(row.updatedAt).format('DD-MMM-YYYY')}</TableCell>\r\n                                                        <TableCell align=\"center\" sx={{ padding: '0px' }}>\r\n                                                            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                                                                <Tooltip placement=\"top\" title=\"Edit\">\r\n                                                                    <IconButton\r\n                                                                        sx={{ color: '#008b04' }}\r\n                                                                        aria-label=\"Edit\"\r\n                                                                        size=\"large\"\r\n                                                                        onClick={() => {\r\n                                                                            setAddUpdateOpen(true);\r\n                                                                            setCategoryData({\r\n                                                                                id: row.id,\r\n                                                                                name: row.name,\r\n                                                                                description: row.description,\r\n                                                                                image: null\r\n                                                                            });\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <EditOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                                    </IconButton>\r\n                                                                </Tooltip>\r\n                                                                <Tooltip placement=\"top\" title=\"Delete\">\r\n                                                                    <IconButton\r\n                                                                        color=\"primary\"\r\n                                                                        sx={{\r\n                                                                            color: theme.palette.orange.dark,\r\n                                                                            borderColor: theme.palette.orange.main,\r\n                                                                            '&:hover ': { background: theme.palette.orange.light }\r\n                                                                        }}\r\n                                                                        size=\"large\"\r\n                                                                        onClick={() => {\r\n                                                                            setDeleteOpen(true);\r\n                                                                            setCategoryId(row.id);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <DeleteOutlineOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                                    </IconButton>\r\n                                                                </Tooltip>\r\n                                                            </Stack>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                </>\r\n                                            ))}\r\n                                    </TableBody>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Grid container justifyContent=\"center\" sx={{ width: '300%', m: 5 }}>\r\n                                        <Grid item>\r\n                                            <CircularProgress size={'4rem'} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </Table>\r\n                <Divider />\r\n            </TableContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CategoryTable;\r\n","import { forwardRef, useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Dialog, DialogContent, InputLabel, TextField, Grid, DialogTitle, Divider, DialogActions, Slide } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { addCategory, updateCategory } from 'redux/categories/actions';\r\nimport FileInput from '../../../../../shared/component/FileInput';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function AddUpdateCategory({ open, setOpen, categoryData, page, limit, search }) {\r\n    const dispatch = useDispatch();\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (categoryData.id == null) {\r\n            setIsUpdate(false);\r\n        } else {\r\n            setIsUpdate(true);\r\n        }\r\n    }, [categoryData]);\r\n\r\n    const validationSchema = Yup.object({\r\n        isUpdate: Yup.boolean().default(isUpdate),\r\n        name: Yup.string()\r\n            .required('Category Name is required!')\r\n            .max(42, 'Category Name can not exceed 42 characters')\r\n            .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Category name'),\r\n        description: Yup.string()\r\n            .required('Description is required!')\r\n            .max(42, 'Description can not exceed 200 characters')\r\n            .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Description'),\r\n        image: Yup.mixed().when(['isUpdate'], {\r\n            is: true,\r\n            then: Yup.mixed(),\r\n            otherwise: Yup.mixed().required('Image is required')\r\n        })\r\n    });\r\n\r\n    const errorHandler = (values) => {\r\n        if (values.image) {\r\n            if (\r\n                values.image.name.split('.').pop() == 'jpg' ||\r\n                values.image.name.split('.').pop() == 'png' ||\r\n                values.image.name.split('.').pop() == 'jpeg '\r\n            ) {\r\n                return true;\r\n            } else {\r\n                toast.error('Upload the files with these extensions: jpg, png, jpeg');\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: categoryData,\r\n        validationSchema,\r\n        onSubmit: async (values) => {\r\n            const isValid = errorHandler(values);\r\n            if (isValid) {\r\n                if (categoryData.id == null) {\r\n                    await dispatch(\r\n                        addCategory({\r\n                            name: values.name,\r\n                            description: values.description,\r\n                            image: values.image,\r\n                            page: page,\r\n                            limit: limit,\r\n                            search: search,\r\n                            handleClose: handleClose\r\n                        })\r\n                    );\r\n                } else {\r\n                    dispatch(\r\n                        updateCategory({\r\n                            categoryId: categoryData.id,\r\n                            name: values.name,\r\n                            description: values.description,\r\n                            image: values.image,\r\n                            page: page,\r\n                            limit: limit,\r\n                            search: search,\r\n                            handleClose: handleClose\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n        formik.resetForm();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                className=\"brandDialog\"\r\n                maxWidth=\"md\"\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                aria-describedby=\"alert-dialog-slide-description1\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">{categoryData.id == null ? 'Add Category ' :\r\n                 ' Update Category '}</DialogTitle>\r\n                <Divider />\r\n                <DialogContent>\r\n                    <form noValidate onSubmit={formik.handleSubmit} id=\"validation-forms\">\r\n                        <Grid container>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Name</InputLabel>\r\n                            <TextField\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText={formik.touched.name && formik.errors.name}\r\n                                fullWidth\r\n                                autoComplete=\"given-name\"\r\n                            />\r\n\r\n                            <InputLabel sx={{ marginTop: '15px' }} htmlFor=\"outlined-adornment-password-login\">\r\n                                Description\r\n                            </InputLabel>\r\n                            <TextField\r\n                                id=\"description\"\r\n                                name=\"description\"\r\n                                value={formik.values.description}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.description && Boolean(formik.errors.description)}\r\n                                helperText={formik.touched.description && formik.errors.description}\r\n                                fullWidth\r\n                                autoComplete=\"given-name\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} pt={2}>\r\n                            <FileInput formik={formik} accept=\"image/*\" fieldName=\"image\" placeHolder=\"Add Category Image\" />\r\n                        </Grid>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 3 }}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            sx={{ my: 3, ml: 1 }}\r\n                            type=\"submit\"\r\n                            size=\"large\"\r\n                            onClick={formik.handleSubmit}\r\n                            disableElevation\r\n                        >\r\n                            {categoryData.name !== '' ? 'Update ' : 'Add '}\r\n                        </Button>\r\n                    </AnimateButton>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            sx={{ my: 3, ml: 1, color: '#fff' }}\r\n                            onClick={handleClose}\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport CategoryTable from './component/categoryTable';\r\nimport { Button, Grid, MenuItem, Menu, Pagination, OutlinedInput, InputAdornment, Typography } from '@mui/material';\r\nimport { IconSearch } from '@tabler/icons';\r\nimport { getAllCategories } from '../../../../redux/categories/actions';\r\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\r\nimport AddUpdateCategory from './component/addUpdateCategory';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport HeadingCard from 'shared/Card/HeadingCard';\r\n\r\nconst Categories = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const categoryList = useSelector((state) => state.category.categoryList);\r\n    const [search, setSearch] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [limit, setLimit] = useState(10);\r\n    const [categoryData, setCategoryData] = useState({\r\n        id: null,\r\n        name: '',\r\n        description: '',\r\n        image: null\r\n    });\r\n    const [addUpdateOpen, setAddUpdateOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getAllCategories({\r\n                search: search,\r\n                page: page,\r\n                limit: limit\r\n            })\r\n        );\r\n    }, [search, page, limit]);\r\n\r\n    return (\r\n        <>\r\n            <AddUpdateCategory\r\n                open={addUpdateOpen}\r\n                setOpen={setAddUpdateOpen}\r\n                categoryData={categoryData}\r\n                page={page}\r\n                limit={limit}\r\n                search={search}\r\n            />            <HeadingCard title=\" Category Management\" />\r\n\r\n\r\n            \r\n            <MainCard\r\n                title={\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={3}>\r\n                            <OutlinedInput\r\n                                id=\"input-search-list-style1\"\r\n                                placeholder=\"Search\"\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                    </InputAdornment>\r\n                                }\r\n                                size=\"small\"\r\n                                onChange={(e) => {\r\n                                    setSearch(e.target.value);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9} textAlign=\"end\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                onClick={() => {\r\n                                    setAddUpdateOpen(true);\r\n                                    setCategoryData({ id: null, name: '', description: '', image: null });\r\n                                }}\r\n                            >\r\n                                Add Category\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                content={false}\r\n            >\r\n                <CategoryTable\r\n                    categoryList={categoryList && categoryList}\r\n                    page={page}\r\n                    limit={limit}\r\n                    search={search}\r\n                    setAddUpdateOpen={setAddUpdateOpen}\r\n                    setCategoryData={setCategoryData}\r\n                />\r\n\r\n                <>\r\n                    <Grid item xs={12} sx={{ p: 3 }}>\r\n                        <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                            <Grid item>\r\n                                <Pagination\r\n                                    color=\"primary\"\r\n                                    showFirstButton\r\n                                    showLastButton\r\n                                    page={page}\r\n                                    count={categoryList && categoryList.pages}\r\n                                    onChange={(event, newPage) => {\r\n                                        setPage(newPage);\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    size=\"large\"\r\n                                    sx={{ color: theme.palette.grey[900] }}\r\n                                    color=\"secondary\"\r\n                                    endIcon={<ExpandMoreRoundedIcon />}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    {limit} Rows\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"menu-user-list-style1\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleCloseMenu}\r\n                                    variant=\"selectedMenu\"\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                >\r\n                                    <MenuItem\r\n                                        value={10}\r\n                                        onClick={(e) => {\r\n                                            setLimit(e.target.value);\r\n                                            setPage(1);\r\n                                            handleCloseMenu();\r\n                                        }}\r\n                                    >\r\n                                        {' '}\r\n                                        10 Rows\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        value={25}\r\n                                        onClick={(e) => {\r\n                                            setLimit(e.target.value);\r\n                                            setPage(1);\r\n                                            handleCloseMenu();\r\n                                        }}\r\n                                    >\r\n                                        {' '}\r\n                                        25 Rows\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        value={50}\r\n                                        onClick={(e) => {\r\n                                            setLimit(e.target.value);\r\n                                            setPage(1);\r\n                                            handleCloseMenu();\r\n                                        }}\r\n                                    >\r\n                                        {' '}\r\n                                        50 Rows{' '}\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            </MainCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import { Box, Card, Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport { forwardRef } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// constant\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst HeadingCard = forwardRef(({ title, role, value, setValue, options }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                marginBottom: theme.spacing(gridSpacing),\r\n\r\n                borderColor: theme.palette.primary[200] + 75,\r\n                background: theme.palette.background.default\r\n            }}\r\n        >\r\n            <Box sx={{ padding: '13px 20px 22px 20px' }}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\" sx={{ marginTop:'10px' , fontWeight: 500, color: '#000' }}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {value !== undefined && (\r\n                        <Grid item>\r\n                            {/* {options && (role == 'teacher' || role == 'super_admin') && ( */}\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                value={value}\r\n                                onChange={(e) => setValue(e.target.value)}\r\n                                sx={{ width: '110px', height: '40px' }}\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            {/* )} */}\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default HeadingCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Fragment } from 'react';\r\nimport { Grid, Typography, IconButton, Tooltip, RadioGroup, FormControlLabel, Radio } from '@mui/material';\r\n\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\nimport AddCircleOutlinedIcon from '@mui/icons-material/AddCircleOutlined';\r\n\r\n// Props needed for component formik ,correctOption, setCorrectOption , optionValue , formikFieldName , PlaceHOLDER\r\nconst FileInput = ({ formik, fieldName, placeHolder, accept }) => {\r\n    const dispatch = useDispatch();\r\n    const fileRef1 = useRef();\r\n\r\n    return (\r\n        <>\r\n            <Grid item className=\"displayFlex\">\r\n                <Fragment>\r\n                    <Tooltip placement=\"top\" title={accept == 'image/*' ? 'Add Image' : 'Add Audio'}>\r\n                        <IconButton color=\"primary\" aria-label=\"delete\" size=\"large\" onClick={() => fileRef1.current.click()}>\r\n                            <AddCircleOutlinedIcon sx={{ fontSize: '3.0rem' }} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <input\r\n                        hidden\r\n                        ref={fileRef1}\r\n                        fullWidth\r\n                        type=\"file\"\r\n                        className=\"chooseFileInput\"\r\n                        accept={accept}\r\n                        onChange={(event) => {\r\n                            formik.setFieldValue(fieldName, event.currentTarget.files[0]);\r\n                        }}\r\n                        error={formik.touched[`${fieldName}`] && Boolean(formik.errors[`${fieldName}`])}\r\n                        helperText={formik.touched[`${fieldName}`] && formik.errors[`${fieldName}`]}\r\n                    />\r\n\r\n                    <Grid className=\"displayFlex\">\r\n                        {formik?.values[`${fieldName}`]?.name?.length < 40 ? (\r\n                            <Typography mt={3.5} variant=\"h5\">\r\n                                {formik.values[`${fieldName}`]?.name}\r\n                            </Typography>\r\n                        ) : (\r\n                            <Typography mt={3.5} variant=\"h5\">\r\n                                {formik.values[`${fieldName}`]?.name?.substring(0, 40)}\r\n                            </Typography>\r\n                        )}\r\n                        {formik?.values[`${fieldName}`] && (\r\n                            <Typography mt={3.5} variant=\"h5\" ml={2}>\r\n                                {'(' + (formik.values[`${fieldName}`]?.size / 1000000).toFixed(2) + '  mb)'}\r\n                            </Typography>\r\n                        )}\r\n\r\n                        {formik.values[`${fieldName}`] ? (\r\n                            <Tooltip placement=\"top\" title={accept == 'image/*' ? 'Clear Image' : 'Clear Audio'}>\r\n                                <IconButton\r\n                                    style={{ marginTop: '2px' }}\r\n                                    color=\"primary\"\r\n                                    aria-label=\"delete\"\r\n                                    size=\"large\"\r\n                                    onClick={() => {\r\n                                        formik.setFieldValue(fieldName, null);\r\n                                        fileRef1.current.value = null;\r\n                                    }}\r\n                                >\r\n                                    <CloseOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        ) : (\r\n                            <Typography mt={3.5} variant=\"h5\">\r\n                                {placeHolder}\r\n                            </Typography>\r\n                        )}\r\n                    </Grid>\r\n                </Fragment>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <p className={'fileError'}>\r\n                    {formik.touched[`${fieldName}`] && Boolean(formik.errors[`${fieldName}`]) ? formik.errors[`${fieldName}`] : ''}\r\n                </p>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FileInput;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircleOutlined');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"sourceRoot":""}