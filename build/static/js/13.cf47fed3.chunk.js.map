{"version":3,"sources":["views/pages/brandAdmin/brandCategory/component/brandCategoryTable.js","views/pages/brandAdmin/brandCategory/index.js","ui-component/extended/Avatar.js","shared/Card/HeadingCard.js"],"names":["BrandCategoryTable","brandCategoriesList","navigate","useNavigate","TableContainer","Table","TableHead","TableRow","TableCell","align","undefined","brandCategories","count","TableBody","sx","padding","map","row","index","justifyContent","alignItems","Grid","container","spacing","item","Avatar","alt","src","Category","image","Typography","variant","component","name","description","profitPercentage","Tooltip","placement","title","IconButton","color","size","onClick","state","data","fontSize","md","Divider","style","fontWeight","Categories","theme","useTheme","dispatch","useDispatch","useSelector","brandCategoryReducer","user","auth","useState","search","setSearch","page","setPage","limit","setLimit","anchorEl","setAnchorEl","handleCloseMenu","useEffect","getAllBrandCategories","brandId","BrandId","HeadingCard","MainCard","gridSpacing","xs","OutlinedInput","id","placeholder","startAdornment","InputAdornment","position","stroke","onChange","e","target","value","content","p","Pagination","showFirstButton","showLastButton","pages","event","newPage","Button","palette","grey","endIcon","currentTarget","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","outline","others","colorSX","background","paper","bgcolor","outlineSX","border","borderColor","sizeSX","width","height","forwardRef","role","setValue","options","marginBottom","primary","default","marginTop","select","option","label"],"mappings":"0SAyFeA,EAzEY,SAAH,GAAiC,IAA3BC,EAAmB,EAAnBA,oBACpBC,EAAWC,cAEjB,OACI,cAACC,EAAA,EAAc,UACX,eAACC,EAAA,EAAK,WACF,cAACC,EAAA,EAAS,UACN,eAACC,EAAA,EAAQ,WACL,cAACC,EAAA,EAAS,CAACC,MAAM,SAAQ,sBACzB,cAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,yBACzB,cAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,+BACzB,cAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,+BAGOC,GAAvCT,EAAoBU,iBAAgCV,EAAoBW,MAAQ,EAC7E,cAACC,EAAA,EAAS,CAACC,GAAI,CAAEC,QAAS,QAAS,cACSL,GAAvCT,EAAoBU,iBACjBV,EAAoBU,gBAAgBK,KAAI,SAACC,EAAKC,GAAK,OAC/C,mCACI,eAACX,EAAA,EAAQ,WACL,cAACC,EAAA,EAAS,CAACC,MAAM,SAASU,eAAe,SAASC,WAAW,SAAQ,SACjE,eAACC,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAGJ,eAAe,SAASC,WAAW,SAAQ,UACnE,cAACC,EAAA,EAAI,CAACG,MAAI,WACN,cAACC,EAAA,EAAM,CAACC,IAAI,iBAAiBC,IAAKV,EAAIW,SAASC,UAEnD,cAACR,EAAA,EAAI,CAACG,MAAI,WACN,cAACM,EAAA,EAAU,CAACC,QAAQ,YAAYC,UAAU,MAAK,SAC1Cf,EAAIW,SAASK,cAM9B,cAACzB,EAAA,EAAS,CAACC,MAAM,SAAQ,SAAEQ,EAAIW,SAASM,cACxC,cAAC1B,EAAA,EAAS,CAACC,MAAM,SAAQ,SAAEQ,EAAIkB,mBAE/B,cAAC3B,EAAA,EAAS,CAACC,MAAM,SAAQ,SACrB,cAAC2B,EAAA,EAAO,CAACC,UAAU,MAAMC,MAAM,aAAY,SACvC,cAACC,EAAA,EAAU,CACPC,MAAM,UACN,aAAW,SACXC,KAAK,QACLC,QAAS,WACLxC,EAAS,iBAAkB,CACvByC,MAAO,CACHC,KAAM3B,IAGlB,EAAE,SAEF,cAAC,IAAsB,CAACH,GAAI,CAAE+B,SAAU,sBAKzD,MAIf,qCACI,cAACxB,EAAA,EAAI,CAACG,MAAI,EAACsB,GAAI,GAAG,SACd,cAACC,EAAA,EAAO,MAEZ,cAAC1B,EAAA,EAAI,CAACG,MAAI,WACN,cAACM,EAAA,EAAU,CAACkB,MAAO,CAAEjC,QAAS,OAAQkC,WAAY,OAAQ,yCAOtF,E,4GCiEeC,UA5II,WACf,IAAMC,EAAQC,cACRC,EAAWC,cACXrD,EAAsBsD,aAAY,SAACZ,GAAK,OAAKA,EAAMa,qBAAqBvD,mBAAmB,IAC3FwD,EAAOF,aAAY,SAACZ,GAAK,OAAKA,EAAMe,KAAKD,IAAI,IACnD,EAA4BE,mBAAS,IAAG,mBAAjCC,EAAM,KAAEC,EAAS,KACxB,EAAwBF,mBAAS,GAAE,mBAA5BG,EAAI,KAAEC,EAAO,KACpB,EAA0BJ,mBAAS,IAAG,mBAA/BK,EAAK,KAAEC,EAAQ,KAEtB,EAAgCN,mBAAS,MAAK,mBAAvCO,EAAQ,KAAEC,EAAW,KAKtBC,EAAkB,WACpBD,EAAY,KAChB,EAYA,OAVAE,qBAAU,WACNhB,EACIiB,YAAsB,CAClBC,QAASd,EAAKe,QACdZ,OAAQA,EACRE,KAAMA,EACNE,MAAOA,IAGnB,GAAG,CAACJ,EAAQE,EAAME,IAEd,qCACI,cAACS,EAAA,EAAW,CAACnC,MAAM,yBAEnB,eAACoC,EAAA,EAAQ,CACLpC,MACI,cAACjB,EAAA,EAAI,CAACC,WAAS,EAACC,QAASoD,IAAY,SACjC,cAACtD,EAAA,EAAI,CAACG,MAAI,EAACoD,GAAI,EAAE,SACb,cAACC,EAAA,EAAa,CACVC,GAAG,2BACHC,YAAY,SACZC,eACI,cAACC,EAAA,EAAc,CAACC,SAAS,QAAO,SAC5B,cAAC,IAAU,CAACC,OAAQ,IAAK1C,KAAK,WAGtCA,KAAK,QACL2C,SAAU,SAACC,GACPxB,EAAUwB,EAAEC,OAAOC,MACvB,QAKhBC,SAAS,EAAM,UAEf,cAAC,EAAkB,CAACvF,oBAAqBA,IAEzC,mCACI,cAACoB,EAAA,EAAI,CAACG,MAAI,EAACoD,GAAI,GAAI9D,GAAI,CAAE2E,EAAG,GAAI,SAC5B,eAACpE,EAAA,EAAI,CAACC,WAAS,EAACH,eAAe,gBAAgBI,QAASoD,IAAY,UAChE,cAACtD,EAAA,EAAI,CAACG,MAAI,WACN,cAACkE,EAAA,EAAU,CACPlD,MAAM,UACNmD,iBAAe,EACfC,gBAAc,EACd9B,KAAMA,EACNlD,MAAOX,EAAoB4F,MAC3BT,SAAU,SAACU,EAAOC,GACdhC,EAAQgC,EACZ,MAGR,eAAC1E,EAAA,EAAI,CAACG,MAAI,YACN,eAACwE,EAAA,EAAM,CACHvD,KAAK,QACL3B,GAAI,CAAE0B,MAAOW,EAAM8C,QAAQC,KAAK,MAChC1D,MAAM,YACN2D,QAAS,cAAC,IAAqB,IAC/BzD,QAnEZ,SAACoD,GACjB3B,EAAY2B,EAAMM,cACtB,EAiEqD,UAEpBpC,EAAK,WAEV,eAACqC,EAAA,EAAI,CACDvB,GAAG,wBACHZ,SAAUA,EACVoC,aAAW,EACXC,KAAMC,QAAQtC,GACduC,QAASrC,EACTrC,QAAQ,eACR2E,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SACd,UAEF,eAACE,EAAA,EAAQ,CACLvB,MAAO,GACP7C,QAAS,SAAC2C,GACNpB,EAASoB,EAAEC,OAAOC,OAClBxB,EAAQ,GACRK,GACJ,EAAE,UAED,IAAG,aAGR,eAAC0C,EAAA,EAAQ,CACLvB,MAAO,GACP7C,QAAS,SAAC2C,GACNpB,EAASoB,EAAEC,OAAOC,OAClBxB,EAAQ,GACRK,GACJ,EAAE,UAED,IAAG,aAGR,eAAC0C,EAAA,EAAQ,CACLvB,MAAO,GACP7C,QAAS,SAAC2C,GACNpB,EAASoB,EAAEC,OAAOC,OAClBxB,EAAQ,GACRK,GACJ,EAAE,UAED,IAAG,UACI,yBAUhD,C,iHC/Ee3C,IA/DA,SAAH,GAAiD,IAA3Ce,EAAK,EAALA,MAAOuE,EAAO,EAAPA,QAAStE,EAAI,EAAJA,KAAM3B,EAAE,EAAFA,GAAOkG,EAAM,iBAC3C7D,EAAQC,cAER6D,EAAUzE,IAAUuE,GAAW,CAAEvE,MAAOW,EAAM8C,QAAQiB,WAAWC,MAAOC,QAAQ,GAAD,OAAK5E,EAAK,UACzF6E,EAAYN,GAAW,CACzBvE,MAAOA,EAAK,UAAMA,EAAK,wBACvB4E,QAASjE,EAAM8C,QAAQiB,WAAWC,MAClCG,OAAQ,YACRC,YAAa/E,EAAK,UAAMA,EAAK,yBAE7BgF,EAAS,CAAC,EACd,OAAQ/E,GACJ,IAAK,QACD+E,EAAS,CACLC,MAAOtE,EAAM5B,QAAQ,KACrBmG,OAAQvE,EAAM5B,QAAQ,MAE1B,MACJ,IAAK,KACDiG,EAAS,CACLC,MAAOtE,EAAM5B,QAAQ,MACrBmG,OAAQvE,EAAM5B,QAAQ,OAE1B,MACJ,IAAK,KACDiG,EAAS,CACLC,MAAOtE,EAAM5B,QAAQ,GACrBmG,OAAQvE,EAAM5B,QAAQ,IAE1B,MACJ,IAAK,KACDiG,EAAS,CACLC,MAAOtE,EAAM5B,QAAQ,GACrBmG,OAAQvE,EAAM5B,QAAQ,IAE1B,MACJ,IAAK,KACDiG,EAAS,CACLC,MAAOtE,EAAM5B,QAAQ,OACrBmG,OAAQvE,EAAM5B,QAAQ,QAE1B,MACJ,IAAK,KACDiG,EAAS,CACLC,MAAOtE,EAAM5B,QAAQ,KACrBmG,OAAQvE,EAAM5B,QAAQ,MAE1B,MACJ,QACIiG,EAAS,CAAC,EAGlB,OAAO,cAAC,IAAS,aAAC1G,GAAE,mDAAOmG,GAAYI,GAAcG,GAAW1G,IAAUkG,GAC9E,C,mCC7DA,wFAWMvC,EAAckD,sBAAW,YAAgD,IAA7CrF,EAAK,EAALA,MAAaiD,GAAF,EAAJqC,KAAW,EAALrC,OAAOsC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QACtD3E,EAAQC,cAEd,OACI,cAAC,IAAI,CACDtC,GAAI,CACAiH,aAAc5E,EAAM5B,QAAQoD,KAE5B4C,YAAapE,EAAM8C,QAAQ+B,QAAQ,KAAO,GAC1Cd,WAAY/D,EAAM8C,QAAQiB,WAAWe,SACvC,SAEF,cAAC,IAAG,CAACnH,GAAI,CAAEC,QAAS,uBAAwB,SACxC,eAAC,IAAI,CAACO,WAAS,EAACF,WAAW,SAASD,eAAe,gBAAgBI,QAASoD,IAAY,UACpF,cAAC,IAAI,CAACnD,MAAI,WACN,cAAC,IAAU,CAACO,QAAQ,KAAKjB,GAAI,CAAEoH,UAAU,OAASjF,WAAY,IAAKT,MAAO,QAAS,SAC9EF,WAIE5B,IAAV6E,GACG,cAAC,IAAI,CAAC/D,MAAI,WAEN,cAAC,IAAS,CACNsD,GAAG,2BACHqD,QAAM,EACN5C,MAAOA,EACPH,SAAU,SAACC,GAAC,OAAKwC,EAASxC,EAAEC,OAAOC,MAAM,EACzCzE,GAAI,CAAE2G,MAAO,QAASC,OAAQ,QAAS,SAEtCI,EAAQ9G,KAAI,SAACoH,GAAM,OAChB,cAAC,IAAQ,CAAoB7C,MAAO6C,EAAO7C,MAAM,SAC5C6C,EAAOC,OADGD,EAAO7C,MAEX,cAU/C,IAEed,K","file":"static/js/13.cf47fed3.chunk.js","sourcesContent":["import {\r\n    Divider,\r\n    Typography,\r\n    IconButton,\r\n    Grid,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Tooltip\r\n} from '@mui/material';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst BrandCategoryTable = ({ brandCategoriesList }) => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <TableContainer>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">Category</TableCell>\r\n                        <TableCell align=\"center\">Description</TableCell>\r\n                        <TableCell align=\"center\">Profit percentage</TableCell>\r\n                        <TableCell align=\"center\">Actions</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                {brandCategoriesList.brandCategories != undefined && brandCategoriesList.count > 0 ? (\r\n                    <TableBody sx={{ padding: '10px' }}>\r\n                        {brandCategoriesList.brandCategories != undefined &&\r\n                            brandCategoriesList.brandCategories.map((row, index) => (\r\n                                <>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\" justifyContent=\"center\" alignItems=\"center\">\r\n                                            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                                                <Grid item>\r\n                                                    <Avatar alt=\"Category Image\" src={row.Category.image} />\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Typography variant=\"subtitle1\" component=\"div\">\r\n                                                        {row.Category.name}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell align=\"center\">{row.Category.description}</TableCell>\r\n                                        <TableCell align=\"center\">{row.profitPercentage}</TableCell>\r\n\r\n                                        <TableCell align=\"center\">\r\n                                            <Tooltip placement=\"top\" title=\"View NFT's\">\r\n                                                <IconButton\r\n                                                    color=\"primary\"\r\n                                                    aria-label=\"detail\"\r\n                                                    size=\"large\"\r\n                                                    onClick={() => {\r\n                                                        navigate('/nftManagement', {\r\n                                                            state: {\r\n                                                                data: row\r\n                                                            }\r\n                                                        });\r\n                                                    }}\r\n                                                >\r\n                                                    <VisibilityOutlinedIcon sx={{ fontSize: '1.5rem' }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </>\r\n                            ))}\r\n                    </TableBody>\r\n                ) : (\r\n                    <>\r\n                        <Grid item md={12}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ padding: '20px', fontWeight: '800' }}> No Data Available</Typography>\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default BrandCategoryTable;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport BrandCategoryTable from './component/brandCategoryTable';\r\nimport { Button, Grid, MenuItem, Menu, Pagination, OutlinedInput, InputAdornment, Typography } from '@mui/material';\r\nimport { IconSearch } from '@tabler/icons';\r\nimport { getAllBrandCategories } from '../../../../redux/brandCategory/actions';\r\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport HeadingCard from 'shared/Card/HeadingCard';\r\n\r\nconst Categories = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const brandCategoriesList = useSelector((state) => state.brandCategoryReducer.brandCategoriesList);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [search, setSearch] = useState('');\r\n    const [page, setPage] = useState(1);\r\n    const [limit, setLimit] = useState(10);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getAllBrandCategories({\r\n                brandId: user.BrandId,\r\n                search: search,\r\n                page: page,\r\n                limit: limit\r\n            })\r\n        );\r\n    }, [search, page, limit]);\r\n    return (\r\n        <>\r\n            <HeadingCard title=\" Category Management\" />\r\n\r\n            <MainCard\r\n                title={\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={6}>\r\n                            <OutlinedInput\r\n                                id=\"input-search-list-style1\"\r\n                                placeholder=\"Search\"\r\n                                startAdornment={\r\n                                    <InputAdornment position=\"start\">\r\n                                        <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                    </InputAdornment>\r\n                                }\r\n                                size=\"small\"\r\n                                onChange={(e) => {\r\n                                    setSearch(e.target.value);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                content={false}\r\n            >\r\n                <BrandCategoryTable brandCategoriesList={brandCategoriesList} />\r\n\r\n                <>\r\n                    <Grid item xs={12} sx={{ p: 3 }}>\r\n                        <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                            <Grid item>\r\n                                <Pagination\r\n                                    color=\"primary\"\r\n                                    showFirstButton\r\n                                    showLastButton\r\n                                    page={page}\r\n                                    count={brandCategoriesList.pages}\r\n                                    onChange={(event, newPage) => {\r\n                                        setPage(newPage);\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    size=\"large\"\r\n                                    sx={{ color: theme.palette.grey[900] }}\r\n                                    color=\"secondary\"\r\n                                    endIcon={<ExpandMoreRoundedIcon />}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    {limit} Rows\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"menu-user-list-style1\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleCloseMenu}\r\n                                    variant=\"selectedMenu\"\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'right'\r\n                                    }}\r\n                                >\r\n                                    <MenuItem\r\n                                        value={10}\r\n                                        onClick={(e) => {\r\n                                            setLimit(e.target.value);\r\n                                            setPage(1);\r\n                                            handleCloseMenu();\r\n                                        }}\r\n                                    >\r\n                                        {' '}\r\n                                        10 Rows\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        value={25}\r\n                                        onClick={(e) => {\r\n                                            setLimit(e.target.value);\r\n                                            setPage(1);\r\n                                            handleCloseMenu();\r\n                                        }}\r\n                                    >\r\n                                        {' '}\r\n                                        25 Rows\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        value={50}\r\n                                        onClick={(e) => {\r\n                                            setLimit(e.target.value);\r\n                                            setPage(1);\r\n                                            handleCloseMenu();\r\n                                        }}\r\n                                    >\r\n                                        {' '}\r\n                                        50 Rows{' '}\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            </MainCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar from '@mui/material/Avatar';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    sx: PropTypes.object\r\n};\r\n\r\nexport default Avatar;\r\n","import { Box, Card, Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nimport { forwardRef } from 'react';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// constant\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst HeadingCard = forwardRef(({ title, role, value, setValue, options }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                marginBottom: theme.spacing(gridSpacing),\r\n\r\n                borderColor: theme.palette.primary[200] + 75,\r\n                background: theme.palette.background.default\r\n            }}\r\n        >\r\n            <Box sx={{ padding: '13px 20px 22px 20px' }}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\" sx={{ marginTop:'10px' , fontWeight: 500, color: '#000' }}>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    {value !== undefined && (\r\n                        <Grid item>\r\n                            {/* {options && (role == 'teacher' || role == 'super_admin') && ( */}\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                value={value}\r\n                                onChange={(e) => setValue(e.target.value)}\r\n                                sx={{ width: '110px', height: '40px' }}\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            {/* )} */}\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default HeadingCard;\r\n"],"sourceRoot":""}