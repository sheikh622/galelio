{"version":3,"sources":["../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Description.js","../node_modules/@mui/icons-material/Tour.js","../node_modules/@mui/icons-material/MonetizationOn.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","views/pages/user/deliveryDashboard/component/DeliveryDashboard.js","views/pages/user/deliveryDashboard/index.js","ui-component/cards/SubCard.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","styled","name","overridesResolver","props","styles","root","width","overflowX","TableContainer","React","inProps","ref","useThemeProps","className","_props$component","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","createData","calories","fat","carbs","protein","DeliveryDashboard","_ref2","productList","theme","useTheme","Grid","item","lg","md","xs","children","container","direction","spacing","gridSpacing","SubCard","title","sx","margin","length","map","row","_Fragment","_jsxs","justifyContent","textAlign","marginBottom","sm","height","src","Nft","asset","alt","List","ListItemButton","ListItemIcon","PersonIcon","fontSize","ListItemText","primary","Typography","variant","ListItemSecondaryAction","color","palette","mode","textTransform","align","Divider","DescriptionIcon","description","TourIcon","status","MonetizationOnIcon","price","DeliverD","dispatch","useDispatch","useSelector","state","delivery","user","auth","useEffect","getAllProducts","walletAddress","style","marginTop","maxWidth","background","forwardRef","_ref","content","contentClass","darkTitle","secondary","_ref$sx","_ref$contentSX","contentSX","others","_objectWithoutProperties","Card","_objectSpread","border","borderColor","dark","light","boxShadow","CardHeader","p","action","opacity","CardContent","defaultProps"],"mappings":"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","file":"static/js/43.b6f52fc1.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}), 'Description');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 4H7V2H5v20h2v-8h14l-2-5 2-5zm-6 5c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2z\"\n}), 'Tour');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1.41 16.09V20h-2.67v-1.93c-1.71-.36-3.16-1.46-3.27-3.4h1.96c.1 1.05.82 1.87 2.65 1.87 1.96 0 2.4-.98 2.4-1.59 0-.83-.44-1.61-2.67-2.14-2.48-.6-4.18-1.62-4.18-3.67 0-1.72 1.39-2.84 3.11-3.21V4h2.67v1.95c1.86.45 2.79 1.86 2.85 3.39H14.3c-.05-1.11-.64-1.87-2.22-1.87-1.5 0-2.4.68-2.4 1.64 0 .84.65 1.39 2.67 1.91s4.18 1.39 4.18 3.91c-.01 1.83-1.38 2.83-3.12 3.16z\"\n}), 'MonetizationOn');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// material-ui\r\nimport {\r\n    Box,\r\n    Button,\r\n    CardContent,\r\n    Chip,\r\n    Stack,\r\n    Divider,\r\n    Grid,\r\n    LinearProgress,\r\n    List,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// project imports\r\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TourIcon from '@mui/icons-material/Tour';\r\nimport ModeIcon from '@mui/icons-material/Mode';\r\n// assets\r\nimport { IconEdit } from '@tabler/icons';\r\nimport TipsAndUpdatesIcon from '@mui/icons-material/TipsAndUpdates';\r\nimport PinDropTwoToneIcon from '@mui/icons-material/PinDropTwoTone';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport moment from 'moment';\r\n// progress\r\nfunction LinearProgressWithLabel({ value, ...other }) {\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Box sx={{ width: '100%', mr: 1 }}>\r\n                <LinearProgress {...other} />\r\n            </Box>\r\n            <Box sx={{ minWidth: 35 }}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(value)}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n    value: PropTypes.number\r\n};\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Product Name', ':', 'Watch'),\r\n    createData('Status', ':', 'status'),\r\n    createData('Description', ':', ' Delivery Dashboard '),\r\n    createData('Price', ':', '12345'),\r\n    createData('Mint Type', ':', '+0 123456789 '),\r\n    createData('Brand', ':', 'Joker'),\r\n    createData('Token URL', ':', 'http://example.com')\r\n];\r\n\r\n// ==============================|| DeliveryDashboard ||============================== //\r\n\r\nconst DeliveryDashboard = ({ productList }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Grid item lg={12} md={12} xs={12}>\r\n            <Grid container direction=\"column\" spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <SubCard \r\n                    className='tableShadow'\r\n                    title=\"Delivery Dashboard\">\r\n                        <Grid container direction=\"column\" spacing={2}>\r\n                            <Grid container-fluid spacing={gridSpacing} sx={{ margin: '15px' }}>\r\n                            {productList?.length > 0 ?(\r\n                                <Grid item xs={12}>\r\n                                    {productList?.length > 0 &&\r\n                                        productList?.map((row) => (\r\n                                            <>\r\n                                            <Grid container justifyContent=\"center\" spacing={gridSpacing} \r\n                                            sx={{ textAlign: 'center', marginBottom:'20px' }}>\r\n                                                <Grid item md={1} sm={12}></Grid>\r\n\r\n                                                        <Grid item md={4} lg={4} className=\"Productdetails\" \r\n                                                        sx={{ height: 'auto' }}>\r\n                                                            <SubCard  className='tableShadow'> \r\n                                                                <img\r\n                                                                    src={row?.Nft.asset}\r\n                                                                    alt=\"Statement Image\"\r\n                                                                    className=\"deliveryimageSize\"\r\n                                                                />\r\n                                                            </SubCard>{' '}\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item md={6} sm={12} sx={{ height: 'auto' }}>\r\n                                                            <SubCard  className='tableShadow'>\r\n                                                                <TableContainer sx={{}}>\r\n                                                                    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                                                        <ListItemButton>\r\n                                                                            <ListItemIcon>\r\n                                                                                <PersonIcon sx={{ fontSize: '1.3rem' }} />\r\n                                                                            </ListItemIcon>\r\n                                                                            <ListItemText\r\n                                                                                primary={<Typography variant=\"subtitle1\">Name</Typography>}\r\n                                                                            />\r\n                                                                            <ListItemSecondaryAction>\r\n                                                                                <Typography\r\n                                                                                    sx={{  color:theme.palette.mode === 'dark' ? '#FFFFFF' : 'black' ,  textTransform: 'capitalize' }}\r\n                                                                                    variant=\"subtitle1\"\r\n                                                                                    align=\"right\"\r\n                                                                                >\r\n                                                                                    {row?.Nft.name}\r\n                                                                                </Typography>\r\n                                                                            </ListItemSecondaryAction>\r\n                                                                        </ListItemButton>\r\n                                                                        <Divider />\r\n                                                                 \r\n                                                                        <ListItemButton>\r\n                                                                            <ListItemIcon>\r\n                                                                                <DescriptionIcon sx={{ fontSize: '1.3rem' }} />\r\n                                                                            </ListItemIcon>\r\n                                                                            <ListItemText\r\n                                                                                primary={\r\n                                                                                    <Typography variant=\"subtitle1\">Description</Typography>\r\n                                                                                }\r\n                                                                            />\r\n                                                                            <ListItemSecondaryAction>\r\n                                                                                <Typography\r\n                                                                                    sx={{ color: '#9e9e9e', textTransform: 'capitalize' }}\r\n                                                                                    variant=\"subtitle1\"\r\n                                                                                    align=\"right\"\r\n                                                                                >\r\n                                                                                    {row?.Nft.description}\r\n                                                                                </Typography>\r\n                                                                            </ListItemSecondaryAction>\r\n                                                                        </ListItemButton>\r\n                                                                        <Divider />\r\n                                                                        <ListItemButton>\r\n                                                                            <ListItemIcon>\r\n                                                                                <TourIcon sx={{ fontSize: '1.3rem' }} />\r\n                                                                            </ListItemIcon>\r\n                                                                            <ListItemText\r\n                                                                                primary={\r\n                                                                                    <Typography variant=\"subtitle1\">Status</Typography>\r\n                                                                                }\r\n                                                                            />\r\n                                                                            <ListItemSecondaryAction>\r\n                                                                                <Typography\r\n                                                                                    color={\r\n                                                                                        row?.status == 'Delivered'\r\n                                                                                            ? 'Green'\r\n                                                                                            : row?.status == 'pending'\r\n                                                                                            ? 'Blue'\r\n                                                                                            : 'Orange'\r\n                                                                                    }\r\n                                                                                    variant=\"subtitle1\"\r\n                                                                                    align=\"right\"\r\n                                                                                >\r\n                                                                                    {row?.status}\r\n                                                                                </Typography>\r\n                                                                            </ListItemSecondaryAction>\r\n                                                                        </ListItemButton>\r\n                                                                        <Divider />\r\n                                                                        <ListItemButton>\r\n                                                                            <ListItemIcon>\r\n                                                                                <MonetizationOnIcon sx={{ fontSize: '1.3rem' }} />\r\n                                                                            </ListItemIcon>\r\n                                                                            <ListItemText\r\n                                                                                primary={<Typography variant=\"subtitle1\">Price</Typography>}\r\n                                                                            />\r\n                                                                            <ListItemSecondaryAction>\r\n                                                                                <Typography\r\n                                                                                    sx={{ color: 'Orange' }}\r\n                                                                                    variant=\"subtitle1\"\r\n                                                                                    align=\"right\"\r\n                                                                                >\r\n                                                                                    {row?.Nft.price}\r\n                                                                                </Typography>\r\n                                                                            </ListItemSecondaryAction>\r\n                                                                        </ListItemButton>\r\n                                                                    </List>\r\n                                                                </TableContainer>\r\n                                                            </SubCard>\r\n                                                        </Grid>\r\n                                                        <Grid item md={1} sm={12}></Grid>\r\n                                                    </Grid>\r\n                                                </>\r\n                                            ))}\r\n                                    </Grid>\r\n                                ) : (\r\n                                    <Grid item xs={12}>\r\n                                        <Typography>No data available</Typography>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\nexport default DeliveryDashboard;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid } from '@mui/material';\r\nimport { useTheme } from '@mui/styles';\r\nimport DeliveryDashboard from './component/DeliveryDashboard';\r\n\r\nimport { getAllProducts } from 'redux/deliveryDashboard/actions';\r\n\r\nconst DeliverD = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector((state) => state.delivery.productList);\r\n    const user = useSelector((state) => state.auth.user);\r\n    useEffect(() => {\r\n        dispatch(getAllProducts({ walletAddress: user?.walletAddress }));\r\n    }, []);\r\n    return (\r\n        <Grid\r\n            item\r\n            md={11}\r\n            lg={11}\r\n            xs={12}\r\n            style={{\r\n                marginTop: '15px',\r\n                maxWidth: '90%',\r\n\r\n                background: 'tranparent',\r\n                color: theme.palette.mode === 'dark' ? 'white' : '#404040'\r\n            }}\r\n        >\r\n            <DeliveryDashboard productList={productList} />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default DeliverD;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// ==============================|| CUSTOM SUB CARD ||============================== //\r\n\r\nconst SubCard = forwardRef(({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, ...others }, ref) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Card\r\n            ref={ref}\r\n            sx={{\r\n                border: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.primary.light,\r\n                ':hover': {\r\n                    boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                },\r\n                ...sx\r\n            }}\r\n            {...others}\r\n        >\r\n            {/* card header and action */}\r\n            {!darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />}\r\n            {darkTitle && title && <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />}\r\n\r\n            {/* content & header divider */}\r\n            {title && (\r\n                <Divider\r\n                    sx={{\r\n                        opacity: 1,\r\n                        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.primary.light\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* card content */}\r\n            {content && (\r\n                <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\r\n                    {children}\r\n                </CardContent>\r\n            )}\r\n            {!content && children}\r\n        </Card>\r\n    );\r\n});\r\n\r\nSubCard.propTypes = {\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    sx: PropTypes.object,\r\n    contentSX: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n    content: true\r\n};\r\n\r\nexport default SubCard;\r\n"],"sourceRoot":""}