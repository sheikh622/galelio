{"version":3,"sources":["views/auth/signUp/component/SignUp.js","views/auth/signUp/index.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["SignUpForm","loginProp","others","theme","useTheme","dispatch","useDispatch","navigate","useNavigate","useState","checked","setChecked","showPassword","setShowPassword","showconfirmPassword","setShowconfirmPassword","walletAddress","setWalletAddress","handleConnect","window","ethereum","request","method","response","address","utils","getAddress","type","SNACKBAR_OPEN","open","message","variant","alertSeverity","console","log","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleMouseDownconfirmPassword","handleClickShowconfirmPassword","useEffect","setWallet","on","accounts","enableReinitialize","initialValues","firstName","lastName","email","password","confirmPassword","validationSchema","Yup","shape","required","max","matches","oneOf","onSubmit","values","setLoader","signup","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","InputLabel","sx","color","palette","mode","className","htmlFor","FormControl","typography","customInput","fullWidth","error","Boolean","TextField","placeholder","margin","value","name","onBlur","onChange","inputProps","FormHelperText","id","autoComplete","IconButton","onClick","onMouseDown","edge","size","Stack","direction","alignItems","justifyContent","spacing","FormControlLabel","control","Checkbox","target","label","Button","slice","submit","Box","mt","AnimateButton","disableElevation","disabled","SignUp","AuthWrapper","Grid","container","minHeight","background","Helmet","charSet","rel","item","md","lg","position","alignSelf","display","xs","BackgroundPattern1","AuthCardWrapper","sm","Typography","noWrap","component","marginTop","src","galileoWhite","alt","width","galileo","mb","Divider","Link","to","textDecoration","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","styled","backgroundColor","children","other","borderRadius","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/42.be2a7b43.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport \"@fontsource/source-sans-pro\";\r\nimport \"@fontsource/public-sans\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ethers, utils } from 'ethers';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack\r\n} from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { signup, setLoader } from '../../../../redux/auth/actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setWallet } from 'redux/auth/actions';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst SignUpForm = ({ loginProp, ...others }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [checked, setChecked] = useState(true);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showconfirmPassword, setShowconfirmPassword] = useState(false);\r\n    const [walletAddress, setWalletAddress] = useState('');\r\n    const [address, setAddress] = useState('');\r\n\r\n    const handleConnect = async () => {\r\n        const response = await window?.ethereum?.request({ method: 'eth_requestAccounts' });\r\n        if (response) {\r\n            if (!window.ethereum) {\r\n                dispatch({\r\n                    type: SNACKBAR_OPEN,\r\n                    open: true,\r\n                    message: 'No crypto wallet found. Please install it.',\r\n                    variant: 'alert',\r\n                    alertSeverity: 'info'\r\n                });\r\n                console.log('No crypto wallet found. Please install it.');\r\n                // toast.error('No crypto wallet found. Please install it.');\r\n            }\r\n\r\n            // else if (window?.ethereum?.networkVersion !== '5') {\r\n            //   console.log('window?.ethereum?.networkVersion !== 5', window?.ethereum?.networkVersion);\r\n            //     dispatch({\r\n            //         type: SNACKBAR_OPEN,\r\n            //         open: true,\r\n            //         message: 'Please change your Chain ID to Goerli',\r\n            //         variant: 'alert',\r\n            //         alertSeverity: 'info'\r\n            //     });\r\n            //     console.log('Please change your Chain ID to Goerli');\r\n            //     setWalletAddress()\r\n            // }\r\n            else {\r\n                const address = utils?.getAddress(response[0]);\r\n                setWalletAddress(address);\r\n                dispatch({\r\n                    type: SNACKBAR_OPEN,\r\n                    open: true,\r\n                    message: 'Success',\r\n                    variant: 'alert',\r\n                    alertSeverity: 'success'\r\n                });\r\n            }\r\n        } else {\r\n            console.log('No crypto wallet found. Please install it.');\r\n            // toast.error('No crypto wallet found. Please install it.');\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleMouseDownconfirmPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleClickShowconfirmPassword = () => {\r\n        setShowconfirmPassword(!showconfirmPassword);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setWallet(walletAddress));\r\n        handleConnect();\r\n    }, [walletAddress]);\r\n\r\n    if (window.ethereum) {\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            // Time to reload your interface with accounts[0]!\r\n            // setReload(true)\r\n            handleConnect();\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                    walletAddress: '',\r\n                    address: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    firstName: Yup.string().required('First Name is required!').max(42, 'First Name can not exceed 42 characters'),\r\n                    // .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Name'),\r\n                    lastName: Yup.string().required('Last Name is required!').max(42, 'Last Name can not exceed 42 characters'),\r\n                    // .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Name'),\r\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\r\n                    password: Yup.string()\r\n                        .max(255)\r\n                        .required('Password is required!')\r\n                        .matches(\r\n                            /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                            'Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character'\r\n                        ),\r\n                    confirmPassword: Yup.string().max(255).required('Confirm Password is required!'),\r\n                    confirmPassword: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\r\n                    address: Yup.string().max(255).required('Delivery address is required!')\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    if (walletAddress == '') {\r\n                        dispatch({\r\n                            type: SNACKBAR_OPEN,\r\n                            open: true,\r\n                            message: 'Please connect to your wallet',\r\n                            variant: 'alert',\r\n                            alertSeverity: 'info'\r\n                        });\r\n                    }\r\n                    await dispatch(setLoader(true));\r\n                    dispatch(\r\n                        signup({\r\n                            firstName: values.firstName,\r\n                            lastName: values.lastName,\r\n                            email: values.email,\r\n                            password: values.password,\r\n                            walletAddress: walletAddress,\r\n                            address: values.address,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\r\n                            First Name{' '}\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.firstName && errors.firstName)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"First Name\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"name\"\r\n                                value={values.firstName}\r\n                                name=\"firstName\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.firstName && errors.firstName && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                    {errors.firstName}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <InputLabel  sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\r\n                            Last Name{' '}\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.lastName && errors.lastName)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"Last Name\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"lastName\"\r\n                                value={values.lastName}\r\n                                name=\"lastName\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.lastName && errors.lastName && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                    {errors.lastName}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\r\n                            Email\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.email && errors.email)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"Email\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-password-login\">\r\n                            {' '}\r\n                            Password\r\n                        </InputLabel>\r\n                        <FormControl className=\"auth-formcontrol\" fullWidth error={Boolean(touched.password && errors.password)}>\r\n                            <TextField\r\n                                placeholder=\" Password\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                            <IconButton\r\n                                className=\"iconvisible\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                aria-label=\"toggle password visibility\"\r\n                                edge=\"end\"\r\n                                size=\"large\"\r\n                            >\r\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </FormControl>\r\n\r\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-password-login\">\r\n                            Confirm Password\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"Confirm Password\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                value={values.confirmPassword}\r\n                                name=\"confirmPassword\"\r\n                                type={showconfirmPassword ? 'text' : 'password'}\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n\r\n                            <IconButton\r\n                                className=\"iconvisible\"\r\n                                onClick={handleClickShowconfirmPassword}\r\n                                onMouseDown={handleMouseDownconfirmPassword}\r\n                                aria-label=\"toggle password visibility\"\r\n                                edge=\"end\"\r\n                                size=\"large\"\r\n                            >\r\n                                {showconfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                            {touched.confirmPassword && errors.confirmPassword && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.confirmPassword}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        {/* <div>* Password should be 8 characters long containing 1 Uppercase, 1 Numeric and 1 special character</div> */}\r\n                        <InputLabel sx={{  color: theme.palette.mode === 'dark' ? 'white' : '#404040'}} className=\"authFont\" htmlFor=\"outlined-adornment-email-login\">\r\n                            Delivery Address\r\n                        </InputLabel>\r\n                        <FormControl\r\n                            sx={{ ...theme.typography.customInput }}\r\n                            className=\"auth-formcontrol\"\r\n                            fullWidth\r\n                            error={Boolean(touched.address && errors.address)}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"Delivery Address\"\r\n                                className=\"textForm\"\r\n                                // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"address\"\r\n                                value={values.address}\r\n                                name=\"address\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                // helperText=\"Some important text\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.address && errors.address && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                    {errors.address}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"By checking you agree to our Terms and Conditions\"\r\n                            />\r\n                        </Stack>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                handleConnect();\r\n                            }}\r\n                        >\r\n                            {walletAddress ? walletAddress.slice(0, 5) + '...' + walletAddress.slice(38, 42) : 'Connect with wallet'}\r\n                        </Button>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    className=\"signbuttonMarket\"\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign up\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import { Link } from 'react-router-dom';\r\nimport '@fontsource/public-sans';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Box } from '@mui/material';\r\n\r\nimport galileo from 'assets/images/galileo.png';\r\nimport galileoWhite from 'assets/images/galileo-white.png';\r\n// project imports\r\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\r\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\r\nimport SignUpForm from './component/SignUp';\r\nimport {Helmet} from \"react-helmet\";\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\n\r\n// assets\r\n\r\n// styles\r\n\r\n// ================================|| AUTH1 - LOGIN ||================================ //\r\n\r\nconst SignUp = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ minHeight: '100vh', background: theme.palette.mode === 'dark' ? '#000' : '#fff' }}\r\n            >\r\n            <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title> Sign Up</title>\r\n            <link rel=\"canonical\" />\r\n        </Helmet>\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                        <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                        <Box sx={{ display: { xs: 'block', sm:'block', md: 'none', lg:'none' } }}>\r\n                        <Typography variant=\"h6\" noWrap component=\"div\"\r\n                         sx={{ marginTop: '5px', }}>\r\n                            {theme.palette.mode === 'dark' ? (\r\n                                <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\r\n                            ) : (\r\n                                <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\r\n                            )}\r\n                        </Typography>\r\n                    </Box>\r\n                        </Grid>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\r\n                                        Sign Up\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <SignUpForm />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                    <Typography component={Link} to=\"/login\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                        Already have an account?\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            borderRadius:'4px',\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth-pattern.png';\r\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '97%',\r\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n               \r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n               margin:'10px',\r\n              \r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n"],"sourceRoot":""}