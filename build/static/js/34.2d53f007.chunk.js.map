{"version":3,"sources":["../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","views/auth/emailVerifyBefore/Verify.js","views/auth/emailVerifyBefore/index.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"names":["getSwitchUtilityClass","slot","generateUtilityClass","switchClasses","generateUtilityClasses","_excluded","SwitchRoot","styled","name","overridesResolver","props","styles","ownerState","root","edge","capitalize","size","_extends","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","thumb","switchBase","checked","transform","SwitchSwitchBase","SwitchBase","input","color","theme","top","left","vars","palette","Switch","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","disabled","defaultDisabledColor","track","opacity","switchTrackDisabled","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","main","mainChannel","lighten","darken","SwitchTrack","borderRadius","onBackground","black","switchTrack","SwitchThumb","boxShadow","shadows","React","inProps","ref","useThemeProps","className","sx","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","clsx","children","type","checkedIcon","VerifyEmail","token","others","useTheme","user","useSelector","state","auth","loader","navigate","useNavigate","dispatch","useDispatch","useState","changeEmail","setChangeEmail","setChecked","showPassword","setShowPassword","showconfirmPassword","setShowconfirmPassword","seconds","setSeconds","refresh","setRefresh","walletAddress","setWalletAddress","handleConnect","window","ethereum","request","method","response","address","utils","getAddress","SNACKBAR_OPEN","open","message","variant","alertSeverity","console","log","useEffect","interval","setInterval","clearInterval","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleMouseDownconfirmPassword","handleClickShowconfirmPassword","setWallet","on","accounts","enableReinitialize","initialValues","firstName","lastName","email","password","confirmPassword","validationSchema","Yup","shape","required","max","matches","oneOf","onSubmit","values","setLoader","signup","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Grid","xs","Typography","mt","md","Box","AnimateButton","Button","fullWidth","onChange","e","target","ReEnterEmail","InputLabel","htmlFor","FormControl","typography","customInput","error","Boolean","TextField","placeholder","margin","value","onBlur","inputProps","FormHelperText","id","autoComplete","IconButton","onClick","onMouseDown","slice","submit","disableElevation","Verify","urlSearchParams","useMediaQuery","breakpoints","down","URLSearchParams","location","search","params","Object","fromEntries","entries","AuthWrapper","container","justifyContent","alignItems","minHeight","background","Helmet","charSet","item","lg","alignSelf","BackgroundPattern1","spacing","AuthCardWrapper","direction","sm","noWrap","component","marginTop","src","galileoWhite","alt","galileo","mb","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","SwitchBaseInput","cursor","autoFocus","checkedProp","defaultChecked","disabledProp","disableFocusRipple","inputRef","onFocus","readOnly","tabIndex","useControlled","controlled","setCheckedState","muiFormControl","useFormControl","hasLabelFor","centerRipple","focusRipple","role","undefined","nativeEvent","defaultPrevented","newChecked"],"mappings":"wNAEO,SAASA,EAAsBC,GACpC,OAAOC,YAAqB,YAAaD,EAC3C,CACA,IACeE,EADOC,YAAuB,YAAa,CAAC,OAAQ,YAAa,UAAW,aAAc,eAAgB,iBAAkB,YAAa,aAAc,UAAW,WAAY,QAAS,QAAS,U,OCHzMC,EAAY,CAAC,YAAa,QAAS,OAAQ,OAAQ,MAkCnDC,EAAaC,YAAO,OAAQ,CAChCC,KAAM,YACNP,KAAM,OACNQ,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMD,EAAWE,MAAQH,EAAO,OAAD,OAAQI,YAAWH,EAAWE,QAAUH,EAAO,OAAD,OAAQI,YAAWH,EAAWI,QAC5H,GARiBT,EAShB,kBACDK,EAAU,EAAVA,WAAU,OACNK,YAAS,CACbC,QAAS,cACTC,MAAO,GACPC,OAAQ,GACRC,SAAU,SACVC,QAAS,GACTC,UAAW,aACXC,SAAU,WACVC,WAAY,EACZC,OAAQ,EAERC,cAAe,SAEf,eAAgB,CACdC,YAAa,UAEM,UAApBhB,EAAWE,MAAoB,CAChCe,YAAa,GACQ,QAApBjB,EAAWE,MAAkB,CAC9BgB,aAAc,GACO,UAApBlB,EAAWI,OAAgB,GAC5BG,MAAO,GACPC,OAAQ,GACRE,QAAS,GAAC,2BACHnB,EAAc4B,OAAU,CAC7BZ,MAAO,GACPC,OAAQ,KACT,2BACMjB,EAAc6B,YAAU,aAC7BV,QAAS,GAAC,YACJnB,EAAc8B,SAAY,CAC9BC,UAAW,sBACZ,GAEH,IACIC,EAAmB5B,YAAO6B,IAAY,CAC1C5B,KAAM,YACNP,KAAM,aACNQ,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOqB,WAAY,4BAClB7B,EAAckC,OAAU1B,EAAO0B,OAChB,YAArBzB,EAAW0B,OAAuB3B,EAAO,QAAD,OAASI,YAAWH,EAAW0B,SAC5E,GAVuB/B,EAWtB,kBACDgC,EAAK,EAALA,MAAK,UAELf,SAAU,WACVgB,IAAK,EACLC,KAAM,EACNf,OAAQ,EAERY,MAAOC,EAAMG,KAAOH,EAAMG,KAAKC,QAAQC,OAAOC,aAAe,GAAH,OAA6B,UAAvBN,EAAMI,QAAQG,KAAmBP,EAAMI,QAAQI,OAAOC,MAAQT,EAAMI,QAAQM,KAAK,MACjJC,WAAYX,EAAMY,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAUd,EAAMY,YAAYE,SAASC,YACrC,0BACInD,EAAc8B,SAAY,CAC9BC,UAAW,qBACZ,0BACK/B,EAAcoD,UAAa,CAC/BjB,MAAOC,EAAMG,KAAOH,EAAMG,KAAKC,QAAQC,OAAOY,qBAAuB,GAAH,OAA6B,UAAvBjB,EAAMI,QAAQG,KAAmBP,EAAMI,QAAQM,KAAK,KAAOV,EAAMI,QAAQM,KAAK,QACvJ,0BACK9C,EAAc8B,QAAO,eAAO9B,EAAcsD,OAAU,CACxDC,QAAS,KACV,0BACKvD,EAAcoD,SAAQ,eAAOpD,EAAcsD,OAAU,CACzDC,QAASnB,EAAMG,KAAOH,EAAMG,KAAKgB,QAAQC,oBAAsB,GAAH,OAA6B,UAAvBpB,EAAMI,QAAQG,KAAmB,IAAO,MAC3G,2BACM3C,EAAckC,OAAU,CAC7BI,KAAM,QACNtB,MAAO,SACR,KACC,kBACFoB,EAAK,EAALA,MACA3B,EAAU,EAAVA,WAAU,OACNK,YAAS,CACb,UAAW,CACT2C,gBAAiBrB,EAAMG,KAAO,QAAH,OAAWH,EAAMG,KAAKC,QAAQkB,OAAOC,cAAa,cAAMvB,EAAMG,KAAKC,QAAQkB,OAAOE,aAAY,KAAMC,YAAMzB,EAAMI,QAAQkB,OAAOI,OAAQ1B,EAAMI,QAAQkB,OAAOE,cAEvL,uBAAwB,CACtBH,gBAAiB,iBAGC,YAArBhD,EAAW0B,QAAmB,+BACzBnC,EAAc8B,SAAO,aACzBK,OAAQC,EAAMG,MAAQH,GAAOI,QAAQ/B,EAAW0B,OAAO4B,KACvD,UAAW,CACTN,gBAAiBrB,EAAMG,KAAO,QAAH,OAAWH,EAAMG,KAAKC,QAAQ/B,EAAW0B,OAAO6B,YAAW,cAAM5B,EAAMG,KAAKC,QAAQkB,OAAOE,aAAY,KAAMC,YAAMzB,EAAMI,QAAQ/B,EAAW0B,OAAO4B,KAAM3B,EAAMI,QAAQkB,OAAOE,cACzM,uBAAwB,CACtBH,gBAAiB,iBAEpB,YACKzD,EAAcoD,UAAa,CAC/BjB,MAAOC,EAAMG,KAAOH,EAAMG,KAAKC,QAAQC,OAAO,GAAD,OAAIhC,EAAW0B,MAAK,kBAAmB,GAAH,OAA6B,UAAvBC,EAAMI,QAAQG,KAAmBsB,YAAQ7B,EAAMI,QAAQ/B,EAAW0B,OAAO4B,KAAM,KAAQG,YAAO9B,EAAMI,QAAQ/B,EAAW0B,OAAO4B,KAAM,SAC5N,0BAEG/D,EAAc8B,QAAO,eAAO9B,EAAcsD,OAAU,CACxDG,iBAAkBrB,EAAMG,MAAQH,GAAOI,QAAQ/B,EAAW0B,OAAO4B,OAClE,GACD,IACII,EAAc/D,YAAO,OAAQ,CACjCC,KAAM,YACNP,KAAM,QACNQ,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAO8C,KAAK,GAHhClD,EAIjB,gBACDgC,EAAK,EAALA,MAAK,MACA,CACLnB,OAAQ,OACRD,MAAO,OACPoD,aAAc,EACd7C,QAAS,EACTwB,WAAYX,EAAMY,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAUd,EAAMY,YAAYE,SAASC,WAEvCM,gBAAiBrB,EAAMG,KAAOH,EAAMG,KAAKC,QAAQI,OAAOyB,aAAe,GAAH,OAA6B,UAAvBjC,EAAMI,QAAQG,KAAmBP,EAAMI,QAAQI,OAAO0B,MAAQlC,EAAMI,QAAQI,OAAOC,OAC7JU,QAASnB,EAAMG,KAAOH,EAAMG,KAAKgB,QAAQgB,YAAc,GAAH,OAA6B,UAAvBnC,EAAMI,QAAQG,KAAmB,IAAO,IACnG,IACK6B,EAAcpE,YAAO,OAAQ,CACjCC,KAAM,YACNP,KAAM,QACNQ,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOoB,KAAK,GAHhCxB,EAIjB,gBACDgC,EAAK,EAALA,MAAK,MACA,CACLqC,WAAYrC,EAAMG,MAAQH,GAAOsC,QAAQ,GACzCjB,gBAAiB,eACjBzC,MAAO,GACPC,OAAQ,GACRmD,aAAc,MACf,IACK3B,EAAsBkC,cAAiB,SAAgBC,EAASC,GACpE,IAAMtE,EAAQuE,YAAc,CAC1BvE,MAAOqE,EACPvE,KAAM,cAGJ0E,EAKExE,EALFwE,UAAS,EAKPxE,EAJF4B,aAAK,IAAG,YAAS,IAIf5B,EAHFI,YAAI,IAAG,GAAK,IAGVJ,EAFFM,YAAI,IAAG,WAAQ,EACfmE,EACEzE,EADFyE,GAEFC,EAAQC,YAA8B3E,EAAOL,GACzCO,EAAaK,YAAS,CAAC,EAAGP,EAAO,CACrC4B,QACAxB,OACAE,SAEIsE,EApLkB,SAAA1E,GACxB,IACE0E,EAME1E,EANF0E,QACAxE,EAKEF,EALFE,KACAE,EAIEJ,EAJFI,KACAsB,EAGE1B,EAHF0B,MACAL,EAEErB,EAFFqB,QACAsB,EACE3C,EADF2C,SAEIgC,EAAQ,CACZ1E,KAAM,CAAC,OAAQC,GAAQ,OAAJ,OAAWC,YAAWD,IAAS,OAAF,OAASC,YAAWC,KACpEgB,WAAY,CAAC,aAAc,QAAF,OAAUjB,YAAWuB,IAAUL,GAAW,UAAWsB,GAAY,YAC1FxB,MAAO,CAAC,SACR0B,MAAO,CAAC,SACRpB,MAAO,CAAC,UAEJmD,EAAkBC,YAAeF,EAAOvF,EAAuBsF,GACrE,OAAOrE,YAAS,CAAC,EAAGqE,EAASE,EAC/B,CAkKkBE,CAAkB9E,GAC5B+E,EAAoBC,cAAKjB,EAAa,CAC1CO,UAAWI,EAAQvD,MACnBnB,WAAYA,IAEd,OAAoBiF,eAAMvF,EAAY,CACpC4E,UAAWY,YAAKR,EAAQzE,KAAMqE,GAC9BC,GAAIA,EACJvE,WAAYA,EACZmF,SAAU,CAAcH,cAAKzD,EAAkBlB,YAAS,CACtD+E,KAAM,WACNL,KAAMA,EACNM,YAAaN,EACbX,IAAKA,EACLpE,WAAYA,GACXwE,EAAO,CACRE,QAASrE,YAAS,CAAC,EAAGqE,EAAS,CAC7BzE,KAAMyE,EAAQtD,gBAEA4D,cAAKtB,EAAa,CAClCY,UAAWI,EAAQ7B,MACnB7C,WAAYA,MAGlB,IA6FegC,K,8ZC0MAsD,EAteK,SAAH,GAAW,EAALC,MAAwB,IAAD,EAAbC,EAAM,iBAC7B7D,EAAQ8D,cAGRC,GADSC,aAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKC,MAAM,IAC1CH,aAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKH,IAAI,KAE7CK,EAAWC,cACXC,EAAWC,cACjB,EAAsCC,oBAAS,GAAM,mBAA9CC,EAAW,KAAEC,EAAc,KAClC,EAA8BF,oBAAS,GAAM,mBAAtC9E,EAAO,KAAEiF,EAAU,KAE1B,EAAwCH,oBAAS,GAAM,mBAAhDI,EAAY,KAAEC,EAAe,KACpC,EAAsDL,oBAAS,GAAM,mBAA9DM,EAAmB,KAAEC,EAAsB,KAClD,EAA8BP,mBAAS,IAAG,oBAAnCQ,GAAO,MAAEC,GAAU,MAC1B,GAA8BT,oBAAS,GAAM,qBAAtCU,GAAO,MAAEC,GAAU,MAC1B,GAA0CX,mBAAS,IAAG,qBAA/CY,GAAa,MAAEC,GAAgB,MAChCC,GAAa,iDAAG,oHACW,QADX,EACKC,cAAM,OAAU,QAAV,EAAN,EAAQC,gBAAQ,WAAV,EAAN,EAAkBC,QAAQ,CAAEC,OAAQ,wBAAyB,KAAD,GAA7EC,EAAQ,QAELJ,OAAOC,UAyBFI,EAAe,OAALC,cAAK,IAALA,aAAK,EAALA,QAAOC,WAAWH,EAAS,IAC3CN,GAAiBO,GACjBtB,EAAS,CACLb,KAAMsC,IACNC,MAAM,EACNC,QAAS,UACTC,QAAS,QACTC,cAAe,cA/BnB7B,EAAS,CACLb,KAAMsC,IACNC,MAAM,EACNC,QAAS,6CACTC,QAAS,QACTC,cAAe,SAEnBC,QAAQC,IAAI,+CA4BhBD,QAAQC,IAAI,8CAEf,2CACJ,kBA1CkB,mCA2CnBC,qBAAU,WACN,IAAIC,EAAW,KAMf,OALIvB,GAAU,IACVuB,EAAWC,aAAY,WACnBvB,IAAW,SAACD,GAAO,OAAKA,EAAU,CAAC,GACvC,GAAG,MAEA,kBAAMyB,cAAcF,EAAU,CACzC,GAAG,CAACvB,KACJ,IAIM0B,GAA0B,WAC5B7B,GAAiBD,EACrB,EACM+B,GAA0B,SAACC,GAC7BA,EAAMC,gBACV,EACMC,GAAiC,SAACF,GACpCA,EAAMC,gBACV,EACME,GAAiC,WACnChC,GAAwBD,EAC5B,EAeA,OAbAwB,qBAAU,WACNhC,EAAS0C,YAAU5B,KACnBE,IACJ,GAAG,CAACF,KAEAG,OAAOC,UACPD,OAAOC,SAASyB,GAAG,mBAAmB,SAAUC,GAG5C5B,IACJ,IAIA,mCACI,cAAC,IAAM,CACH6B,oBAAkB,EAClBC,cAAe,CACXC,UAAe,OAAJtD,QAAI,IAAJA,KAAMsD,UAAgB,OAAJtD,QAAI,IAAJA,OAAI,EAAJA,EAAMsD,UAAY,GAC/CC,SAAc,OAAJvD,QAAI,IAAJA,KAAMuD,SAAe,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMuD,SAAW,GAC5CC,MAAW,OAAJxD,QAAI,IAAJA,KAAMwD,MAAY,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,MAAQ,GACnCC,SAAU,GACVC,gBAAiB,GACjBrC,cAAmB,OAAJrB,QAAI,IAAJA,KAAMwD,MAAY,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,cAAgB,GACnDQ,QAAa,OAAJ7B,QAAI,IAAJA,KAAM6B,QAAc,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,QAAU,IAE7C8B,iBAAkBC,MAAaC,OAAK,GAChCP,UAAWM,MAAaE,SAAS,2BAA2BC,IAAI,GAAI,2CAEpER,SAAUK,MAAaE,SAAS,0BAA0BC,IAAI,GAAI,0CAElEP,MAAOI,MAAaJ,MAAM,qBAAqBO,IAAI,KAAKD,SAAS,sBACjEL,SAAUG,MACLG,IAAI,KACJD,SAAS,yBACTE,QACG,uEACA,uGAERN,gBAAiBE,MAAaG,IAAI,KAAKD,SAAS,kCAAgC,gCAC/DF,MAAaK,MAAM,CAACL,IAAQ,aAAc,sCAAoC,wBACtFA,MAAaG,IAAI,KAAKD,SAAS,kCAAgC,IAE5EI,SAAQ,iDAAE,WAAOC,GAAM,2EAWlB,OAVD9B,QAAQC,IAAI6B,EAAQ,UACpB/C,IAAW,GACU,IAAjBC,IACAd,EAAS,CACLb,KAAMsC,IACNC,MAAM,EACNC,QAAS,gCACTC,QAAS,QACTC,cAAe,SAEtB,SACK7B,EAAS6D,aAAU,IAAO,KAAD,EAC/B7D,EACI8D,YAAO,CACHf,UAAWa,EAAOb,UAClBC,SAAUY,EAAOZ,SACjBC,MAAOW,EAAOX,MACdC,SAAUU,EAAOV,SACjBpC,cAAeA,GACfQ,QAASsC,EAAOtC,QAChBxB,SAAUA,KAEhB,2CACL,mDAxBO,GAwBN,SAED,gBAAGiE,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAAYC,EAAY,EAAZA,aAAcC,EAAY,EAAZA,aAAcC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASR,EAAM,EAANA,OAAM,OAC7E,+CAAMS,YAAU,EAACV,SAAUO,GAAkB3E,GAAM,cAC/C,cAAC+E,EAAA,EAAI,CAACC,GAAI,GAAIjG,GAAI,CAAE7C,MAA8B,SAAvBC,EAAMI,QAAQG,KAAkB,UAAY,WAAY,SAC/E,cAACuI,EAAA,EAAU,CAACnG,UAAU,gBAAgBuD,QAAQ,KAAI,8FAI9C,IAaI,GAAXhB,GACG,eAAC0D,EAAA,EAAI,CAACG,GAAI,EAAGF,GAAI,GAAG,UAChB,cAACD,EAAA,EAAI,CAACC,GAAI,GAAIG,GAAI,GAAIpG,GAAI,CAAE7C,MAA8B,SAAvBC,EAAMI,QAAQG,KAAkB,UAAY,WAAY,SACvF,eAAC0I,EAAA,EAAG,WACC,IACD,cAACC,EAAA,EAAa,UACV,eAACC,EAAA,EAAM,CACHxG,UAAU,mBACVyG,WAAS,EACT3K,KAAK,QACLyH,QAAQ,WACRnG,MAAM,YAAW,oBAETiF,GAAO,cAK/B,cAAC4D,EAAA,EAAI,CAACC,GAAI,GAAIG,GAAI,IAClB,cAACJ,EAAA,EAAI,CAACC,GAAI,GAAIG,GAAI,GAAG,SACL,GAAXhE,IACG,eAACiE,EAAA,EAAG,WACA,eAACL,EAAA,EAAI,CAACG,GAAI,EAAGF,GAAI,GAAIG,GAAI,GAAG,UACxB,cAACG,EAAA,EAAM,CAACxG,UAAU,eAAeuD,QAAQ,OAAOtD,GAAI,CAAC,EAAE,0CAGvD,cAACvC,EAAA,EAAM,CACHX,QAASA,EACT2J,SAAU,SAACC,GAAC,OAtIvC,SAAC1C,GAAW,IAAD,EAC5BlC,GAAe,GACfC,EAAgB,OAALiC,QAAK,IAALA,GAAa,QAAR,EAALA,EAAO2C,cAAM,WAAR,EAAL,EAAe7J,QAC9B,CAmIiE8J,CAAaF,EAAE,OAKxB,GAAf7E,GAAkC,GAAX/E,GACpB,eAACuJ,EAAA,EAAG,WACA,eAACQ,EAAA,EAAU,CACP7G,GAAI,CAAE7C,MAA8B,SAAvBC,EAAMI,QAAQG,KAAkB,QAAU,WACvDoC,UAAU,WACV+G,QAAQ,iCAAgC,uBAE7B,OAEf,eAACC,EAAA,EAAW,CACR/G,GAAE,eAAO5C,EAAM4J,WAAWC,aAC1BlH,UAAU,mBACVyG,WAAS,EACTU,MAAOC,QAAQrB,EAAQrB,WAAagB,EAAOhB,WAAW,UAEtD,cAAC2C,EAAA,EAAS,CACNC,YAAY,aACZtH,UAAU,WAEVuD,QAAQ,WACRgE,OAAO,SACPrC,UAAQ,EACRuB,WAAS,EACT3F,KAAK,OACL0G,MAAOjC,EAAOb,UACdpJ,KAAK,YACLmM,OAAQ9B,EACRe,SAAUd,EACV8B,WAAY,CAAC,IAEhB3B,EAAQrB,WAAagB,EAAOhB,WACzB,cAACiD,EAAA,EAAc,CAACR,OAAK,EAACS,GAAG,yCAAwC,SAC5DlC,EAAOhB,eAIpB,eAACoC,EAAA,EAAU,CACP7G,GAAI,CAAE7C,MAA8B,SAAvBC,EAAMI,QAAQG,KAAkB,QAAU,WACvDoC,UAAU,WACV+G,QAAQ,iCAAgC,sBAE9B,OAEd,eAACC,EAAA,EAAW,CACR/G,GAAE,eAAO5C,EAAM4J,WAAWC,aAC1BlH,UAAU,mBACVyG,WAAS,EACTU,MAAOC,QAAQrB,EAAQpB,UAAYe,EAAOf,UAAU,UAEpD,cAAC0C,EAAA,EAAS,CACNC,YAAY,YACZtH,UAAU,WAEVuD,QAAQ,WACRgE,OAAO,SACPrC,UAAQ,EACRuB,WAAS,EACT3F,KAAK,WACL0G,MAAOjC,EAAOZ,SACdrJ,KAAK,WACLmM,OAAQ9B,EACRe,SAAUd,EACV8B,WAAY,CAAC,IAEhB3B,EAAQpB,UAAYe,EAAOf,UACxB,cAACgD,EAAA,EAAc,CAACR,OAAK,EAACS,GAAG,yCAAwC,SAC5DlC,EAAOf,cAIpB,cAACmC,EAAA,EAAU,CACP7G,GAAI,CAAE7C,MAA8B,SAAvBC,EAAMI,QAAQG,KAAkB,QAAU,WACvDoC,UAAU,WACV+G,QAAQ,iCAAgC,mBAG9B,IACd,eAACC,EAAA,EAAW,CACR/G,GAAE,eAAO5C,EAAM4J,WAAWC,aAC1BlH,UAAU,mBACVyG,WAAS,EACTU,MAAOC,QAAQrB,EAAQnB,OAASc,EAAOd,OAAO,UAE9C,cAACyC,EAAA,EAAS,CACNC,YAAY,QACZtH,UAAU,WAEVuD,QAAQ,WACRgE,OAAO,SACPrC,UAAQ,EACRuB,WAAS,EACT3F,KAAK,QACL0G,MAAOjC,EAAOX,MACdtJ,KAAK,QACLuM,aAAa,gBACbJ,OAAQ9B,EACRe,SAAUd,EACV8B,WAAY,CAAC,IAEhB3B,EAAQnB,OAASc,EAAOd,OACrB,cAAC+C,EAAA,EAAc,CAACR,OAAK,EAACS,GAAG,0CAAyC,SAC7DlC,EAAOd,WAIpB,eAACkC,EAAA,EAAU,CACP7G,GAAI,CAAE7C,MAA8B,SAAvBC,EAAMI,QAAQG,KAAkB,QAAU,WACvDoC,UAAU,WACV+G,QAAQ,oCAAmC,UAE1C,IAAG,cAGR,eAACC,EAAA,EAAW,CACRhH,UAAU,mBACVyG,WAAS,EACTU,MAAOC,QAAQrB,EAAQlB,UAAYa,EAAOb,UAAU,UAEpD,cAACwC,EAAA,EAAS,CACNC,YAAY,WACZtH,UAAU,WAEVuD,QAAQ,WACRgE,OAAO,SACPrC,UAAQ,EACRuB,WAAS,EACTnL,KAAK,WACLwF,KAAMmB,EAAe,OAAS,WAC9B2F,GAAG,WACHC,aAAa,mBACbJ,OAAQ9B,EACRe,SAAUd,EACV8B,WAAY,CAAC,IAEhB3B,EAAQlB,UAAYa,EAAOb,UACxB,cAAC8C,EAAA,EAAc,CAACR,OAAK,EAACS,GAAG,6CAA4C,SAChElC,EAAOb,WAGhB,cAACiD,EAAA,EAAU,CACP9H,UAAU,cACV+H,QAAShE,GACTiE,YAAahE,GACb,aAAW,6BACXpI,KAAK,MACLE,KAAK,QAAO,SAEXmG,EAAe,cAAC,IAAU,IAAM,cAAC,IAAa,SAGvD,cAAC6E,EAAA,EAAU,CACP7G,GAAI,CAAE7C,MAA8B,SAAvBC,EAAMI,QAAQG,KAAkB,QAAU,WACvDoC,UAAU,WACV+G,QAAQ,oCAAmC,8BAI/C,eAACC,EAAA,EAAW,CACRhH,UAAU,mBACVyG,WAAS,EACTU,MAAOC,QAAQrB,EAAQjB,iBAAmBY,EAAOZ,iBAAiB,UAElE,cAACuC,EAAA,EAAS,CACNC,YAAY,mBACZtH,UAAU,WAEVuD,QAAQ,WACRgE,OAAO,SACPrC,UAAQ,EACRuB,WAAS,EACTe,MAAOjC,EAAOT,gBACdxJ,KAAK,kBACLwF,KAAMqB,EAAsB,OAAS,WACrCyF,GAAG,WACHC,aAAa,mBACbJ,OAAQ9B,EACRe,SAAUd,EACV8B,WAAY,CAAC,IAGjB,cAACI,EAAA,EAAU,CACP9H,UAAU,cACV+H,QAAS3D,GACT4D,YAAa7D,GACb,aAAW,6BACXvI,KAAK,MACLE,KAAK,QAAO,SAEXqG,EAAsB,cAAC,IAAU,IAAM,cAAC,IAAa,MAEzD4D,EAAQjB,iBAAmBY,EAAOZ,iBAC/B,cAAC6C,EAAA,EAAc,CAACR,OAAK,EAACS,GAAG,6CAA4C,SAChElC,EAAOZ,qBAKpB,cAACgC,EAAA,EAAU,CACP7G,GAAI,CAAE7C,MAA8B,SAAvBC,EAAMI,QAAQG,KAAkB,QAAU,WACvDoC,UAAU,WACV+G,QAAQ,iCAAgC,8BAI5C,eAACC,EAAA,EAAW,CACR/G,GAAE,eAAO5C,EAAM4J,WAAWC,aAC1BlH,UAAU,mBACVyG,WAAS,EACTU,MAAOC,QAAQrB,EAAQ9C,SAAWyC,EAAOzC,SAAS,UAElD,cAACoE,EAAA,EAAS,CACNC,YAAY,mBACZtH,UAAU,WAEVuD,QAAQ,WACRgE,OAAO,SACPrC,UAAQ,EACRuB,WAAS,EACT3F,KAAK,UACL0G,MAAOjC,EAAOtC,QACd3H,KAAK,UACLmM,OAAQ9B,EACRe,SAAUd,EAEV8B,WAAY,CAAC,IAEhB3B,EAAQ9C,SAAWyC,EAAOzC,SACvB,cAAC0E,EAAA,EAAc,CAACR,OAAK,EAACS,GAAG,yCAAwC,SAC5DlC,EAAOzC,aAIpB,cAACuD,EAAA,EAAM,CACHjD,QAAQ,YACRwE,QAAS,WACLpF,IACJ,EAAE,SAEDF,GACKA,GAAcwF,MAAM,EAAG,GAAK,MAAQxF,GAAcwF,MAAM,GAAI,IAC5D,wBAETvC,EAAOwC,QACJ,cAAC5B,EAAA,EAAG,CAACrG,GAAI,CAAEmG,GAAI,GAAI,SACf,cAACuB,EAAA,EAAc,CAACR,OAAK,WAAEzB,EAAOwC,WAGtC,cAAC5B,EAAA,EAAG,CAACrG,GAAI,CAAEmG,GAAI,GAAI,SACf,cAACG,EAAA,EAAa,UACV,cAACC,EAAA,EAAM,CACHxG,UAAU,mBACVmI,kBAAgB,EAChB9J,SAAUyH,EACVW,WAAS,EACT3K,KAAK,QACLgF,KAAK,SACLyC,QAAQ,YACRnG,MAAM,YAAW,qCAarD,MAED,KAK3B,ECrbegL,UA7DA,WACX,IAAM/K,EAAQ8D,cAERkH,GADcC,YAAcjL,EAAMkL,YAAYC,KAAK,OACjC,IAAIC,gBAAgB7F,OAAO8F,SAASC,SACtDC,EAASC,OAAOC,YAAYT,EAAgBU,WAElD,OACI,cAACC,EAAA,EAAY,UACT,eAAC/C,EAAA,EAAI,CACDgD,WAAS,EACTC,eAAe,gBACfC,WAAW,SACXlJ,GAAI,CAAEmJ,UAAW,QAASC,WAAmC,SAAvBhM,EAAMI,QAAQG,KAAkB,OAAS,QAAS,UAExF,eAAC0L,EAAA,EAAM,WACH,sBAAMC,QAAQ,UACd,6DAEJ,cAACtD,EAAA,EAAI,CAACuD,MAAI,EAACnD,GAAI,EAAGoD,GAAI,EAAGxJ,GAAI,CAAE3D,SAAU,WAAYoN,UAAW,UAAW1N,QAAS,CAAEkK,GAAI,OAAQG,GAAI,UAAY,SAC9G,cAACsD,EAAA,EAAkB,UACf,cAAC1D,EAAA,EAAI,CAACuD,MAAI,EAACP,WAAS,EAACE,WAAW,WAAWD,eAAe,SAASU,QAAS,EAAE,SAC1E,cAAC3D,EAAA,EAAI,CAACuD,MAAI,EAACtD,GAAI,GAAG,SACd,iCAKhB,cAACD,EAAA,EAAI,CAACuD,MAAI,EAACP,WAAS,EAACC,eAAe,SAAS7C,GAAI,EAAGoD,GAAI,EAAE,SACtD,eAACI,EAAA,EAAe,WACZ,eAAC5D,EAAA,EAAI,CAACgD,WAAS,EAACa,UAAU,SAASZ,eAAe,SAASU,QAAS,EAAE,UAClE,cAAC3D,EAAA,EAAI,CAACuD,MAAI,EAACtD,GAAI,GAAI+C,WAAS,EAACE,WAAW,SAASD,eAAe,SAAQ,SACpE,cAAC5C,EAAA,EAAG,CAACrG,GAAI,CAAEjE,QAAS,CAAEkK,GAAI,QAAS6D,GAAI,QAAS1D,GAAI,OAAQoD,GAAI,SAAW,SACvE,cAACtD,EAAA,EAAU,CAAC5C,QAAQ,KAAKyG,QAAM,EAACC,UAAU,MAAMhK,GAAI,CAAEiK,UAAW,OAAQ,SAC7C,SAAvB7M,EAAMI,QAAQG,KACX,qBAAKuM,IAAKC,IAAcC,IAAI,qBAAqBpO,MAAM,QAEvD,qBAAKkO,IAAKG,IAASD,IAAI,oBAAoBpO,MAAM,cAKjE,cAACgK,EAAA,EAAI,CAACuD,MAAI,EAACtD,GAAI,GAAI+C,WAAS,EAACE,WAAW,SAASD,eAAe,SAAQ,SACpE,cAAC5C,EAAA,EAAG,CAACrG,GAAI,CAAEsK,GAAI,GAAI,SACf,eAACpE,EAAA,EAAU,CAACnG,UAAU,eAAeuD,QAAQ,YAAW,+BACjC,cAKnC,cAAC0C,EAAA,EAAI,CAACgD,WAAS,EAACW,QAAS,EAAGV,eAAe,SAAQ,SAC/C,cAACjD,EAAA,EAAI,CAACuD,MAAI,EAACtD,GAAI,GAAG,SACd,cAAC,EAAW,CAAEjF,MAAO2H,EAAO3H,qBAQ5D,C,mCCzEA,IAAIuJ,EAAyBC,EAAQ,IACrC5B,OAAO6B,eAAeC,EAAS,aAAc,CAC3CnD,OAAO,IAETmD,EAAQC,aAAU,EAClB,IAAIC,EAAiBL,EAAuBC,EAAQ,KAChDK,EAAcL,EAAQ,GACtBM,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,sNACD,cACJN,EAAQC,QAAUG,C,mCCVlB,IAAIP,EAAyBC,EAAQ,IACrC5B,OAAO6B,eAAeC,EAAS,aAAc,CAC3CnD,OAAO,IAETmD,EAAQC,aAAU,EAClB,IAAIC,EAAiBL,EAAuBC,EAAQ,KAChDK,EAAcL,EAAQ,GACtBM,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,8fACD,iBACJN,EAAQC,QAAUG,C,mCCZlB,YAKM/B,EAAc3N,YAAO,MAAPA,EAAc,YAAQ,MAAQ,CAC9CqD,iBADsC,EAALrB,MACVI,QAAQG,KAAkB,QACjDwL,UAAW,QACd,IAEcJ,K,gGCsBAa,IAtBS,SAAH,OAAMhJ,EAAQ,EAARA,SAAaX,EAAK,wBACzC,cAAC,IAAQ,yBACLD,GAAI,CACAZ,aAAa,MACb6L,SAAU,CAAEhF,GAAI,IAAKuD,GAAI,KACzBlC,OAAQ,CAAErB,GAAI,IAAKG,GAAI,GACvB,QAAS,CACL8E,SAAU,EACVC,UAAW,QAGnBC,SAAS,GACLnL,GAAK,aAET,cAAC,IAAG,CAACD,GAAI,CAAEqL,EAAG,CAAEpF,GAAI,EAAG6D,GAAI,EAAGwB,GAAI,IAAM,SAAE1K,MACnC,C,wDCzBA,MAA0B,yC,OCyC1B8I,IA7BY,SAAH,GAAsB,IAAhB9I,EAAQ,EAARA,SACpBxD,EAAQ8D,cACd,OACI,cAACmF,EAAA,EAAG,CACA2D,UAAU,OACVhK,GAAI,CACAjE,QAAS,OACToN,UAAW,MACXoC,SAASnO,EAAMI,QAAQG,KAAkB,QACzC6N,iBAAiBpO,EAAMI,QAAQG,KAAe,cAAU8N,EAAe,MAEvEC,mBAAoB,SACpBC,iBAAkB,YAClBC,eAAgB,QAChB1P,SAAU,SACXoL,OAAO,OAEN/I,QAAgC,SAAvBnB,EAAMI,QAAQG,KAAkB,IAAO,IAClD,SAEDiD,GAGb,C,0OCjCO,SAASiL,EAA0B/Q,GACxC,OAAOC,YAAqB,oBAAqBD,EACnD,CAC0BG,YAAuB,oBAAqB,CAAC,OAAQ,UAAW,WAAY,QAAS,YAAa,YAA5H,I,OCHMC,EAAY,CAAC,YAAa,UAAW,cAAe,YAAa,iBAAkB,WAAY,qBAAsB,OAAQ,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,SA2B1P4Q,EAAiB1Q,YAAO2Q,IAAP3Q,EAAmB,gBACxCK,EAAU,EAAVA,WAAU,OACNK,YAAS,CACbK,QAAS,EACTiD,aAAc,OACO,UAApB3D,EAAWE,MAAoB,CAChCe,WAAgC,UAApBjB,EAAWI,MAAoB,GAAK,IAC3B,QAApBJ,EAAWE,MAAkB,CAC9BgB,YAAiC,UAApBlB,EAAWI,MAAoB,GAAK,IACjD,IACImQ,EAAkB5Q,YAAO,QAAPA,CAAgB,CACtC6Q,OAAQ,UACR5P,SAAU,WACVkC,QAAS,EACTvC,MAAO,OACPC,OAAQ,OACRoB,IAAK,EACLC,KAAM,EACNgK,OAAQ,EACRnL,QAAS,EACTI,OAAQ,IAMJU,EAA0B0C,cAAiB,SAAoBpE,EAAOsE,GAC1E,IACIqM,EAqBE3Q,EArBF2Q,UACSC,EAoBP5Q,EApBFuB,QACAgE,EAmBEvF,EAnBFuF,YACAf,EAkBExE,EAlBFwE,UACAqM,EAiBE7Q,EAjBF6Q,eACUC,EAgBR9Q,EAhBF6C,SAAQ,EAgBN7C,EAfF+Q,0BAAkB,IAAG,GAAK,IAexB/Q,EAdFI,YAAI,IAAG,GAAK,EACZ6E,EAaEjF,EAbFiF,KACAmH,EAYEpM,EAZFoM,GACAF,EAWElM,EAXFkM,WACA8E,EAUEhR,EAVFgR,SACAlR,EASEE,EATFF,KACAmM,EAQEjM,EARFiM,OACAf,EAOElL,EAPFkL,SACA+F,EAMEjR,EANFiR,QACAC,EAKElR,EALFkR,SACAxH,EAIE1J,EAJF0J,SACAyH,EAGEnR,EAHFmR,SACA7L,EAEEtF,EAFFsF,KACA0G,EACEhM,EADFgM,MAEFtH,EAAQC,YAA8B3E,EAAOL,GAC/C,EAAmCyR,YAAc,CAC/CC,WAAYT,EACZxB,QAASxD,QAAQiF,GACjB/Q,KAAM,aACNgG,MAAO,YACP,mBALKvE,EAAO,KAAE+P,EAAe,KAMzBC,EAAiBC,cA6BnB3O,EAAWiO,EACXS,GACsB,qBAAb1O,IACTA,EAAW0O,EAAe1O,UAG9B,IAAM4O,EAAuB,aAATnM,GAAgC,UAATA,EACrCpF,EAAaK,YAAS,CAAC,EAAGP,EAAO,CACrCuB,UACAsB,WACAkO,qBACA3Q,SAEIwE,EAhHkB,SAAA1E,GACxB,IACE0E,EAIE1E,EAJF0E,QACArD,EAGErB,EAHFqB,QACAsB,EAEE3C,EAFF2C,SACAzC,EACEF,EADFE,KAEIyE,EAAQ,CACZ1E,KAAM,CAAC,OAAQoB,GAAW,UAAWsB,GAAY,WAAYzC,GAAQ,OAAJ,OAAWC,YAAWD,KACvFuB,MAAO,CAAC,UAEV,OAAOoD,YAAeF,EAAOyL,EAA2B1L,EAC1D,CAoGkBI,CAAkB9E,GAClC,OAAoBiF,eAAMoL,EAAgBhQ,YAAS,CACjDkO,UAAW,OACXjK,UAAWY,YAAKR,EAAQzE,KAAMqE,GAC9BkN,cAAc,EACdC,aAAcZ,EACdlO,SAAUA,EACVsO,SAAU,KACVS,UAAMC,EACNZ,QAlDkB,SAAAxI,GACdwI,GACFA,EAAQxI,GAEN8I,GAAkBA,EAAeN,SACnCM,EAAeN,QAAQxI,EAE3B,EA4CEwD,OA3CiB,SAAAxD,GACbwD,GACFA,EAAOxD,GAEL8I,GAAkBA,EAAetF,QACnCsF,EAAetF,OAAOxD,EAE1B,EAqCEvI,WAAYA,EACZoE,IAAKA,GACJI,EAAO,CACRW,SAAU,CAAcH,cAAKuL,EAAiBlQ,YAAS,CACrDoQ,UAAWA,EACXpP,QAASqP,EACTC,eAAgBA,EAChBrM,UAAWI,EAAQjD,MACnBkB,SAAUA,EACVuJ,GAAIqF,GAAerF,EACnBtM,KAAMA,EACNoL,SA/CsB,SAAAzC,GAExB,IAAIA,EAAMqJ,YAAYC,iBAAtB,CAGA,IAAMC,EAAavJ,EAAM2C,OAAO7J,QAChC+P,EAAgBU,GACZ9G,GAEFA,EAASzC,EAAOuJ,EALlB,CAOF,EAqCId,SAAUA,EACV5M,IAAK0M,EACLtH,SAAUA,EACVxJ,WAAYA,EACZiR,SAAUA,EACV7L,KAAMA,GACI,aAATA,QAAiCuM,IAAV7F,EAAsB,CAAC,EAAI,CACnDA,SACCE,IAAc3K,EAAUgE,EAAcN,KAE7C,IA4GevD,K","file":"static/js/34.2d53f007.chunk.js","sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, InputLabel, IconButton, Typography, Grid } from '@mui/material';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { Switch } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { emailVerification } from 'redux/auth/actions';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// import { setLoader } from '../../../../redux/auth/actions';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport '@fontsource/source-sans-pro';\r\nimport '@fontsource/public-sans';\r\nimport { ethers, utils } from 'ethers';\r\nimport { signup, setLoader } from 'redux/auth/actions';\r\nimport { setWallet } from 'redux/auth/actions';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// ========================|| FIREBASE - FORGOT PASSWORD ||======================== //\r\n\r\nconst VerifyEmail = ({ token, ...others }) => {\r\n    const theme = useTheme();\r\n    // console.log(token, 'token=>');\r\n    const loader = useSelector((state) => state.auth.loader);\r\n    const user = useSelector((state) => state.auth.user);\r\n    // console.log(user, 'user===========>>');\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [changeEmail, setChangeEmail] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n    // const [checked, setChecked] = useState(true);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showconfirmPassword, setShowconfirmPassword] = useState(false);\r\n    const [seconds, setSeconds] = useState(60);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [walletAddress, setWalletAddress] = useState('');\r\n    const handleConnect = async () => {\r\n        const response = await window?.ethereum?.request({ method: 'eth_requestAccounts' });\r\n        if (response) {\r\n            if (!window.ethereum) {\r\n                dispatch({\r\n                    type: SNACKBAR_OPEN,\r\n                    open: true,\r\n                    message: 'No crypto wallet found. Please install it.',\r\n                    variant: 'alert',\r\n                    alertSeverity: 'info'\r\n                });\r\n                console.log('No crypto wallet found. Please install it.');\r\n                // toast.error('No crypto wallet found. Please install it.');\r\n            }\r\n\r\n            // else if (window?.ethereum?.networkVersion !== '5') {\r\n            //   console.log('window?.ethereum?.networkVersion !== 5', window?.ethereum?.networkVersion);\r\n            //     dispatch({\r\n            //         type: SNACKBAR_OPEN,\r\n            //         open: true,\r\n            //         message: 'Please change your Chain ID to Goerli',\r\n            //         variant: 'alert',\r\n            //         alertSeverity: 'info'\r\n            //     });\r\n            //     console.log('Please change your Chain ID to Goerli');\r\n            //     setWalletAddress()\r\n            // }\r\n            else {\r\n                const address = utils?.getAddress(response[0]);\r\n                setWalletAddress(address);\r\n                dispatch({\r\n                    type: SNACKBAR_OPEN,\r\n                    open: true,\r\n                    message: 'Success',\r\n                    variant: 'alert',\r\n                    alertSeverity: 'success'\r\n                });\r\n            }\r\n        } else {\r\n            console.log('No crypto wallet found. Please install it.');\r\n            // toast.error('No crypto wallet found. Please install it.');\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (seconds > 0) {\r\n            interval = setInterval(() => {\r\n                setSeconds((seconds) => seconds - 1);\r\n            }, 1000);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [seconds]);\r\n    const ReEnterEmail = (event) => {\r\n        setChangeEmail(true);\r\n        setChecked(event?.target?.checked);\r\n    };\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleMouseDownconfirmPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleClickShowconfirmPassword = () => {\r\n        setShowconfirmPassword(!showconfirmPassword);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setWallet(walletAddress));\r\n        handleConnect();\r\n    }, [walletAddress]);\r\n\r\n    if (window.ethereum) {\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            // Time to reload your interface with accounts[0]!\r\n            // setReload(true)\r\n            handleConnect();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    firstName: user?.firstName ? user?.firstName : '',\r\n                    lastName: user?.lastName ? user?.lastName : '',\r\n                    email: user?.email ? user?.email : '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                    walletAddress: user?.email ? user?.walletAddress : '',\r\n                    address: user?.address ? user?.address : ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    firstName: Yup.string().required('First Name is required!').max(42, 'First Name can not exceed 42 characters'),\r\n                    // .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Name'),\r\n                    lastName: Yup.string().required('Last Name is required!').max(42, 'Last Name can not exceed 42 characters'),\r\n                    // .matches(/^[-a-zA-Z0-9-()]+(\\s+[-a-zA-Z0-9-()]+)*$/, 'Invalid Name'),\r\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\r\n                    password: Yup.string()\r\n                        .max(255)\r\n                        .required('Password is required!')\r\n                        .matches(\r\n                            /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                            'Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character'\r\n                        ),\r\n                    confirmPassword: Yup.string().max(255).required('Confirm Password is required!'),\r\n                    confirmPassword: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\r\n                    address: Yup.string().max(255).required('Delivery address is required!')\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    console.log(values, 'values');\r\n                    setRefresh(true);\r\n                    if (walletAddress == '') {\r\n                        dispatch({\r\n                            type: SNACKBAR_OPEN,\r\n                            open: true,\r\n                            message: 'Please connect to your wallet',\r\n                            variant: 'alert',\r\n                            alertSeverity: 'info'\r\n                        });\r\n                    }\r\n                    await dispatch(setLoader(true));\r\n                    dispatch(\r\n                        signup({\r\n                            firstName: values.firstName,\r\n                            lastName: values.lastName,\r\n                            email: values.email,\r\n                            password: values.password,\r\n                            walletAddress: walletAddress,\r\n                            address: values.address,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <Grid xs={12} sx={{ color: theme.palette.mode === 'dark' ? '#CDCDCD' : '#6d6e72' }}>\r\n                            <Typography className=\"wallet-select\" variant=\"h3\">\r\n                            Please check your email account , the verification email has been sent to you.\r\n                                {/*   <b>{user.email}</b>{' '} */}\r\n                            </Typography>\r\n                        </Grid>{' '}\r\n                        {/*  <AnimateButton>\r\n                            <Button\r\n                                className=\"ReEnterEmail\"\r\n                                fullWidth\r\n                                onClick={ReEnterEmail}\r\n                                size=\"large\"\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                Re-Enter Email\r\n                            </Button>\r\n                        </AnimateButton> */}\r\n                        {refresh == false ? (\r\n                            <Grid mt={2} xs={12}>\r\n                                <Grid xs={12} md={12} sx={{ color: theme.palette.mode === 'dark' ? '#CDCDCD' : '#6d6e72' }}>\r\n                                    <Box>\r\n                                        {' '}\r\n                                        <AnimateButton>\r\n                                            <Button\r\n                                                className=\"signbuttonMarket\"\r\n                                                fullWidth\r\n                                                size=\"large\"\r\n                                                variant=\"outlined\"\r\n                                                color=\"secondary\"\r\n                                            >\r\n                                                Resend({seconds})\r\n                                            </Button>\r\n                                        </AnimateButton>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid xs={12} md={1}></Grid>\r\n                                <Grid xs={12} md={12}>\r\n                                    {seconds == 0 && (\r\n                                        <Box>\r\n                                            <Grid mt={1} xs={12} md={12}>\r\n                                                <Button className=\"ReEnterEmail\" variant=\"text\" sx={{}}>\r\n                                                    Re-Enter Signup information?\r\n                                                </Button>\r\n                                                <Switch\r\n                                                    checked={checked}\r\n                                                    onChange={(e) => ReEnterEmail(e)}\r\n\r\n                                                    // inputProps={{ 'aria-label': 'controlled' }}\r\n                                                />\r\n                                            </Grid>\r\n                                            {changeEmail == true && checked == true && (\r\n                                                <Box>\r\n                                                    <InputLabel\r\n                                                        sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                                                        className=\"authFont\"\r\n                                                        htmlFor=\"outlined-adornment-email-login\"\r\n                                                    >\r\n                                                        First Name{' '}\r\n                                                    </InputLabel>\r\n                                                    <FormControl\r\n                                                        sx={{ ...theme.typography.customInput }}\r\n                                                        className=\"auth-formcontrol\"\r\n                                                        fullWidth\r\n                                                        error={Boolean(touched.firstName && errors.firstName)}\r\n                                                    >\r\n                                                        <TextField\r\n                                                            placeholder=\"First Name\"\r\n                                                            className=\"textForm\"\r\n                                                            // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                                            variant=\"outlined\"\r\n                                                            margin=\"normal\"\r\n                                                            required\r\n                                                            fullWidth\r\n                                                            type=\"name\"\r\n                                                            value={values.firstName}\r\n                                                            name=\"firstName\"\r\n                                                            onBlur={handleBlur}\r\n                                                            onChange={handleChange}\r\n                                                            inputProps={{}}\r\n                                                        />\r\n                                                        {touched.firstName && errors.firstName && (\r\n                                                            <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                                                {errors.firstName}\r\n                                                            </FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                    <InputLabel\r\n                                                        sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                                                        className=\"authFont\"\r\n                                                        htmlFor=\"outlined-adornment-email-login\"\r\n                                                    >\r\n                                                        Last Name{' '}\r\n                                                    </InputLabel>\r\n                                                    <FormControl\r\n                                                        sx={{ ...theme.typography.customInput }}\r\n                                                        className=\"auth-formcontrol\"\r\n                                                        fullWidth\r\n                                                        error={Boolean(touched.lastName && errors.lastName)}\r\n                                                    >\r\n                                                        <TextField\r\n                                                            placeholder=\"Last Name\"\r\n                                                            className=\"textForm\"\r\n                                                            // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                                            variant=\"outlined\"\r\n                                                            margin=\"normal\"\r\n                                                            required\r\n                                                            fullWidth\r\n                                                            type=\"lastName\"\r\n                                                            value={values.lastName}\r\n                                                            name=\"lastName\"\r\n                                                            onBlur={handleBlur}\r\n                                                            onChange={handleChange}\r\n                                                            inputProps={{}}\r\n                                                        />\r\n                                                        {touched.lastName && errors.lastName && (\r\n                                                            <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                                                {errors.lastName}\r\n                                                            </FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                    <InputLabel\r\n                                                        sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                                                        className=\"authFont\"\r\n                                                        htmlFor=\"outlined-adornment-email-login\"\r\n                                                    >\r\n                                                        Email\r\n                                                    </InputLabel>{' '}\r\n                                                    <FormControl\r\n                                                        sx={{ ...theme.typography.customInput }}\r\n                                                        className=\"auth-formcontrol\"\r\n                                                        fullWidth\r\n                                                        error={Boolean(touched.email && errors.email)}\r\n                                                    >\r\n                                                        <TextField\r\n                                                            placeholder=\"email\"\r\n                                                            className=\"textForm\"\r\n                                                            // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                                            variant=\"outlined\"\r\n                                                            margin=\"normal\"\r\n                                                            required\r\n                                                            fullWidth\r\n                                                            type=\"email\"\r\n                                                            value={values.email}\r\n                                                            name=\"email\"\r\n                                                            autoComplete=\"current-email\"\r\n                                                            onBlur={handleBlur}\r\n                                                            onChange={handleChange}\r\n                                                            inputProps={{}}\r\n                                                        />\r\n                                                        {touched.email && errors.email && (\r\n                                                            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                                                {errors.email}\r\n                                                            </FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                    <InputLabel\r\n                                                        sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                                                        className=\"authFont\"\r\n                                                        htmlFor=\"outlined-adornment-password-login\"\r\n                                                    >\r\n                                                        {' '}\r\n                                                        Password\r\n                                                    </InputLabel>\r\n                                                    <FormControl\r\n                                                        className=\"auth-formcontrol\"\r\n                                                        fullWidth\r\n                                                        error={Boolean(touched.password && errors.password)}\r\n                                                    >\r\n                                                        <TextField\r\n                                                            placeholder=\"Password\"\r\n                                                            className=\"textForm\"\r\n                                                            // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                                            variant=\"outlined\"\r\n                                                            margin=\"normal\"\r\n                                                            required\r\n                                                            fullWidth\r\n                                                            name=\"password\"\r\n                                                            type={showPassword ? 'text' : 'password'}\r\n                                                            id=\"password\"\r\n                                                            autoComplete=\"current-password\"\r\n                                                            onBlur={handleBlur}\r\n                                                            onChange={handleChange}\r\n                                                            inputProps={{}}\r\n                                                        />\r\n                                                        {touched.password && errors.password && (\r\n                                                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                                                {errors.password}\r\n                                                            </FormHelperText>\r\n                                                        )}\r\n                                                        <IconButton\r\n                                                            className=\"iconvisible\"\r\n                                                            onClick={handleClickShowPassword}\r\n                                                            onMouseDown={handleMouseDownPassword}\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            edge=\"end\"\r\n                                                            size=\"large\"\r\n                                                        >\r\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                    </FormControl>\r\n                                                    <InputLabel\r\n                                                        sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                                                        className=\"authFont\"\r\n                                                        htmlFor=\"outlined-adornment-password-login\"\r\n                                                    >\r\n                                                        Confirm Password\r\n                                                    </InputLabel>\r\n                                                    <FormControl\r\n                                                        className=\"auth-formcontrol\"\r\n                                                        fullWidth\r\n                                                        error={Boolean(touched.confirmPassword && errors.confirmPassword)}\r\n                                                    >\r\n                                                        <TextField\r\n                                                            placeholder=\"Confirm Password\"\r\n                                                            className=\"textForm\"\r\n                                                            // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                                            variant=\"outlined\"\r\n                                                            margin=\"normal\"\r\n                                                            required\r\n                                                            fullWidth\r\n                                                            value={values.confirmPassword}\r\n                                                            name=\"confirmPassword\"\r\n                                                            type={showconfirmPassword ? 'text' : 'password'}\r\n                                                            id=\"password\"\r\n                                                            autoComplete=\"current-password\"\r\n                                                            onBlur={handleBlur}\r\n                                                            onChange={handleChange}\r\n                                                            inputProps={{}}\r\n                                                        />\r\n\r\n                                                        <IconButton\r\n                                                            className=\"iconvisible\"\r\n                                                            onClick={handleClickShowconfirmPassword}\r\n                                                            onMouseDown={handleMouseDownconfirmPassword}\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            edge=\"end\"\r\n                                                            size=\"large\"\r\n                                                        >\r\n                                                            {showconfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                        {touched.confirmPassword && errors.confirmPassword && (\r\n                                                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                                                {errors.confirmPassword}\r\n                                                            </FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                    {/* <div>* Password should be 8 characters long containing 1 Uppercase, 1 Numeric and 1 special character</div> */}\r\n                                                    <InputLabel\r\n                                                        sx={{ color: theme.palette.mode === 'dark' ? 'white' : '#404040' }}\r\n                                                        className=\"authFont\"\r\n                                                        htmlFor=\"outlined-adornment-email-login\"\r\n                                                    >\r\n                                                        Delivery Address\r\n                                                    </InputLabel>\r\n                                                    <FormControl\r\n                                                        sx={{ ...theme.typography.customInput }}\r\n                                                        className=\"auth-formcontrol\"\r\n                                                        fullWidth\r\n                                                        error={Boolean(touched.address && errors.address)}\r\n                                                    >\r\n                                                        <TextField\r\n                                                            placeholder=\"Delivery Address\"\r\n                                                            className=\"textForm\"\r\n                                                            // onChange={(event)=>handelAccount(\"password\",event)}\r\n                                                            variant=\"outlined\"\r\n                                                            margin=\"normal\"\r\n                                                            required\r\n                                                            fullWidth\r\n                                                            type=\"address\"\r\n                                                            value={values.address}\r\n                                                            name=\"address\"\r\n                                                            onBlur={handleBlur}\r\n                                                            onChange={handleChange}\r\n                                                            // helperText=\"Some important text\"\r\n                                                            inputProps={{}}\r\n                                                        />\r\n                                                        {touched.address && errors.address && (\r\n                                                            <FormHelperText error id=\"standard-weight-helper-text-name-login\">\r\n                                                                {errors.address}\r\n                                                            </FormHelperText>\r\n                                                        )}\r\n                                                    </FormControl>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        onClick={() => {\r\n                                                            handleConnect();\r\n                                                        }}\r\n                                                    >\r\n                                                        {walletAddress\r\n                                                            ? walletAddress.slice(0, 5) + '...' + walletAddress.slice(38, 42)\r\n                                                            : 'Connect with wallet'}\r\n                                                    </Button>\r\n                                                    {errors.submit && (\r\n                                                        <Box sx={{ mt: 3 }}>\r\n                                                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                                                        </Box>\r\n                                                    )}\r\n                                                    <Box sx={{ mt: 2 }}>\r\n                                                        <AnimateButton>\r\n                                                            <Button\r\n                                                                className=\"signbuttonMarket\"\r\n                                                                disableElevation\r\n                                                                disabled={isSubmitting}\r\n                                                                fullWidth\r\n                                                                size=\"large\"\r\n                                                                type=\"submit\"\r\n                                                                variant=\"contained\"\r\n                                                                color=\"secondary\"\r\n                                                            >\r\n                                                                Re-Enter\r\n                                                            </Button>\r\n                                                        </AnimateButton>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            )}\r\n                                        </Box>\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","import { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery, Box } from '@mui/material';\r\nimport '@fontsource/public-sans';\r\n\r\nimport galileo from 'assets/images/galileo.png';\r\nimport galileoWhite from 'assets/images/galileo-white.png';\r\n// project imports\r\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\r\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\r\nimport { Helmet } from 'react-helmet';\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\nimport AuthSlider from 'ui-component/cards/AuthSlider';\r\nimport VerifyEmail from './Verify';\r\nimport React from 'react';\r\n// import { FormattedMessage } from 'react-intl';\r\nconst Verify = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n    const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ minHeight: '100vh', background: theme.palette.mode === 'dark' ? '#000' : '#fff' }}\r\n            >\r\n                <Helmet>\r\n                    <meta charSet=\"utf-8\" />\r\n                    <title> Email  Verification </title>\r\n                </Helmet>\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7} >\r\n                    <AuthCardWrapper>\r\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ display: { xs: 'block', sm: 'block', md: 'none', lg: 'none' } }}>\r\n                                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{ marginTop: '5px' }}>\r\n                                        {theme.palette.mode === 'dark' ? (\r\n                                            <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\r\n                                        ) : (\r\n                                            <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\r\n                                        )}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ mb: 4 }}>\r\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\r\n                                        Email Verification{' '}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <VerifyEmail  token={params.token}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Verify;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            borderRadius:'4px',\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth-pattern.png';\r\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '97%',\r\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n               \r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n               margin:'10px',\r\n              \r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"sourceRoot":""}