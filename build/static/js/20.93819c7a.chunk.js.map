{"version":3,"sources":["views/auth/login/component/loginForm.js","views/auth/login/index.js","shared/component/AuthWrapper.js","shared/component/AuthCardWrapper.js","assets/images/auth-pattern.png","ui-component/cards/BackgroundPattern1.js"],"names":["jwt","require","LoginForm","loginProp","others","dispatch","useDispatch","navigate","useNavigate","theme","useTheme","useSelector","state","auth","loader","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","useEffect","setLoader","responseFacebook","data","email","first_name","last_name","axios","post","API_URL","then","response","loginSuccess","profileCompleted","socal","catch","error","toast","message","responseFacebookFailure","enableReinitialize","initialValues","password","validationSchema","Yup","shape","max","required","onSubmit","values","login","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","sx","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","name","onBlur","onChange","label","inputProps","FormHelperText","id","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Stack","direction","alignItems","justifyContent","spacing","Typography","variant","component","Link","to","textDecoration","color","palette","mode","submit","Box","mt","AnimateButton","Button","className","disableElevation","disabled","Grid","item","xs","container","md","width","sm","lg","margin","marginBottom","select_account","auto_select","onSuccess","decoded_data","decode","credential","googleAuthHandle","onError","startIcon","appId","fields","callback","onFailure","cssClass","textButton","Login","AuthWrapper","minHeight","background","alignSelf","display","BackgroundPattern1","AuthCardWrapper","noWrap","marginTop","src","galileoWhite","alt","galileo","mb","Divider","styled","backgroundColor","children","other","borderRadius","maxWidth","flexGrow","flexBasis","content","p","xl","bgcolor","backgroundImage","AuthPatternDark","backgroundPosition","backgroundRepeat","backgroundSize","overflow","opacity"],"mappings":"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","file":"static/js/20.93819c7a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { login, loginSuccess } from '../../../../redux/auth/actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setLoader } from '../../../../redux/auth/actions';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nlet jwt = require('jsonwebtoken');\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ReactFacebookLogin from 'react-facebook-login';\r\nimport './loginForm.css';\r\nimport { API_URL } from 'utils/axios';\r\nimport FacebookOutlinedIcon from '@mui/icons-material/FacebookOutlined';\r\n\r\nconst LoginForm = ({ loginProp, ...others }) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n\r\n    const loader = useSelector((state) => state.auth.loader);\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setLoader(false));\r\n    }, []);\r\n\r\n    const googleAuthHandle = (data) => {\r\n        const decoded_data = jwt.decode(data.credential);\r\n        axios\r\n            .post(API_URL + 'auth/google/callback/success', {\r\n                data: decoded_data\r\n            })\r\n            .then(function (response) {\r\n                dispatch(loginSuccess(response.data.data));\r\n\r\n                if (!response.data.data.profileCompleted) {\r\n                    navigate('/socialLogin', {\r\n                        state: { socal: response.data.data }\r\n                    });\r\n                } else {\r\n                    navigate('/', {\r\n                        state: { socal: response.data.data }\r\n                    });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                toast.error(error.message);\r\n            });\r\n    };\r\n\r\n    const responseFacebook = (data) => {\r\n        let { email, first_name, last_name } = data;\r\n        axios\r\n            .post(API_URL + 'auth/facebook/callback/success', {\r\n                data: { email, first_name, last_name }\r\n            })\r\n            .then(function (response) {\r\n                dispatch(loginSuccess(response.data.data));\r\n                // console.log(response.data.data.profileCompleted, 'response=====facebook');\r\n\r\n                if (!response.data.data.profileCompleted) {\r\n                    navigate('/socialLogin', {\r\n                        state: { socal: response.data.data }\r\n                    });\r\n                } else {\r\n                    navigate('/', {\r\n                        state: { socal: response.data.data }\r\n                    });\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                toast.error(error.message);\r\n            });\r\n    };\r\n    const responseFacebookFailure = () => {\r\n        toast.error('Facebook login failed');\r\n    };\r\n    return (\r\n        <>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    email: '',\r\n                    password: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Enter valid email').max(255).required('Email is required!'),\r\n                    password: Yup.string().max(255).required('Password is required!')\r\n                })}\r\n                onSubmit={async (values) => {\r\n                    await dispatch(setLoader(true));\r\n                    dispatch(\r\n                        login({\r\n                            email: values.email,\r\n                            password: values.password,\r\n                            navigate: navigate\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email </InputLabel>\r\n                            <OutlinedInput\r\n                                type=\"email\"\r\n                                // value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                // value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={'/forgetPassword'}\r\n                                sx={{ textDecoration: 'none', color: theme.palette.mode === 'dark' ? '#fff' : '#000' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                {/* {loader ? (\r\n                                    <Button\r\n                                        className=\"signbuttonMarket\"\r\n                                        disableElevation\r\n                                        disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        Sign in\r\n                                    </Button>\r\n                                ) : ( */}\r\n                                <Button\r\n                                    className=\"signbuttonMarket\"\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                                {/* )} */}\r\n                            </AnimateButton>\r\n                        </Box>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid mt={2} item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                <Typography variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                    or continue with\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={12}\r\n                            className=\"google\"\r\n                            sx={{\r\n                                width: { xs: '80%', sm: '50%', md: ' 50%', lg: '50%' },\r\n                                margin: { xs: '5px auto', sm: '5px auto', md: ' 8px auto', lg: ' 8px auto' },\r\n                                justifyContent: 'center',\r\n                                marginBottom: '15px'\r\n                            }}\r\n                        >\r\n                            <GoogleLogin\r\n                                select_account={false}\r\n                                auto_select={false}\r\n                                onSuccess={(data) => {\r\n                                    googleAuthHandle(data);\r\n                                }}\r\n                                onError={() => {\r\n                                    toast.error('Google Auth Failed');\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={12}\r\n                            className=\"facebook\"\r\n                            sx={{\r\n                                width: { xs: '80%', sm: '100%', md: ' 100%', lg: '50%' },\r\n                                margin: { xs: '0 auto', sm: '0 auto', sm: '0 auto' }\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                className=\"signbuttonMarket\"\r\n                                startIcon={<FacebookOutlinedIcon />}\r\n                            >\r\n                                <ReactFacebookLogin\r\n                                    appId=\"851727442768362\"\r\n                                    // autoLoad={true}\r\n                                    fields=\"first_name, last_name,email\"\r\n                                    callback={responseFacebook}\r\n                                    onFailure={responseFacebookFailure}\r\n                                    cssClass=\"my-facebook-button-class\"\r\n                                    textButton=\" Login with Facebook\"\r\n                                />\r\n                            </Button>\r\n                        </Grid>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Box, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\nimport AuthWrapper1 from 'shared/component/AuthWrapper';\r\nimport AuthCardWrapper from 'shared/component/AuthCardWrapper';\r\nimport LoginForm from './component/loginForm';\r\n\r\nimport galileo from 'assets/images/galileo.png';\r\nimport galileoWhite from 'assets/images/galileo-white.png';\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid\r\n                container\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ minHeight: '100vh', background: theme.palette.mode === 'dark' ? '#000' : '#fff' }}\r\n            >\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch',\r\n                 display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                            <Box sx={{ display: { xs: 'block',sm:'block', md: 'none', lg:'none' } }}>\r\n                            <Typography variant=\"h6\" noWrap component=\"div\"\r\n                             sx={{ marginTop: '5px', }}>\r\n                                {theme.palette.mode === 'dark' ? (\r\n                                    <img src={galileoWhite} alt=\"Galileo White Logo\" width=\"100\" />\r\n                                ) : (\r\n                                    <img src={galileo} alt=\"Galileo Dark Logo\" width=\"100\" />\r\n                                )}\r\n                            </Typography>\r\n                        </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Typography className=\"signInMarket\" variant=\"subtitle1\">\r\n                                        Sign In\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <LoginForm />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                    <Typography component={Link} to=\"/signUp\" variant=\"subtitle1\"\r\n                                     sx={{ textDecoration: 'none' }}>\r\n                                        Don&apos;t have an account?\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : '#fff',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            borderRadius:'4px',\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","export default __webpack_public_path__ + \"static/media/auth-pattern.46739974.png\";","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth-pattern.png';\r\nimport AuthPatternDark from 'assets/images/auth-pattern.png';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '97%',\r\n                bgcolor: theme.palette.mode === 'dark' ? '#fff': '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n               \r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                overflow: 'hidden',\r\n               margin:'10px',\r\n              \r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n"],"sourceRoot":""}